<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__x64_sys_read (4 samples, 0.02%)</title><rect x="122.2" y="1989" width="0.2" height="15.0" fill="rgb(237,76,38)" rx="2" ry="2" />
<text  x="125.19" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.69%)</title><rect x="55.8" y="149" width="20.0" height="15.0" fill="rgb(212,157,25)" rx="2" ry="2" />
<text  x="58.81" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1877" width="0.6" height="15.0" fill="rgb(238,6,50)" rx="2" ry="2" />
<text  x="1190.64" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (49 samples, 0.25%)</title><rect x="803.8" y="2005" width="2.9" height="15.0" fill="rgb(252,170,26)" rx="2" ry="2" />
<text  x="806.84" y="2015.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="91.6" y="1893" width="0.1" height="15.0" fill="rgb(225,20,51)" rx="2" ry="2" />
<text  x="94.57" y="1903.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (2,993 samples, 14.99%)</title><rect x="574.4" y="1941" width="176.9" height="15.0" fill="rgb(212,111,28)" rx="2" ry="2" />
<text  x="577.44" y="1951.5" >onmt::ITokenizer::toke..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="157.4" y="1685" width="0.1" height="15.0" fill="rgb(240,190,45)" rx="2" ry="2" />
<text  x="160.36" y="1695.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="86.4" y="1573" width="0.1" height="15.0" fill="rgb(232,130,22)" rx="2" ry="2" />
<text  x="89.37" y="1583.5" ></text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.02%)</title><rect x="1111.1" y="2053" width="0.3" height="15.0" fill="rgb(247,201,41)" rx="2" ry="2" />
<text  x="1114.15" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1189" width="0.2" height="15.0" fill="rgb(205,4,53)" rx="2" ry="2" />
<text  x="1190.64" y="1199.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="580.3" y="1877" width="0.2" height="15.0" fill="rgb(210,74,41)" rx="2" ry="2" />
<text  x="583.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="773" width="0.6" height="15.0" fill="rgb(221,56,31)" rx="2" ry="2" />
<text  x="1189.75" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (66 samples, 0.33%)</title><rect x="143.9" y="1749" width="3.9" height="15.0" fill="rgb(213,210,48)" rx="2" ry="2" />
<text  x="146.94" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (655 samples, 3.28%)</title><rect x="1147.7" y="2053" width="38.7" height="15.0" fill="rgb(253,164,42)" rx="2" ry="2" />
<text  x="1150.68" y="2063.5" >std..</text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="178.7" y="1621" width="0.1" height="15.0" fill="rgb(207,10,38)" rx="2" ry="2" />
<text  x="181.70" y="1631.5" ></text>
</g>
<g >
<title>vm_area_dup (3 samples, 0.02%)</title><rect x="761.8" y="1877" width="0.2" height="15.0" fill="rgb(249,135,19)" rx="2" ry="2" />
<text  x="764.81" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.4" y="1173" width="0.1" height="15.0" fill="rgb(229,187,1)" rx="2" ry="2" />
<text  x="219.41" y="1183.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="91.6" y="1925" width="0.1" height="15.0" fill="rgb(225,92,53)" rx="2" ry="2" />
<text  x="94.57" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.9" y="1205" width="0.1" height="15.0" fill="rgb(213,156,33)" rx="2" ry="2" />
<text  x="80.92" y="1215.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.03%)</title><rect x="678.0" y="1733" width="0.3" height="15.0" fill="rgb(246,170,9)" rx="2" ry="2" />
<text  x="680.99" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="453" width="0.6" height="15.0" fill="rgb(212,123,24)" rx="2" ry="2" />
<text  x="1189.75" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="522.7" y="1909" width="0.2" height="15.0" fill="rgb(208,27,47)" rx="2" ry="2" />
<text  x="525.66" y="1919.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (3 samples, 0.02%)</title><rect x="92.9" y="2021" width="0.2" height="15.0" fill="rgb(205,95,7)" rx="2" ry="2" />
<text  x="95.93" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (552 samples, 2.77%)</title><rect x="659.3" y="1877" width="32.6" height="15.0" fill="rgb(226,65,50)" rx="2" ry="2" />
<text  x="662.26" y="1887.5" >on..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="517.2" y="1989" width="0.1" height="15.0" fill="rgb(233,86,45)" rx="2" ry="2" />
<text  x="520.22" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (26 samples, 0.13%)</title><rect x="870.6" y="2005" width="1.6" height="15.0" fill="rgb(230,207,34)" rx="2" ry="2" />
<text  x="873.63" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1829" width="0.6" height="15.0" fill="rgb(212,177,0)" rx="2" ry="2" />
<text  x="1190.64" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,315 samples, 6.59%)</title><rect x="1021.5" y="2053" width="77.8" height="15.0" fill="rgb(222,162,31)" rx="2" ry="2" />
<text  x="1024.54" y="2063.5" >__saniti..</text>
</g>
<g >
<title>handle_mm_fault (53 samples, 0.27%)</title><rect x="25.1" y="1989" width="3.2" height="15.0" fill="rgb(228,127,40)" rx="2" ry="2" />
<text  x="28.13" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (334 samples, 1.67%)</title><rect x="1126.7" y="2053" width="19.7" height="15.0" fill="rgb(231,178,26)" rx="2" ry="2" />
<text  x="1129.69" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1605" width="0.1" height="15.0" fill="rgb(235,125,4)" rx="2" ry="2" />
<text  x="162.43" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="81.8" y="1397" width="0.1" height="15.0" fill="rgb(217,166,1)" rx="2" ry="2" />
<text  x="84.82" y="1407.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="517.6" y="1941" width="0.3" height="15.0" fill="rgb(243,93,21)" rx="2" ry="2" />
<text  x="520.63" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="152.6" y="1749" width="0.1" height="15.0" fill="rgb(226,67,17)" rx="2" ry="2" />
<text  x="155.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="261" width="0.4" height="15.0" fill="rgb(226,228,15)" rx="2" ry="2" />
<text  x="1190.81" y="271.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (7 samples, 0.04%)</title><rect x="44.4" y="2037" width="0.4" height="15.0" fill="rgb(231,60,53)" rx="2" ry="2" />
<text  x="47.40" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="184.4" y="1653" width="0.4" height="15.0" fill="rgb(246,198,39)" rx="2" ry="2" />
<text  x="187.37" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (568 samples, 2.85%)</title><rect x="55.7" y="1893" width="33.6" height="15.0" fill="rgb(249,35,25)" rx="2" ry="2" />
<text  x="58.69" y="1903.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="405" width="0.6" height="15.0" fill="rgb(240,170,1)" rx="2" ry="2" />
<text  x="1189.75" y="415.5" ></text>
</g>
<g >
<title>__kmalloc_node (2 samples, 0.01%)</title><rect x="941.3" y="1829" width="0.1" height="15.0" fill="rgb(236,199,2)" rx="2" ry="2" />
<text  x="944.33" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.17%)</title><rect x="807.1" y="2021" width="2.1" height="15.0" fill="rgb(232,194,52)" rx="2" ry="2" />
<text  x="810.15" y="2031.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="935.5" y="1989" width="0.2" height="15.0" fill="rgb(225,82,28)" rx="2" ry="2" />
<text  x="938.53" y="1999.5" ></text>
</g>
<g >
<title>do_page_fault (133 samples, 0.67%)</title><rect x="933.9" y="2021" width="7.8" height="15.0" fill="rgb(213,188,36)" rx="2" ry="2" />
<text  x="936.88" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="187.5" y="1781" width="0.1" height="15.0" fill="rgb(234,18,40)" rx="2" ry="2" />
<text  x="190.51" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1429" width="0.1" height="15.0" fill="rgb(252,225,21)" rx="2" ry="2" />
<text  x="219.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.42%)</title><rect x="200.2" y="1749" width="4.9" height="15.0" fill="rgb(234,190,32)" rx="2" ry="2" />
<text  x="203.15" y="1759.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="609.5" y="1861" width="0.1" height="15.0" fill="rgb(229,54,6)" rx="2" ry="2" />
<text  x="612.49" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="869.5" y="2021" width="0.2" height="15.0" fill="rgb(209,116,0)" rx="2" ry="2" />
<text  x="872.51" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (480 samples, 2.40%)</title><rect x="159.9" y="1925" width="28.4" height="15.0" fill="rgb(205,82,43)" rx="2" ry="2" />
<text  x="162.90" y="1935.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="134.7" y="1573" width="0.3" height="15.0" fill="rgb(230,47,54)" rx="2" ry="2" />
<text  x="137.72" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1621" width="0.1" height="15.0" fill="rgb(223,90,22)" rx="2" ry="2" />
<text  x="162.43" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="677" width="0.2" height="15.0" fill="rgb(227,189,22)" rx="2" ry="2" />
<text  x="1190.64" y="687.5" ></text>
</g>
<g >
<title>[unknown] (470 samples, 2.35%)</title><rect x="55.8" y="1525" width="27.7" height="15.0" fill="rgb(216,22,16)" rx="2" ry="2" />
<text  x="58.75" y="1535.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="91.9" y="2005" width="0.1" height="15.0" fill="rgb(242,59,11)" rx="2" ry="2" />
<text  x="94.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (465 samples, 2.33%)</title><rect x="160.0" y="1877" width="27.4" height="15.0" fill="rgb(245,125,15)" rx="2" ry="2" />
<text  x="162.96" y="1887.5" >s..</text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="141.4" y="1589" width="0.1" height="15.0" fill="rgb(245,131,45)" rx="2" ry="2" />
<text  x="144.40" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="202.3" y="1605" width="0.1" height="15.0" fill="rgb(234,185,40)" rx="2" ry="2" />
<text  x="205.28" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="123.8" y="1941" width="0.1" height="15.0" fill="rgb(221,86,36)" rx="2" ry="2" />
<text  x="126.79" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1845" width="0.3" height="15.0" fill="rgb(239,139,30)" rx="2" ry="2" />
<text  x="162.19" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (3 samples, 0.02%)</title><rect x="490.6" y="1909" width="0.1" height="15.0" fill="rgb(236,148,25)" rx="2" ry="2" />
<text  x="493.56" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1429" width="0.1" height="15.0" fill="rgb(246,127,49)" rx="2" ry="2" />
<text  x="162.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="741" width="0.1" height="15.0" fill="rgb(249,56,7)" rx="2" ry="2" />
<text  x="1190.52" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="141.9" y="1589" width="0.2" height="15.0" fill="rgb(229,158,28)" rx="2" ry="2" />
<text  x="144.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="160.0" y="1685" width="0.3" height="15.0" fill="rgb(212,184,27)" rx="2" ry="2" />
<text  x="163.02" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.71%)</title><rect x="55.8" y="437" width="20.2" height="15.0" fill="rgb(247,214,45)" rx="2" ry="2" />
<text  x="58.81" y="447.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="80.5" y="1349" width="0.2" height="15.0" fill="rgb(253,110,27)" rx="2" ry="2" />
<text  x="83.46" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="187.9" y="1765" width="0.1" height="15.0" fill="rgb(211,57,42)" rx="2" ry="2" />
<text  x="190.86" y="1775.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="1103.3" y="1893" width="0.3" height="15.0" fill="rgb(206,80,17)" rx="2" ry="2" />
<text  x="1106.35" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.80%)</title><rect x="55.8" y="1109" width="21.3" height="15.0" fill="rgb(224,104,42)" rx="2" ry="2" />
<text  x="58.81" y="1119.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="709" width="0.4" height="15.0" fill="rgb(221,128,0)" rx="2" ry="2" />
<text  x="1190.81" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.38%)</title><rect x="166.1" y="1653" width="4.4" height="15.0" fill="rgb(248,201,8)" rx="2" ry="2" />
<text  x="169.11" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.4" y="1925" width="0.1" height="15.0" fill="rgb(219,59,19)" rx="2" ry="2" />
<text  x="1189.39" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="98.4" y="2021" width="0.1" height="15.0" fill="rgb(235,190,18)" rx="2" ry="2" />
<text  x="101.37" y="2031.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="522.5" y="1893" width="0.2" height="15.0" fill="rgb(234,224,50)" rx="2" ry="2" />
<text  x="525.54" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (528 samples, 2.64%)</title><rect x="55.8" y="1701" width="31.2" height="15.0" fill="rgb(206,178,44)" rx="2" ry="2" />
<text  x="58.75" y="1711.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="2037" width="0.3" height="15.0" fill="rgb(216,214,26)" rx="2" ry="2" />
<text  x="1190.28" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="486.2" y="1925" width="0.2" height="15.0" fill="rgb(240,92,48)" rx="2" ry="2" />
<text  x="489.24" y="1935.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (2 samples, 0.01%)</title><rect x="519.3" y="1973" width="0.2" height="15.0" fill="rgb(236,213,33)" rx="2" ry="2" />
<text  x="522.35" y="1983.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="209.3" y="1637" width="0.2" height="15.0" fill="rgb(233,79,41)" rx="2" ry="2" />
<text  x="212.26" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (17 samples, 0.09%)</title><rect x="1176.7" y="2037" width="1.0" height="15.0" fill="rgb(225,11,5)" rx="2" ry="2" />
<text  x="1179.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1797" width="0.3" height="15.0" fill="rgb(209,167,38)" rx="2" ry="2" />
<text  x="162.19" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.12%)</title><rect x="132.9" y="1845" width="25.1" height="15.0" fill="rgb(252,215,9)" rx="2" ry="2" />
<text  x="135.89" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1381" width="0.1" height="15.0" fill="rgb(220,86,33)" rx="2" ry="2" />
<text  x="1190.52" y="1391.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="85.2" y="1605" width="0.2" height="15.0" fill="rgb(228,215,35)" rx="2" ry="2" />
<text  x="88.19" y="1615.5" ></text>
</g>
<g >
<title>page_fault (22 samples, 0.11%)</title><rect x="54.3" y="2021" width="1.3" height="15.0" fill="rgb(217,202,7)" rx="2" ry="2" />
<text  x="57.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1237" width="0.2" height="15.0" fill="rgb(212,182,10)" rx="2" ry="2" />
<text  x="191.51" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (19 samples, 0.10%)</title><rect x="1188.9" y="2053" width="1.1" height="15.0" fill="rgb(224,213,46)" rx="2" ry="2" />
<text  x="1191.88" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="79.9" y="1253" width="0.1" height="15.0" fill="rgb(212,133,25)" rx="2" ry="2" />
<text  x="82.93" y="1263.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (51 samples, 0.26%)</title><rect x="656.2" y="1877" width="3.1" height="15.0" fill="rgb(222,103,50)" rx="2" ry="2" />
<text  x="659.24" y="1887.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,871 samples, 14.38%)</title><rect x="580.7" y="1909" width="169.7" height="15.0" fill="rgb(235,105,37)" rx="2" ry="2" />
<text  x="583.70" y="1919.5" >onmt::Tokenizer::toke..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (2 samples, 0.01%)</title><rect x="872.2" y="2005" width="0.1" height="15.0" fill="rgb(206,11,27)" rx="2" ry="2" />
<text  x="875.23" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (846 samples, 4.24%)</title><rect x="817.3" y="2021" width="50.0" height="15.0" fill="rgb(211,219,12)" rx="2" ry="2" />
<text  x="820.32" y="2031.5" >[unkn..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.01%)</title><rect x="1188.8" y="2053" width="0.1" height="15.0" fill="rgb(226,74,39)" rx="2" ry="2" />
<text  x="1191.76" y="2063.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.03%)</title><rect x="651.0" y="1781" width="0.3" height="15.0" fill="rgb(223,19,0)" rx="2" ry="2" />
<text  x="654.04" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (527 samples, 2.64%)</title><rect x="55.8" y="1685" width="31.1" height="15.0" fill="rgb(225,177,29)" rx="2" ry="2" />
<text  x="58.75" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="214.9" y="1685" width="0.2" height="15.0" fill="rgb(247,107,50)" rx="2" ry="2" />
<text  x="217.93" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1397" width="0.4" height="15.0" fill="rgb(207,42,42)" rx="2" ry="2" />
<text  x="1190.81" y="1407.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (9 samples, 0.05%)</title><rect x="522.4" y="1925" width="0.5" height="15.0" fill="rgb(223,19,14)" rx="2" ry="2" />
<text  x="525.36" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="81.4" y="1413" width="0.2" height="15.0" fill="rgb(209,113,53)" rx="2" ry="2" />
<text  x="84.40" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="453" width="0.2" height="15.0" fill="rgb(225,222,39)" rx="2" ry="2" />
<text  x="1190.64" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1141" width="0.6" height="15.0" fill="rgb(234,15,14)" rx="2" ry="2" />
<text  x="1189.75" y="1151.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (83 samples, 0.42%)</title><rect x="99.8" y="2037" width="4.9" height="15.0" fill="rgb(241,138,29)" rx="2" ry="2" />
<text  x="102.79" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1813" width="0.1" height="15.0" fill="rgb(228,152,32)" rx="2" ry="2" />
<text  x="521.75" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="809.2" y="2005" width="0.3" height="15.0" fill="rgb(252,171,4)" rx="2" ry="2" />
<text  x="812.22" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="133.0" y="1701" width="0.4" height="15.0" fill="rgb(243,101,24)" rx="2" ry="2" />
<text  x="136.01" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="327.2" y="1957" width="0.2" height="15.0" fill="rgb(245,101,35)" rx="2" ry="2" />
<text  x="330.24" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1973" width="0.2" height="15.0" fill="rgb(234,85,36)" rx="2" ry="2" />
<text  x="1189.39" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="725" width="0.1" height="15.0" fill="rgb(235,162,41)" rx="2" ry="2" />
<text  x="1190.52" y="735.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.74%)</title><rect x="55.8" y="885" width="20.6" height="15.0" fill="rgb(212,64,34)" rx="2" ry="2" />
<text  x="58.81" y="895.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (62 samples, 0.31%)</title><rect x="735.8" y="1877" width="3.7" height="15.0" fill="rgb(213,171,41)" rx="2" ry="2" />
<text  x="738.80" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="517.0" y="1925" width="0.1" height="15.0" fill="rgb(250,10,46)" rx="2" ry="2" />
<text  x="519.98" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="178.0" y="1637" width="0.3" height="15.0" fill="rgb(216,110,40)" rx="2" ry="2" />
<text  x="181.05" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1205" width="0.2" height="15.0" fill="rgb(248,219,10)" rx="2" ry="2" />
<text  x="1190.64" y="1215.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="87.1" y="1733" width="0.2" height="15.0" fill="rgb(243,44,1)" rx="2" ry="2" />
<text  x="90.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1493" width="0.4" height="15.0" fill="rgb(216,190,24)" rx="2" ry="2" />
<text  x="1190.81" y="1503.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="147.4" y="1605" width="0.1" height="15.0" fill="rgb(238,112,21)" rx="2" ry="2" />
<text  x="150.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="549" width="0.4" height="15.0" fill="rgb(249,104,30)" rx="2" ry="2" />
<text  x="1190.81" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1381" width="0.1" height="15.0" fill="rgb(232,172,45)" rx="2" ry="2" />
<text  x="219.17" y="1391.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="155.3" y="1669" width="0.3" height="15.0" fill="rgb(219,184,12)" rx="2" ry="2" />
<text  x="158.29" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1829" width="0.4" height="15.0" fill="rgb(247,61,45)" rx="2" ry="2" />
<text  x="219.11" y="1839.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.8" y="1317" width="0.1" height="15.0" fill="rgb(223,170,13)" rx="2" ry="2" />
<text  x="85.76" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (96 samples, 0.48%)</title><rect x="170.8" y="1653" width="5.7" height="15.0" fill="rgb(207,118,42)" rx="2" ry="2" />
<text  x="173.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1829" width="0.7" height="15.0" fill="rgb(208,135,22)" rx="2" ry="2" />
<text  x="1189.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (420 samples, 2.10%)</title><rect x="132.9" y="1829" width="24.8" height="15.0" fill="rgb(211,212,49)" rx="2" ry="2" />
<text  x="135.89" y="1839.5" >s..</text>
</g>
<g >
<title>__asan_region_is_poisoned (24 samples, 0.12%)</title><rect x="484.8" y="1925" width="1.4" height="15.0" fill="rgb(220,134,3)" rx="2" ry="2" />
<text  x="487.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1317" width="0.2" height="15.0" fill="rgb(228,223,26)" rx="2" ry="2" />
<text  x="191.51" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="997" width="0.1" height="15.0" fill="rgb(228,125,31)" rx="2" ry="2" />
<text  x="1190.52" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="573.5" y="1941" width="0.1" height="15.0" fill="rgb(219,224,38)" rx="2" ry="2" />
<text  x="576.49" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (405 samples, 2.03%)</title><rect x="55.8" y="1301" width="23.9" height="15.0" fill="rgb(231,6,13)" rx="2" ry="2" />
<text  x="58.81" y="1311.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (440 samples, 2.20%)</title><rect x="190.0" y="1941" width="26.1" height="15.0" fill="rgb(215,67,47)" rx="2" ry="2" />
<text  x="193.05" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.5" y="1829" width="0.1" height="15.0" fill="rgb(218,86,2)" rx="2" ry="2" />
<text  x="218.46" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1477" width="0.1" height="15.0" fill="rgb(232,219,2)" rx="2" ry="2" />
<text  x="162.25" y="1487.5" ></text>
</g>
<g >
<title>Preprocess (2 samples, 0.01%)</title><rect x="45.8" y="2037" width="0.1" height="15.0" fill="rgb(251,208,2)" rx="2" ry="2" />
<text  x="48.82" y="2047.5" ></text>
</g>
<g >
<title>unmap_region (5 samples, 0.03%)</title><rect x="762.0" y="1893" width="0.3" height="15.0" fill="rgb(244,86,1)" rx="2" ry="2" />
<text  x="764.99" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.4" y="1957" width="0.1" height="15.0" fill="rgb(252,218,38)" rx="2" ry="2" />
<text  x="1189.39" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_vma (20 samples, 0.10%)</title><rect x="25.7" y="1957" width="1.2" height="15.0" fill="rgb(227,100,19)" rx="2" ry="2" />
<text  x="28.72" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1061" width="0.4" height="15.0" fill="rgb(218,133,23)" rx="2" ry="2" />
<text  x="1190.81" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (64 samples, 0.32%)</title><rect x="211.4" y="1701" width="3.8" height="15.0" fill="rgb(221,143,7)" rx="2" ry="2" />
<text  x="214.44" y="1711.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="517.0" y="1893" width="0.1" height="15.0" fill="rgb(210,162,50)" rx="2" ry="2" />
<text  x="519.98" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.02%)</title><rect x="157.7" y="1813" width="0.2" height="15.0" fill="rgb(213,90,43)" rx="2" ry="2" />
<text  x="160.71" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="87.4" y="1749" width="0.1" height="15.0" fill="rgb(228,23,7)" rx="2" ry="2" />
<text  x="90.37" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="215.6" y="1845" width="0.2" height="15.0" fill="rgb(223,216,5)" rx="2" ry="2" />
<text  x="218.64" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="196.4" y="1605" width="0.1" height="15.0" fill="rgb(234,93,15)" rx="2" ry="2" />
<text  x="199.37" y="1615.5" ></text>
</g>
<g >
<title>TDocument::TDocument (8 samples, 0.04%)</title><rect x="334.7" y="2005" width="0.5" height="15.0" fill="rgb(248,43,31)" rx="2" ry="2" />
<text  x="337.69" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="160.5" y="1637" width="5.3" height="15.0" fill="rgb(224,193,27)" rx="2" ry="2" />
<text  x="163.49" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="1189.8" y="2037" width="0.2" height="15.0" fill="rgb(254,65,13)" rx="2" ry="2" />
<text  x="1192.82" y="2047.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.02%)</title><rect x="55.3" y="1861" width="0.2" height="15.0" fill="rgb(222,111,15)" rx="2" ry="2" />
<text  x="58.28" y="1871.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (16 samples, 0.08%)</title><rect x="29.7" y="2021" width="1.0" height="15.0" fill="rgb(252,163,45)" rx="2" ry="2" />
<text  x="32.74" y="2031.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="26.9" y="1957" width="0.1" height="15.0" fill="rgb(208,29,39)" rx="2" ry="2" />
<text  x="29.91" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (531 samples, 2.66%)</title><rect x="55.8" y="1733" width="31.3" height="15.0" fill="rgb(215,115,33)" rx="2" ry="2" />
<text  x="58.75" y="1743.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1493" width="0.6" height="15.0" fill="rgb(229,194,39)" rx="2" ry="2" />
<text  x="1189.75" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1349" width="0.2" height="15.0" fill="rgb(225,93,38)" rx="2" ry="2" />
<text  x="1190.64" y="1359.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="327.5" y="1957" width="0.2" height="15.0" fill="rgb(248,157,4)" rx="2" ry="2" />
<text  x="330.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="949" width="0.1" height="15.0" fill="rgb(221,118,15)" rx="2" ry="2" />
<text  x="1190.52" y="959.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="197.4" y="1589" width="0.4" height="15.0" fill="rgb(216,14,16)" rx="2" ry="2" />
<text  x="200.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="373" width="0.6" height="15.0" fill="rgb(238,74,48)" rx="2" ry="2" />
<text  x="1189.75" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="622.1" y="1845" width="0.2" height="15.0" fill="rgb(211,38,6)" rx="2" ry="2" />
<text  x="625.08" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="159.2" y="1589" width="0.2" height="15.0" fill="rgb(218,63,39)" rx="2" ry="2" />
<text  x="162.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="629" width="0.2" height="15.0" fill="rgb(246,95,22)" rx="2" ry="2" />
<text  x="1190.64" y="639.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="157.5" y="1701" width="0.2" height="15.0" fill="rgb(248,76,22)" rx="2" ry="2" />
<text  x="160.54" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (12 samples, 0.06%)</title><rect x="764.5" y="2037" width="0.7" height="15.0" fill="rgb(220,182,0)" rx="2" ry="2" />
<text  x="767.47" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.25%)</title><rect x="803.8" y="2021" width="2.9" height="15.0" fill="rgb(214,146,14)" rx="2" ry="2" />
<text  x="806.84" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (500 samples, 2.50%)</title><rect x="542.8" y="1909" width="29.6" height="15.0" fill="rgb(205,174,19)" rx="2" ry="2" />
<text  x="545.81" y="1919.5" >fa..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="208.0" y="1637" width="0.1" height="15.0" fill="rgb(236,213,2)" rx="2" ry="2" />
<text  x="210.96" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1445" width="0.2" height="15.0" fill="rgb(249,8,31)" rx="2" ry="2" />
<text  x="191.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1637" width="0.2" height="15.0" fill="rgb(224,81,38)" rx="2" ry="2" />
<text  x="191.51" y="1647.5" ></text>
</g>
<g >
<title>GetHost (457 samples, 2.29%)</title><rect x="189.7" y="1973" width="27.0" height="15.0" fill="rgb(214,21,29)" rx="2" ry="2" />
<text  x="192.69" y="1983.5" >G..</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (15 samples, 0.08%)</title><rect x="1177.7" y="2037" width="0.9" height="15.0" fill="rgb(220,38,21)" rx="2" ry="2" />
<text  x="1180.71" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="187.7" y="1749" width="0.2" height="15.0" fill="rgb(215,121,50)" rx="2" ry="2" />
<text  x="190.68" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="1103.1" y="2037" width="0.5" height="15.0" fill="rgb(228,208,11)" rx="2" ry="2" />
<text  x="1106.11" y="2047.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="165.2" y="1557" width="0.1" height="15.0" fill="rgb(236,0,28)" rx="2" ry="2" />
<text  x="168.22" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (337 samples, 1.69%)</title><rect x="132.9" y="1813" width="19.9" height="15.0" fill="rgb(214,117,8)" rx="2" ry="2" />
<text  x="135.89" y="1823.5" ></text>
</g>
<g >
<title>__handle_mm_fault (23 samples, 0.12%)</title><rect x="690.5" y="1781" width="1.3" height="15.0" fill="rgb(216,7,37)" rx="2" ry="2" />
<text  x="693.47" y="1791.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (6 samples, 0.03%)</title><rect x="655.9" y="1877" width="0.3" height="15.0" fill="rgb(241,72,3)" rx="2" ry="2" />
<text  x="658.89" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1301" width="0.1" height="15.0" fill="rgb(226,37,7)" rx="2" ry="2" />
<text  x="219.35" y="1311.5" ></text>
</g>
<g >
<title>do_group_exit (8 samples, 0.04%)</title><rect x="1103.1" y="2005" width="0.5" height="15.0" fill="rgb(241,58,9)" rx="2" ry="2" />
<text  x="1106.11" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="533" width="0.4" height="15.0" fill="rgb(224,192,7)" rx="2" ry="2" />
<text  x="1190.81" y="543.5" ></text>
</g>
<g >
<title>[tgnews] (247 samples, 1.24%)</title><rect x="30.7" y="2053" width="14.6" height="15.0" fill="rgb(214,106,1)" rx="2" ry="2" />
<text  x="33.69" y="2063.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="55.2" y="1893" width="0.3" height="15.0" fill="rgb(207,112,3)" rx="2" ry="2" />
<text  x="58.22" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (446 samples, 2.23%)</title><rect x="55.8" y="1445" width="26.3" height="15.0" fill="rgb(221,177,50)" rx="2" ry="2" />
<text  x="58.75" y="1455.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (11 samples, 0.06%)</title><rect x="750.6" y="1909" width="0.7" height="15.0" fill="rgb(221,130,44)" rx="2" ry="2" />
<text  x="753.64" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="135.7" y="1557" width="0.1" height="15.0" fill="rgb(232,76,48)" rx="2" ry="2" />
<text  x="138.67" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.4" y="1909" width="0.1" height="15.0" fill="rgb(241,184,34)" rx="2" ry="2" />
<text  x="1189.39" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.6" y="1861" width="0.2" height="15.0" fill="rgb(225,179,24)" rx="2" ry="2" />
<text  x="218.64" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1093" width="0.4" height="15.0" fill="rgb(228,226,32)" rx="2" ry="2" />
<text  x="1190.81" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="277" width="20.1" height="15.0" fill="rgb(244,38,49)" rx="2" ry="2" />
<text  x="58.81" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="25.5" y="1957" width="0.2" height="15.0" fill="rgb(253,213,9)" rx="2" ry="2" />
<text  x="28.55" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="91.6" y="1957" width="0.1" height="15.0" fill="rgb(249,76,8)" rx="2" ry="2" />
<text  x="94.57" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (52 samples, 0.26%)</title><rect x="154.2" y="1685" width="3.0" height="15.0" fill="rgb(242,225,30)" rx="2" ry="2" />
<text  x="157.17" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.02%)</title><rect x="214.8" y="1669" width="0.1" height="15.0" fill="rgb(222,64,34)" rx="2" ry="2" />
<text  x="217.75" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.14%)</title><rect x="815.7" y="2021" width="1.6" height="15.0" fill="rgb(254,156,35)" rx="2" ry="2" />
<text  x="818.66" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1445" width="0.6" height="15.0" fill="rgb(215,158,43)" rx="2" ry="2" />
<text  x="1189.75" y="1455.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="169.6" y="1573" width="0.1" height="15.0" fill="rgb(214,20,33)" rx="2" ry="2" />
<text  x="172.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.12%)</title><rect x="132.9" y="1861" width="25.1" height="15.0" fill="rgb(233,198,50)" rx="2" ry="2" />
<text  x="135.89" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="69" width="0.6" height="15.0" fill="rgb(243,13,6)" rx="2" ry="2" />
<text  x="1189.75" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1573" width="0.6" height="15.0" fill="rgb(222,5,6)" rx="2" ry="2" />
<text  x="1189.69" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (83 samples, 0.42%)</title><rect x="152.8" y="1733" width="4.9" height="15.0" fill="rgb(236,161,16)" rx="2" ry="2" />
<text  x="155.81" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="837" width="0.1" height="15.0" fill="rgb(223,145,0)" rx="2" ry="2" />
<text  x="1190.52" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="549" width="0.6" height="15.0" fill="rgb(232,5,38)" rx="2" ry="2" />
<text  x="1189.75" y="559.5" ></text>
</g>
<g >
<title>syscall (11 samples, 0.06%)</title><rect x="30.0" y="2005" width="0.7" height="15.0" fill="rgb(214,145,14)" rx="2" ry="2" />
<text  x="33.04" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (3 samples, 0.02%)</title><rect x="868.9" y="1941" width="0.1" height="15.0" fill="rgb(225,223,5)" rx="2" ry="2" />
<text  x="871.86" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="139.2" y="1621" width="0.2" height="15.0" fill="rgb(226,152,25)" rx="2" ry="2" />
<text  x="142.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1189" width="0.4" height="15.0" fill="rgb(241,174,41)" rx="2" ry="2" />
<text  x="1190.81" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="469" width="0.4" height="15.0" fill="rgb(206,189,2)" rx="2" ry="2" />
<text  x="1190.81" y="479.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="55.3" y="1845" width="0.1" height="15.0" fill="rgb(237,113,19)" rx="2" ry="2" />
<text  x="58.28" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="293" width="0.1" height="15.0" fill="rgb(247,94,44)" rx="2" ry="2" />
<text  x="1190.52" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="581" width="0.4" height="15.0" fill="rgb(207,200,30)" rx="2" ry="2" />
<text  x="1190.81" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1365" width="0.2" height="15.0" fill="rgb(242,226,29)" rx="2" ry="2" />
<text  x="1190.64" y="1375.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (6 samples, 0.03%)</title><rect x="519.5" y="2037" width="0.4" height="15.0" fill="rgb(247,154,54)" rx="2" ry="2" />
<text  x="522.52" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="146.0" y="1605" width="0.2" height="15.0" fill="rgb(216,192,54)" rx="2" ry="2" />
<text  x="148.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1301" width="0.1" height="15.0" fill="rgb(230,17,28)" rx="2" ry="2" />
<text  x="1190.52" y="1311.5" ></text>
</g>
<g >
<title>strlen@plt (9 samples, 0.05%)</title><rect x="749.9" y="1893" width="0.5" height="15.0" fill="rgb(254,118,32)" rx="2" ry="2" />
<text  x="752.87" y="1903.5" ></text>
</g>
<g >
<title>wp_page_copy (82 samples, 0.41%)</title><rect x="936.7" y="1941" width="4.8" height="15.0" fill="rgb(239,150,41)" rx="2" ry="2" />
<text  x="939.66" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (21 samples, 0.11%)</title><rect x="651.5" y="1877" width="1.3" height="15.0" fill="rgb(243,181,11)" rx="2" ry="2" />
<text  x="654.51" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="213.9" y="1669" width="0.1" height="15.0" fill="rgb(229,207,13)" rx="2" ry="2" />
<text  x="216.93" y="1679.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (3 samples, 0.02%)</title><rect x="1101.9" y="1797" width="0.2" height="15.0" fill="rgb(244,145,51)" rx="2" ry="2" />
<text  x="1104.93" y="1807.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (27 samples, 0.14%)</title><rect x="1101.2" y="1989" width="1.6" height="15.0" fill="rgb(218,183,45)" rx="2" ry="2" />
<text  x="1104.22" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="661" width="0.1" height="15.0" fill="rgb(230,21,54)" rx="2" ry="2" />
<text  x="1190.52" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1733" width="0.2" height="15.0" fill="rgb(244,46,22)" rx="2" ry="2" />
<text  x="191.45" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1637" width="0.1" height="15.0" fill="rgb(224,83,34)" rx="2" ry="2" />
<text  x="162.43" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (137 samples, 0.69%)</title><rect x="314.9" y="1957" width="8.1" height="15.0" fill="rgb(213,13,8)" rx="2" ry="2" />
<text  x="317.89" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="29.2" y="2037" width="0.1" height="15.0" fill="rgb(237,139,29)" rx="2" ry="2" />
<text  x="32.15" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="277" width="0.2" height="15.0" fill="rgb(233,108,30)" rx="2" ry="2" />
<text  x="1190.64" y="287.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="495.9" y="1941" width="0.2" height="15.0" fill="rgb(205,75,41)" rx="2" ry="2" />
<text  x="498.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="821" width="20.5" height="15.0" fill="rgb(235,32,40)" rx="2" ry="2" />
<text  x="58.81" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (249 samples, 1.25%)</title><rect x="190.4" y="1781" width="14.7" height="15.0" fill="rgb(226,50,32)" rx="2" ry="2" />
<text  x="193.40" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1589" width="0.1" height="15.0" fill="rgb(232,37,31)" rx="2" ry="2" />
<text  x="162.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="741" width="0.6" height="15.0" fill="rgb(248,226,45)" rx="2" ry="2" />
<text  x="1189.75" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="549" width="0.2" height="15.0" fill="rgb(241,123,53)" rx="2" ry="2" />
<text  x="1190.64" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="610.2" y="1861" width="0.2" height="15.0" fill="rgb(232,177,8)" rx="2" ry="2" />
<text  x="613.20" y="1871.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="202.4" y="1605" width="0.1" height="15.0" fill="rgb(239,206,41)" rx="2" ry="2" />
<text  x="205.40" y="1615.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="142.5" y="1589" width="0.3" height="15.0" fill="rgb(207,127,43)" rx="2" ry="2" />
<text  x="145.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1733" width="0.2" height="15.0" fill="rgb(240,88,14)" rx="2" ry="2" />
<text  x="219.11" y="1743.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (21 samples, 0.11%)</title><rect x="940.0" y="1797" width="1.3" height="15.0" fill="rgb(213,105,36)" rx="2" ry="2" />
<text  x="943.03" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1077" width="0.1" height="15.0" fill="rgb(221,84,28)" rx="2" ry="2" />
<text  x="191.57" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1253" width="0.2" height="15.0" fill="rgb(210,164,23)" rx="2" ry="2" />
<text  x="191.51" y="1263.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="518.8" y="1893" width="0.1" height="15.0" fill="rgb(209,121,37)" rx="2" ry="2" />
<text  x="521.75" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1525" width="0.1" height="15.0" fill="rgb(248,26,14)" rx="2" ry="2" />
<text  x="162.43" y="1535.5" ></text>
</g>
<g >
<title>__do_page_fault (27 samples, 0.14%)</title><rect x="499.4" y="1893" width="1.6" height="15.0" fill="rgb(224,98,46)" rx="2" ry="2" />
<text  x="502.43" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="156.7" y="1669" width="0.4" height="15.0" fill="rgb(215,185,19)" rx="2" ry="2" />
<text  x="159.65" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="725" width="0.6" height="15.0" fill="rgb(222,63,17)" rx="2" ry="2" />
<text  x="1189.75" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1781" width="0.6" height="15.0" fill="rgb(224,84,1)" rx="2" ry="2" />
<text  x="1190.64" y="1791.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.8" y="1397" width="0.1" height="15.0" fill="rgb(218,141,30)" rx="2" ry="2" />
<text  x="85.76" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1669" width="0.2" height="15.0" fill="rgb(218,66,25)" rx="2" ry="2" />
<text  x="1190.64" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="79.6" y="1285" width="0.1" height="15.0" fill="rgb(220,218,22)" rx="2" ry="2" />
<text  x="82.63" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="165.9" y="1669" width="0.1" height="15.0" fill="rgb(252,74,2)" rx="2" ry="2" />
<text  x="168.93" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.25%)</title><rect x="196.5" y="1605" width="2.9" height="15.0" fill="rgb(218,130,7)" rx="2" ry="2" />
<text  x="199.55" y="1615.5" ></text>
</g>
<g >
<title>std::locale::operator= (2 samples, 0.01%)</title><rect x="158.8" y="1925" width="0.2" height="15.0" fill="rgb(220,218,54)" rx="2" ry="2" />
<text  x="161.84" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (6 samples, 0.03%)</title><rect x="765.2" y="2037" width="0.3" height="15.0" fill="rgb(250,134,15)" rx="2" ry="2" />
<text  x="768.18" y="2047.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (133 samples, 0.67%)</title><rect x="501.0" y="1925" width="7.9" height="15.0" fill="rgb(231,107,0)" rx="2" ry="2" />
<text  x="504.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1877" width="0.2" height="15.0" fill="rgb(246,141,44)" rx="2" ry="2" />
<text  x="1190.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1509" width="0.2" height="15.0" fill="rgb(223,95,48)" rx="2" ry="2" />
<text  x="162.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1509" width="0.6" height="15.0" fill="rgb(227,31,31)" rx="2" ry="2" />
<text  x="1189.69" y="1519.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="150.6" y="1637" width="0.1" height="15.0" fill="rgb(206,73,17)" rx="2" ry="2" />
<text  x="153.62" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="215.6" y="1813" width="0.2" height="15.0" fill="rgb(228,178,34)" rx="2" ry="2" />
<text  x="218.64" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (82 samples, 0.41%)</title><rect x="195.0" y="1653" width="4.9" height="15.0" fill="rgb(248,204,39)" rx="2" ry="2" />
<text  x="198.01" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="82.1" y="1445" width="0.1" height="15.0" fill="rgb(228,22,16)" rx="2" ry="2" />
<text  x="85.11" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.01%)</title><rect x="215.5" y="1813" width="0.1" height="15.0" fill="rgb(214,134,7)" rx="2" ry="2" />
<text  x="218.46" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="88.2" y="1813" width="0.2" height="15.0" fill="rgb(214,102,54)" rx="2" ry="2" />
<text  x="91.20" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="917" width="0.1" height="15.0" fill="rgb(231,19,48)" rx="2" ry="2" />
<text  x="1190.52" y="927.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="761.2" y="1989" width="0.2" height="15.0" fill="rgb(247,51,16)" rx="2" ry="2" />
<text  x="764.16" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="79.6" y="1237" width="0.1" height="15.0" fill="rgb(209,154,0)" rx="2" ry="2" />
<text  x="82.63" y="1247.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="654.8" y="1861" width="0.4" height="15.0" fill="rgb(218,163,51)" rx="2" ry="2" />
<text  x="657.76" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="91.3" y="2005" width="0.2" height="15.0" fill="rgb(229,92,29)" rx="2" ry="2" />
<text  x="94.33" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="152.5" y="1685" width="0.1" height="15.0" fill="rgb(234,51,35)" rx="2" ry="2" />
<text  x="155.45" y="1695.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="152.3" y="1669" width="0.2" height="15.0" fill="rgb(251,122,49)" rx="2" ry="2" />
<text  x="155.28" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="160.1" y="1621" width="0.2" height="15.0" fill="rgb(211,158,26)" rx="2" ry="2" />
<text  x="163.14" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="192.2" y="1573" width="0.2" height="15.0" fill="rgb(227,194,22)" rx="2" ry="2" />
<text  x="195.23" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.74%)</title><rect x="55.8" y="869" width="20.6" height="15.0" fill="rgb(208,115,45)" rx="2" ry="2" />
<text  x="58.81" y="879.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.05%)</title><rect x="30.0" y="1941" width="0.6" height="15.0" fill="rgb(227,151,6)" rx="2" ry="2" />
<text  x="33.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.07%)</title><rect x="763.2" y="2021" width="0.8" height="15.0" fill="rgb(217,122,49)" rx="2" ry="2" />
<text  x="766.23" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.4" y="1941" width="0.1" height="15.0" fill="rgb(253,28,27)" rx="2" ry="2" />
<text  x="1189.39" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (4 samples, 0.02%)</title><rect x="133.1" y="1653" width="0.3" height="15.0" fill="rgb(209,80,10)" rx="2" ry="2" />
<text  x="136.12" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="437" width="0.1" height="15.0" fill="rgb(234,119,40)" rx="2" ry="2" />
<text  x="1190.52" y="447.5" ></text>
</g>
<g >
<title>do_exit (8 samples, 0.04%)</title><rect x="1103.1" y="1989" width="0.5" height="15.0" fill="rgb(254,102,16)" rx="2" ry="2" />
<text  x="1106.11" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.70%)</title><rect x="55.8" y="197" width="20.0" height="15.0" fill="rgb(236,80,1)" rx="2" ry="2" />
<text  x="58.81" y="207.5" ></text>
</g>
<g >
<title>smp_call_function_single (22 samples, 0.11%)</title><rect x="940.0" y="1829" width="1.3" height="15.0" fill="rgb(244,91,5)" rx="2" ry="2" />
<text  x="942.97" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1189" width="0.1" height="15.0" fill="rgb(237,187,40)" rx="2" ry="2" />
<text  x="162.43" y="1199.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (2 samples, 0.01%)</title><rect x="521.9" y="2037" width="0.2" height="15.0" fill="rgb(242,197,26)" rx="2" ry="2" />
<text  x="524.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="597" width="0.1" height="15.0" fill="rgb(207,223,54)" rx="2" ry="2" />
<text  x="1190.52" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="597" width="0.6" height="15.0" fill="rgb(250,137,10)" rx="2" ry="2" />
<text  x="1189.75" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (22 samples, 0.11%)</title><rect x="54.3" y="2005" width="1.3" height="15.0" fill="rgb(213,157,11)" rx="2" ry="2" />
<text  x="57.27" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="55.0" y="1909" width="0.2" height="15.0" fill="rgb(241,112,38)" rx="2" ry="2" />
<text  x="57.98" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="789" width="20.5" height="15.0" fill="rgb(242,87,54)" rx="2" ry="2" />
<text  x="58.81" y="799.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (22 samples, 0.11%)</title><rect x="98.5" y="2037" width="1.3" height="15.0" fill="rgb(239,73,27)" rx="2" ry="2" />
<text  x="101.49" y="2047.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.3" y="1317" width="0.2" height="15.0" fill="rgb(247,50,21)" rx="2" ry="2" />
<text  x="85.35" y="1327.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (3 samples, 0.02%)</title><rect x="762.9" y="2037" width="0.2" height="15.0" fill="rgb(233,34,19)" rx="2" ry="2" />
<text  x="765.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1477" width="0.6" height="15.0" fill="rgb(220,42,3)" rx="2" ry="2" />
<text  x="1189.75" y="1487.5" ></text>
</g>
<g >
<title>mmput (8 samples, 0.04%)</title><rect x="1103.1" y="1973" width="0.5" height="15.0" fill="rgb(216,189,35)" rx="2" ry="2" />
<text  x="1106.11" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,172 samples, 5.87%)</title><rect x="872.5" y="2053" width="69.2" height="15.0" fill="rgb(245,229,31)" rx="2" ry="2" />
<text  x="875.46" y="2063.5" >__asan:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="325" width="0.4" height="15.0" fill="rgb(243,77,4)" rx="2" ry="2" />
<text  x="1190.81" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (5 samples, 0.03%)</title><rect x="867.4" y="2037" width="0.3" height="15.0" fill="rgb(217,97,1)" rx="2" ry="2" />
<text  x="870.38" y="2047.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.10%)</title><rect x="54.4" y="1973" width="1.2" height="15.0" fill="rgb(226,13,32)" rx="2" ry="2" />
<text  x="57.39" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1397" width="0.1" height="15.0" fill="rgb(254,9,41)" rx="2" ry="2" />
<text  x="162.43" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="159.1" y="1893" width="0.4" height="15.0" fill="rgb(220,105,13)" rx="2" ry="2" />
<text  x="162.13" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.06%)</title><rect x="815.7" y="1973" width="0.7" height="15.0" fill="rgb(243,28,42)" rx="2" ry="2" />
<text  x="818.66" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="805" width="0.4" height="15.0" fill="rgb(213,129,35)" rx="2" ry="2" />
<text  x="1190.81" y="815.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (33 samples, 0.17%)</title><rect x="960.9" y="2053" width="1.9" height="15.0" fill="rgb(206,4,44)" rx="2" ry="2" />
<text  x="963.89" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="10.0" y="2005" width="0.1" height="15.0" fill="rgb(241,18,25)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1077" width="0.2" height="15.0" fill="rgb(249,115,18)" rx="2" ry="2" />
<text  x="1190.64" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (472 samples, 2.36%)</title><rect x="55.8" y="1541" width="27.9" height="15.0" fill="rgb(225,126,11)" rx="2" ry="2" />
<text  x="58.75" y="1551.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (8 samples, 0.04%)</title><rect x="45.3" y="2005" width="0.5" height="15.0" fill="rgb(229,131,38)" rx="2" ry="2" />
<text  x="48.35" y="2015.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="609.8" y="1861" width="0.3" height="15.0" fill="rgb(206,117,41)" rx="2" ry="2" />
<text  x="612.84" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (2 samples, 0.01%)</title><rect x="753.2" y="2037" width="0.2" height="15.0" fill="rgb(239,119,8)" rx="2" ry="2" />
<text  x="756.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (370 samples, 1.85%)</title><rect x="55.8" y="1173" width="21.9" height="15.0" fill="rgb(248,58,1)" rx="2" ry="2" />
<text  x="58.81" y="1183.5" >[..</text>
</g>
<g >
<title>[unknown] (535 samples, 2.68%)</title><rect x="55.8" y="1749" width="31.6" height="15.0" fill="rgb(214,9,2)" rx="2" ry="2" />
<text  x="58.75" y="1759.5" >[u..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="210.3" y="1669" width="0.1" height="15.0" fill="rgb(215,20,19)" rx="2" ry="2" />
<text  x="213.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1397" width="0.2" height="15.0" fill="rgb(246,91,3)" rx="2" ry="2" />
<text  x="1190.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (7 samples, 0.04%)</title><rect x="190.5" y="1685" width="0.4" height="15.0" fill="rgb(223,152,36)" rx="2" ry="2" />
<text  x="193.46" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1525" width="0.2" height="15.0" fill="rgb(250,80,34)" rx="2" ry="2" />
<text  x="191.51" y="1535.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="1111.4" y="2053" width="0.1" height="15.0" fill="rgb(212,46,31)" rx="2" ry="2" />
<text  x="1114.38" y="2063.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1429" width="0.1" height="15.0" fill="rgb(225,121,53)" rx="2" ry="2" />
<text  x="86.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="215.8" y="1893" width="0.3" height="15.0" fill="rgb(206,106,10)" rx="2" ry="2" />
<text  x="218.76" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (22 samples, 0.11%)</title><rect x="678.9" y="1861" width="1.3" height="15.0" fill="rgb(225,121,21)" rx="2" ry="2" />
<text  x="681.88" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="186.9" y="1669" width="0.1" height="15.0" fill="rgb(214,180,35)" rx="2" ry="2" />
<text  x="189.86" y="1679.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.02%)</title><rect x="762.7" y="1909" width="0.2" height="15.0" fill="rgb(206,183,48)" rx="2" ry="2" />
<text  x="765.70" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1301" width="0.1" height="15.0" fill="rgb(211,56,54)" rx="2" ry="2" />
<text  x="219.17" y="1311.5" ></text>
</g>
<g >
<title>RunFasttextClf (551 samples, 2.76%)</title><rect x="540.4" y="1957" width="32.6" height="15.0" fill="rgb(217,193,0)" rx="2" ry="2" />
<text  x="543.39" y="1967.5" >Ru..</text>
</g>
<g >
<title>TDocument::FromJson (6 samples, 0.03%)</title><rect x="122.7" y="1973" width="0.3" height="15.0" fill="rgb(233,129,42)" rx="2" ry="2" />
<text  x="125.66" y="1983.5" ></text>
</g>
<g >
<title>vma_merge (2 samples, 0.01%)</title><rect x="762.6" y="1909" width="0.1" height="15.0" fill="rgb(244,50,53)" rx="2" ry="2" />
<text  x="765.58" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (26 samples, 0.13%)</title><rect x="810.5" y="2037" width="1.5" height="15.0" fill="rgb(237,162,35)" rx="2" ry="2" />
<text  x="813.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1061" width="0.2" height="15.0" fill="rgb(233,10,52)" rx="2" ry="2" />
<text  x="1190.64" y="1071.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (4 samples, 0.02%)</title><rect x="761.2" y="2037" width="0.2" height="15.0" fill="rgb(227,4,28)" rx="2" ry="2" />
<text  x="764.16" y="2047.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="522.5" y="1861" width="0.2" height="15.0" fill="rgb(245,11,18)" rx="2" ry="2" />
<text  x="525.54" y="1871.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="517.0" y="1877" width="0.1" height="15.0" fill="rgb(215,221,39)" rx="2" ry="2" />
<text  x="519.98" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1189.6" y="1989" width="0.2" height="15.0" fill="rgb(238,209,38)" rx="2" ry="2" />
<text  x="1192.59" y="1999.5" ></text>
</g>
<g >
<title>DetectCategory (240 samples, 1.20%)</title><rect x="526.2" y="1973" width="14.2" height="15.0" fill="rgb(233,74,52)" rx="2" ry="2" />
<text  x="529.20" y="1983.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (2 samples, 0.01%)</title><rect x="941.3" y="1845" width="0.1" height="15.0" fill="rgb(205,101,38)" rx="2" ry="2" />
<text  x="944.33" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (27 samples, 0.14%)</title><rect x="1101.2" y="2005" width="1.6" height="15.0" fill="rgb(240,118,14)" rx="2" ry="2" />
<text  x="1104.22" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.16%)</title><rect x="867.7" y="2021" width="1.8" height="15.0" fill="rgb(218,99,32)" rx="2" ry="2" />
<text  x="870.68" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1525" width="0.4" height="15.0" fill="rgb(233,89,45)" rx="2" ry="2" />
<text  x="1190.81" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1781" width="0.2" height="15.0" fill="rgb(248,37,13)" rx="2" ry="2" />
<text  x="191.45" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1621" width="0.2" height="15.0" fill="rgb(250,88,43)" rx="2" ry="2" />
<text  x="219.11" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (592 samples, 2.97%)</title><rect x="55.7" y="1941" width="35.0" height="15.0" fill="rgb(212,23,36)" rx="2" ry="2" />
<text  x="58.69" y="1951.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.41%)</title><rect x="195.0" y="1685" width="4.9" height="15.0" fill="rgb(238,10,28)" rx="2" ry="2" />
<text  x="198.01" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="485" width="0.2" height="15.0" fill="rgb(245,214,11)" rx="2" ry="2" />
<text  x="1190.64" y="495.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="133.2" y="1637" width="0.1" height="15.0" fill="rgb(239,138,21)" rx="2" ry="2" />
<text  x="136.18" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="517.6" y="1973" width="0.3" height="15.0" fill="rgb(241,81,7)" rx="2" ry="2" />
<text  x="520.63" y="1983.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="597.7" y="1877" width="0.4" height="15.0" fill="rgb(228,59,44)" rx="2" ry="2" />
<text  x="600.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1621" width="0.1" height="15.0" fill="rgb(240,156,32)" rx="2" ry="2" />
<text  x="219.35" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (490 samples, 2.45%)</title><rect x="55.8" y="1589" width="28.9" height="15.0" fill="rgb(230,150,45)" rx="2" ry="2" />
<text  x="58.75" y="1599.5" >[u..</text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1099.1" y="2037" width="0.2" height="15.0" fill="rgb(247,190,27)" rx="2" ry="2" />
<text  x="1102.09" y="2047.5" ></text>
</g>
<g >
<title>__clock_gettime (9 samples, 0.05%)</title><rect x="121.6" y="2037" width="0.5" height="15.0" fill="rgb(229,205,20)" rx="2" ry="2" />
<text  x="124.60" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (15 samples, 0.08%)</title><rect x="1146.4" y="2053" width="0.9" height="15.0" fill="rgb(250,150,46)" rx="2" ry="2" />
<text  x="1149.44" y="2063.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (6 samples, 0.03%)</title><rect x="1101.7" y="1861" width="0.4" height="15.0" fill="rgb(252,87,50)" rx="2" ry="2" />
<text  x="1104.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1029" width="0.4" height="15.0" fill="rgb(244,78,53)" rx="2" ry="2" />
<text  x="1190.81" y="1039.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="609.6" y="1861" width="0.2" height="15.0" fill="rgb(249,208,5)" rx="2" ry="2" />
<text  x="612.61" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="101" width="0.1" height="15.0" fill="rgb(215,148,38)" rx="2" ry="2" />
<text  x="1190.52" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="549" width="0.1" height="15.0" fill="rgb(224,79,12)" rx="2" ry="2" />
<text  x="1190.52" y="559.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="651.1" y="1765" width="0.2" height="15.0" fill="rgb(224,143,27)" rx="2" ry="2" />
<text  x="654.10" y="1775.5" ></text>
</g>
<g >
<title>[tgnews] (2 samples, 0.01%)</title><rect x="55.6" y="2037" width="0.1" height="15.0" fill="rgb(238,204,21)" rx="2" ry="2" />
<text  x="58.57" y="2047.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (30 samples, 0.15%)</title><rect x="28.9" y="2053" width="1.8" height="15.0" fill="rgb(248,196,8)" rx="2" ry="2" />
<text  x="31.91" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="867.4" y="2005" width="0.3" height="15.0" fill="rgb(253,209,48)" rx="2" ry="2" />
<text  x="870.38" y="2015.5" ></text>
</g>
<g >
<title>do_wp_page (16 samples, 0.08%)</title><rect x="54.5" y="1941" width="1.0" height="15.0" fill="rgb(215,154,23)" rx="2" ry="2" />
<text  x="57.51" y="1951.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="581.6" y="1893" width="0.2" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="584.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.3" y="1893" width="0.4" height="15.0" fill="rgb(242,104,15)" rx="2" ry="2" />
<text  x="191.33" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1187.8" y="1637" width="0.4" height="15.0" fill="rgb(246,92,2)" rx="2" ry="2" />
<text  x="1190.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.3" y="1685" width="0.2" height="15.0" fill="rgb(213,165,47)" rx="2" ry="2" />
<text  x="219.29" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="645" width="20.4" height="15.0" fill="rgb(228,82,25)" rx="2" ry="2" />
<text  x="58.81" y="655.5" ></text>
</g>
<g >
<title>[unknown] (422 samples, 2.11%)</title><rect x="55.8" y="1365" width="25.0" height="15.0" fill="rgb(211,34,26)" rx="2" ry="2" />
<text  x="58.81" y="1375.5" >[..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (74 samples, 0.37%)</title><rect x="153.2" y="1701" width="4.3" height="15.0" fill="rgb(222,17,9)" rx="2" ry="2" />
<text  x="156.16" y="1711.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (313 samples, 1.57%)</title><rect x="223.2" y="1941" width="18.5" height="15.0" fill="rgb(223,205,8)" rx="2" ry="2" />
<text  x="226.21" y="1951.5" ></text>
</g>
<g >
<title>page_fault (35 samples, 0.18%)</title><rect x="508.9" y="1957" width="2.1" height="15.0" fill="rgb(234,87,49)" rx="2" ry="2" />
<text  x="511.88" y="1967.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (3 samples, 0.02%)</title><rect x="650.6" y="1877" width="0.1" height="15.0" fill="rgb(250,187,0)" rx="2" ry="2" />
<text  x="653.57" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="85.4" y="1605" width="0.1" height="15.0" fill="rgb(208,199,42)" rx="2" ry="2" />
<text  x="88.36" y="1615.5" ></text>
</g>
<g >
<title>__do_page_fault (22 samples, 0.11%)</title><rect x="54.3" y="1989" width="1.3" height="15.0" fill="rgb(245,120,29)" rx="2" ry="2" />
<text  x="57.27" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="645" width="0.2" height="15.0" fill="rgb(247,66,23)" rx="2" ry="2" />
<text  x="1190.64" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="86.4" y="1637" width="0.1" height="15.0" fill="rgb(224,45,17)" rx="2" ry="2" />
<text  x="89.37" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="159.2" y="1541" width="0.2" height="15.0" fill="rgb(211,15,2)" rx="2" ry="2" />
<text  x="162.19" y="1551.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="86.4" y="1557" width="0.1" height="15.0" fill="rgb(217,25,34)" rx="2" ry="2" />
<text  x="89.37" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="82.5" y="1461" width="0.1" height="15.0" fill="rgb(212,49,15)" rx="2" ry="2" />
<text  x="85.47" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (62 samples, 0.31%)</title><rect x="148.6" y="1669" width="3.6" height="15.0" fill="rgb(226,52,10)" rx="2" ry="2" />
<text  x="151.55" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1765" width="0.2" height="15.0" fill="rgb(231,172,4)" rx="2" ry="2" />
<text  x="1190.40" y="1775.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="681.2" y="1861" width="0.1" height="15.0" fill="rgb(235,215,11)" rx="2" ry="2" />
<text  x="684.19" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1861" width="0.2" height="15.0" fill="rgb(210,200,19)" rx="2" ry="2" />
<text  x="1190.40" y="1871.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (365 samples, 1.83%)</title><rect x="601.6" y="1877" width="21.5" height="15.0" fill="rgb(233,224,13)" rx="2" ry="2" />
<text  x="604.57" y="1887.5" >o..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.0" y="1397" width="0.1" height="15.0" fill="rgb(246,101,44)" rx="2" ry="2" />
<text  x="85.00" y="1407.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.05%)</title><rect x="500.2" y="1813" width="0.5" height="15.0" fill="rgb(254,158,2)" rx="2" ry="2" />
<text  x="503.19" y="1823.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (4 samples, 0.02%)</title><rect x="730.1" y="1893" width="0.3" height="15.0" fill="rgb(206,151,42)" rx="2" ry="2" />
<text  x="733.13" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (54 samples, 0.27%)</title><rect x="207.1" y="1653" width="3.2" height="15.0" fill="rgb(225,120,32)" rx="2" ry="2" />
<text  x="210.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1221" width="0.1" height="15.0" fill="rgb(235,146,19)" rx="2" ry="2" />
<text  x="162.43" y="1231.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (323 samples, 1.62%)</title><rect x="380.2" y="1941" width="19.1" height="15.0" fill="rgb(225,185,45)" rx="2" ry="2" />
<text  x="383.20" y="1951.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="163.7" y="1541" width="0.5" height="15.0" fill="rgb(221,117,34)" rx="2" ry="2" />
<text  x="166.74" y="1551.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.8" y="1365" width="0.1" height="15.0" fill="rgb(217,143,6)" rx="2" ry="2" />
<text  x="85.76" y="1375.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (13 samples, 0.07%)</title><rect x="535.8" y="1909" width="0.7" height="15.0" fill="rgb(236,151,30)" rx="2" ry="2" />
<text  x="538.78" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (184 samples, 0.92%)</title><rect x="132.9" y="1749" width="10.9" height="15.0" fill="rgb(244,183,13)" rx="2" ry="2" />
<text  x="135.95" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (565 samples, 2.83%)</title><rect x="55.7" y="1877" width="33.4" height="15.0" fill="rgb(246,164,34)" rx="2" ry="2" />
<text  x="58.69" y="1887.5" >[u..</text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (8 samples, 0.04%)</title><rect x="92.0" y="2021" width="0.5" height="15.0" fill="rgb(211,201,19)" rx="2" ry="2" />
<text  x="95.04" y="2031.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (548 samples, 2.75%)</title><rect x="540.6" y="1941" width="32.4" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="543.57" y="1951.5" >fa..</text>
</g>
<g >
<title>vfs_read (4 samples, 0.02%)</title><rect x="122.2" y="1957" width="0.2" height="15.0" fill="rgb(210,111,42)" rx="2" ry="2" />
<text  x="125.19" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="245" width="20.1" height="15.0" fill="rgb(208,46,29)" rx="2" ry="2" />
<text  x="58.81" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="869" width="0.4" height="15.0" fill="rgb(254,225,41)" rx="2" ry="2" />
<text  x="1190.81" y="879.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="91.6" y="1941" width="0.1" height="15.0" fill="rgb(228,182,40)" rx="2" ry="2" />
<text  x="94.57" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="84.0" y="1557" width="0.2" height="15.0" fill="rgb(222,145,50)" rx="2" ry="2" />
<text  x="87.00" y="1567.5" ></text>
</g>
<g >
<title>page_fault (86 samples, 0.43%)</title><rect x="23.5" y="2037" width="5.1" height="15.0" fill="rgb(232,34,28)" rx="2" ry="2" />
<text  x="26.48" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (86 samples, 0.43%)</title><rect x="23.5" y="2021" width="5.1" height="15.0" fill="rgb(235,106,43)" rx="2" ry="2" />
<text  x="26.48" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1957" width="0.2" height="15.0" fill="rgb(235,202,52)" rx="2" ry="2" />
<text  x="1190.40" y="1967.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.02%)</title><rect x="762.7" y="1941" width="0.2" height="15.0" fill="rgb(223,219,10)" rx="2" ry="2" />
<text  x="765.70" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (26 samples, 0.13%)</title><rect x="867.7" y="1989" width="1.5" height="15.0" fill="rgb(211,205,19)" rx="2" ry="2" />
<text  x="870.68" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1237" width="0.4" height="15.0" fill="rgb(243,122,14)" rx="2" ry="2" />
<text  x="1190.81" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="805" width="0.6" height="15.0" fill="rgb(232,226,12)" rx="2" ry="2" />
<text  x="1189.75" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1045" width="0.1" height="15.0" fill="rgb(242,72,13)" rx="2" ry="2" />
<text  x="1190.52" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="179.5" y="1621" width="0.4" height="15.0" fill="rgb(246,223,46)" rx="2" ry="2" />
<text  x="182.53" y="1631.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.02%)</title><rect x="1112.0" y="1909" width="0.2" height="15.0" fill="rgb(224,146,30)" rx="2" ry="2" />
<text  x="1114.98" y="1919.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.06%)</title><rect x="650.7" y="1877" width="0.8" height="15.0" fill="rgb(237,33,41)" rx="2" ry="2" />
<text  x="653.75" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (35 samples, 0.18%)</title><rect x="1173.8" y="2037" width="2.1" height="15.0" fill="rgb(250,199,29)" rx="2" ry="2" />
<text  x="1176.80" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1989" width="0.7" height="15.0" fill="rgb(250,53,13)" rx="2" ry="2" />
<text  x="1189.63" y="1999.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="750.4" y="1909" width="0.2" height="15.0" fill="rgb(212,91,23)" rx="2" ry="2" />
<text  x="753.40" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="677" width="0.4" height="15.0" fill="rgb(218,126,46)" rx="2" ry="2" />
<text  x="1190.81" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="194.2" y="1557" width="0.3" height="15.0" fill="rgb(254,12,48)" rx="2" ry="2" />
<text  x="197.18" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1461" width="0.1" height="15.0" fill="rgb(211,221,52)" rx="2" ry="2" />
<text  x="1190.52" y="1471.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="214.1" y="1669" width="0.2" height="15.0" fill="rgb(228,201,41)" rx="2" ry="2" />
<text  x="217.10" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="186.3" y="1653" width="0.3" height="15.0" fill="rgb(249,127,48)" rx="2" ry="2" />
<text  x="189.26" y="1663.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.02%)</title><rect x="762.7" y="1973" width="0.2" height="15.0" fill="rgb(228,107,54)" rx="2" ry="2" />
<text  x="765.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1973" width="0.2" height="15.0" fill="rgb(236,147,38)" rx="2" ry="2" />
<text  x="1190.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1733" width="0.6" height="15.0" fill="rgb(209,53,22)" rx="2" ry="2" />
<text  x="1190.64" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1589" width="0.2" height="15.0" fill="rgb(234,226,39)" rx="2" ry="2" />
<text  x="191.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (90 samples, 0.45%)</title><rect x="160.5" y="1605" width="5.3" height="15.0" fill="rgb(205,89,0)" rx="2" ry="2" />
<text  x="163.49" y="1615.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,990 samples, 14.98%)</title><rect x="574.6" y="1925" width="176.7" height="15.0" fill="rgb(250,217,5)" rx="2" ry="2" />
<text  x="577.61" y="1935.5" >onmt::Tokenizer::token..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1285" width="0.2" height="15.0" fill="rgb(253,226,27)" rx="2" ry="2" />
<text  x="191.51" y="1295.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="207.7" y="1637" width="0.2" height="15.0" fill="rgb(240,126,11)" rx="2" ry="2" />
<text  x="210.72" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="90.3" y="1925" width="0.1" height="15.0" fill="rgb(215,115,8)" rx="2" ry="2" />
<text  x="93.27" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (370 samples, 1.85%)</title><rect x="550.4" y="1877" width="21.8" height="15.0" fill="rgb(233,73,51)" rx="2" ry="2" />
<text  x="553.38" y="1887.5" >f..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="158.1" y="1845" width="0.4" height="15.0" fill="rgb(209,109,42)" rx="2" ry="2" />
<text  x="161.13" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="1989" width="0.1" height="15.0" fill="rgb(210,191,46)" rx="2" ry="2" />
<text  x="1190.28" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.42%)</title><rect x="200.2" y="1717" width="4.9" height="15.0" fill="rgb(243,48,46)" rx="2" ry="2" />
<text  x="203.15" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="725.9" y="1829" width="0.2" height="15.0" fill="rgb(217,226,31)" rx="2" ry="2" />
<text  x="728.87" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="122.1" y="2005" width="0.3" height="15.0" fill="rgb(230,85,16)" rx="2" ry="2" />
<text  x="125.13" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (459 samples, 2.30%)</title><rect x="55.8" y="1477" width="27.1" height="15.0" fill="rgb(240,6,28)" rx="2" ry="2" />
<text  x="58.75" y="1487.5" >[..</text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.06%)</title><rect x="811.3" y="2005" width="0.7" height="15.0" fill="rgb(221,10,4)" rx="2" ry="2" />
<text  x="814.35" y="2015.5" ></text>
</g>
<g >
<title>smp_call_function_many (22 samples, 0.11%)</title><rect x="940.0" y="1845" width="1.3" height="15.0" fill="rgb(231,94,16)" rx="2" ry="2" />
<text  x="942.97" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="763.1" y="2021" width="0.1" height="15.0" fill="rgb(253,88,46)" rx="2" ry="2" />
<text  x="766.11" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.12%)</title><rect x="132.9" y="1877" width="25.1" height="15.0" fill="rgb(208,34,53)" rx="2" ry="2" />
<text  x="135.89" y="1887.5" >s..</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="142.1" y="1589" width="0.1" height="15.0" fill="rgb(251,149,25)" rx="2" ry="2" />
<text  x="145.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1413" width="0.6" height="15.0" fill="rgb(231,180,54)" rx="2" ry="2" />
<text  x="1189.75" y="1423.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="89.3" y="1893" width="0.3" height="15.0" fill="rgb(222,3,41)" rx="2" ry="2" />
<text  x="92.27" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="158.0" y="1877" width="0.1" height="15.0" fill="rgb(252,212,47)" rx="2" ry="2" />
<text  x="160.95" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="181.3" y="1781" width="0.2" height="15.0" fill="rgb(246,90,20)" rx="2" ry="2" />
<text  x="184.30" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (383 samples, 1.92%)</title><rect x="55.8" y="1237" width="22.6" height="15.0" fill="rgb(208,14,7)" rx="2" ry="2" />
<text  x="58.81" y="1247.5" >[..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="169.0" y="1573" width="0.2" height="15.0" fill="rgb(245,129,34)" rx="2" ry="2" />
<text  x="172.00" y="1583.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="580.1" y="1877" width="0.2" height="15.0" fill="rgb(219,109,37)" rx="2" ry="2" />
<text  x="583.11" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (32 samples, 0.16%)</title><rect x="584.2" y="1893" width="1.9" height="15.0" fill="rgb(206,0,14)" rx="2" ry="2" />
<text  x="587.25" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="79.6" y="1269" width="0.1" height="15.0" fill="rgb(234,171,27)" rx="2" ry="2" />
<text  x="82.63" y="1279.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="483.8" y="1925" width="0.1" height="15.0" fill="rgb(226,149,38)" rx="2" ry="2" />
<text  x="486.76" y="1935.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (86 samples, 0.43%)</title><rect x="985.2" y="2053" width="5.1" height="15.0" fill="rgb(237,84,3)" rx="2" ry="2" />
<text  x="988.19" y="2063.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="122.2" y="1861" width="0.1" height="15.0" fill="rgb(220,67,44)" rx="2" ry="2" />
<text  x="125.19" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="205.6" y="1669" width="0.1" height="15.0" fill="rgb(251,161,9)" rx="2" ry="2" />
<text  x="208.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="981" width="0.1" height="15.0" fill="rgb(220,44,14)" rx="2" ry="2" />
<text  x="1190.52" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="762.7" y="2005" width="0.2" height="15.0" fill="rgb(205,104,7)" rx="2" ry="2" />
<text  x="765.70" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="195.2" y="1621" width="0.3" height="15.0" fill="rgb(254,82,39)" rx="2" ry="2" />
<text  x="198.19" y="1631.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="27.3" y="1941" width="0.1" height="15.0" fill="rgb(207,66,50)" rx="2" ry="2" />
<text  x="30.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1509" width="0.1" height="15.0" fill="rgb(231,94,50)" rx="2" ry="2" />
<text  x="1190.52" y="1519.5" ></text>
</g>
<g >
<title>__do_page_fault (35 samples, 0.18%)</title><rect x="508.9" y="1925" width="2.1" height="15.0" fill="rgb(212,57,20)" rx="2" ry="2" />
<text  x="511.88" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4 samples, 0.02%)</title><rect x="149.7" y="1637" width="0.2" height="15.0" fill="rgb(245,37,29)" rx="2" ry="2" />
<text  x="152.68" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="85.5" y="1573" width="0.2" height="15.0" fill="rgb(252,57,22)" rx="2" ry="2" />
<text  x="88.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="389" width="0.4" height="15.0" fill="rgb(235,94,2)" rx="2" ry="2" />
<text  x="1190.81" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (12 samples, 0.06%)</title><rect x="187.4" y="1877" width="0.8" height="15.0" fill="rgb(216,198,31)" rx="2" ry="2" />
<text  x="190.45" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="806.7" y="2005" width="0.2" height="15.0" fill="rgb(245,7,2)" rx="2" ry="2" />
<text  x="809.73" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1173" width="0.2" height="15.0" fill="rgb(221,39,41)" rx="2" ry="2" />
<text  x="1190.64" y="1183.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (2 samples, 0.01%)</title><rect x="28.3" y="1989" width="0.1" height="15.0" fill="rgb(218,128,11)" rx="2" ry="2" />
<text  x="31.26" y="1999.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="725.8" y="1877" width="0.3" height="15.0" fill="rgb(214,138,21)" rx="2" ry="2" />
<text  x="728.81" y="1887.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="758.7" y="1941" width="0.2" height="15.0" fill="rgb(220,38,27)" rx="2" ry="2" />
<text  x="761.68" y="1951.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="678.6" y="1733" width="0.1" height="15.0" fill="rgb(209,139,22)" rx="2" ry="2" />
<text  x="681.59" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (433 samples, 2.17%)</title><rect x="55.8" y="1413" width="25.6" height="15.0" fill="rgb(254,60,9)" rx="2" ry="2" />
<text  x="58.81" y="1423.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="215.8" y="1861" width="0.2" height="15.0" fill="rgb(216,82,2)" rx="2" ry="2" />
<text  x="218.76" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1685" width="0.6" height="15.0" fill="rgb(218,87,47)" rx="2" ry="2" />
<text  x="1190.64" y="1695.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="138.5" y="1573" width="0.2" height="15.0" fill="rgb(208,120,22)" rx="2" ry="2" />
<text  x="141.50" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.05%)</title><rect x="500.2" y="1845" width="0.5" height="15.0" fill="rgb(220,102,30)" rx="2" ry="2" />
<text  x="503.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1461" width="0.1" height="15.0" fill="rgb(251,67,50)" rx="2" ry="2" />
<text  x="219.35" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1701" width="0.2" height="15.0" fill="rgb(225,173,0)" rx="2" ry="2" />
<text  x="219.11" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="870.0" y="2021" width="0.1" height="15.0" fill="rgb(224,0,29)" rx="2" ry="2" />
<text  x="872.98" y="2031.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (5 samples, 0.03%)</title><rect x="572.7" y="1925" width="0.3" height="15.0" fill="rgb(247,137,43)" rx="2" ry="2" />
<text  x="575.66" y="1935.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.01%)</title><rect x="122.8" y="1941" width="0.1" height="15.0" fill="rgb(228,115,26)" rx="2" ry="2" />
<text  x="125.78" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1605" width="0.4" height="15.0" fill="rgb(211,84,21)" rx="2" ry="2" />
<text  x="1190.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="210.7" y="1797" width="0.2" height="15.0" fill="rgb(232,124,40)" rx="2" ry="2" />
<text  x="213.68" y="1807.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1103.8" y="2005" width="0.3" height="15.0" fill="rgb(248,213,43)" rx="2" ry="2" />
<text  x="1106.76" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="157.7" y="1781" width="0.2" height="15.0" fill="rgb(213,137,48)" rx="2" ry="2" />
<text  x="160.71" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="216.1" y="1941" width="0.4" height="15.0" fill="rgb(252,121,36)" rx="2" ry="2" />
<text  x="219.06" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="169.2" y="1573" width="0.2" height="15.0" fill="rgb(213,95,46)" rx="2" ry="2" />
<text  x="172.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1781" width="0.4" height="15.0" fill="rgb(249,31,10)" rx="2" ry="2" />
<text  x="219.11" y="1791.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.01%)</title><rect x="98.1" y="2021" width="0.2" height="15.0" fill="rgb(234,99,23)" rx="2" ry="2" />
<text  x="101.13" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="149.5" y="1637" width="0.1" height="15.0" fill="rgb(242,199,2)" rx="2" ry="2" />
<text  x="152.50" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1445" width="0.2" height="15.0" fill="rgb(210,120,29)" rx="2" ry="2" />
<text  x="1190.64" y="1455.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="597.6" y="1877" width="0.1" height="15.0" fill="rgb(213,135,48)" rx="2" ry="2" />
<text  x="600.61" y="1887.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="519.9" y="2037" width="0.1" height="15.0" fill="rgb(234,183,31)" rx="2" ry="2" />
<text  x="522.88" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="518.8" y="1829" width="0.1" height="15.0" fill="rgb(246,63,53)" rx="2" ry="2" />
<text  x="521.75" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="166.3" y="1605" width="0.2" height="15.0" fill="rgb(206,90,3)" rx="2" ry="2" />
<text  x="169.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1573" width="0.1" height="15.0" fill="rgb(210,61,38)" rx="2" ry="2" />
<text  x="219.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.40%)</title><rect x="147.8" y="1733" width="4.8" height="15.0" fill="rgb(246,79,39)" rx="2" ry="2" />
<text  x="150.84" y="1743.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.04%)</title><rect x="654.8" y="1797" width="0.4" height="15.0" fill="rgb(227,133,37)" rx="2" ry="2" />
<text  x="657.82" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.77%)</title><rect x="55.8" y="997" width="20.9" height="15.0" fill="rgb(249,60,8)" rx="2" ry="2" />
<text  x="58.81" y="1007.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.02%)</title><rect x="1112.0" y="1941" width="0.2" height="15.0" fill="rgb(240,217,25)" rx="2" ry="2" />
<text  x="1114.98" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="501" width="0.1" height="15.0" fill="rgb(232,86,8)" rx="2" ry="2" />
<text  x="1190.52" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.01%)</title><rect x="216.7" y="1973" width="0.1" height="15.0" fill="rgb(221,116,24)" rx="2" ry="2" />
<text  x="219.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (73 samples, 0.37%)</title><rect x="211.1" y="1733" width="4.3" height="15.0" fill="rgb(243,34,2)" rx="2" ry="2" />
<text  x="214.09" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.72%)</title><rect x="55.8" y="485" width="20.3" height="15.0" fill="rgb(250,204,28)" rx="2" ry="2" />
<text  x="58.81" y="495.5" ></text>
</g>
<g >
<title>page_fault (23 samples, 0.12%)</title><rect x="677.5" y="1845" width="1.4" height="15.0" fill="rgb(232,47,32)" rx="2" ry="2" />
<text  x="680.52" y="1855.5" ></text>
</g>
<g >
<title>__asan_memset@plt (2 samples, 0.01%)</title><rect x="582.1" y="1893" width="0.1" height="15.0" fill="rgb(225,90,20)" rx="2" ry="2" />
<text  x="585.06" y="1903.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="145.4" y="1605" width="0.2" height="15.0" fill="rgb(237,81,45)" rx="2" ry="2" />
<text  x="148.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1941" width="0.2" height="15.0" fill="rgb(241,146,21)" rx="2" ry="2" />
<text  x="1190.40" y="1951.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (8 samples, 0.04%)</title><rect x="1103.1" y="2021" width="0.5" height="15.0" fill="rgb(250,110,34)" rx="2" ry="2" />
<text  x="1106.11" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.08%)</title><rect x="678.0" y="1781" width="0.9" height="15.0" fill="rgb(225,197,43)" rx="2" ry="2" />
<text  x="680.99" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1973" width="0.1" height="15.0" fill="rgb(206,20,37)" rx="2" ry="2" />
<text  x="58.57" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1349" width="0.6" height="15.0" fill="rgb(241,153,27)" rx="2" ry="2" />
<text  x="1189.75" y="1359.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.04%)</title><rect x="651.0" y="1797" width="0.4" height="15.0" fill="rgb(216,43,12)" rx="2" ry="2" />
<text  x="653.98" y="1807.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="193.1" y="1557" width="0.1" height="15.0" fill="rgb(222,219,28)" rx="2" ry="2" />
<text  x="196.12" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="500.1" y="1845" width="0.1" height="15.0" fill="rgb(220,70,8)" rx="2" ry="2" />
<text  x="503.08" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="837" width="0.6" height="15.0" fill="rgb(207,16,7)" rx="2" ry="2" />
<text  x="1189.75" y="847.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.8" y="1349" width="0.1" height="15.0" fill="rgb(214,11,52)" rx="2" ry="2" />
<text  x="85.76" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="741" width="0.2" height="15.0" fill="rgb(205,137,19)" rx="2" ry="2" />
<text  x="1190.64" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="133" width="0.1" height="15.0" fill="rgb(220,1,15)" rx="2" ry="2" />
<text  x="1190.52" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1237" width="0.1" height="15.0" fill="rgb(224,64,5)" rx="2" ry="2" />
<text  x="219.17" y="1247.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1349" width="0.1" height="15.0" fill="rgb(226,58,48)" rx="2" ry="2" />
<text  x="85.00" y="1359.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.04%)</title><rect x="26.4" y="1925" width="0.4" height="15.0" fill="rgb(205,114,36)" rx="2" ry="2" />
<text  x="29.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="805" width="0.2" height="15.0" fill="rgb(238,207,28)" rx="2" ry="2" />
<text  x="1190.64" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1157" width="0.4" height="15.0" fill="rgb(217,117,42)" rx="2" ry="2" />
<text  x="1190.81" y="1167.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="327.8" y="1973" width="0.1" height="15.0" fill="rgb(253,165,20)" rx="2" ry="2" />
<text  x="330.77" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.3" y="1717" width="0.2" height="15.0" fill="rgb(238,117,39)" rx="2" ry="2" />
<text  x="219.29" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="806.9" y="2021" width="0.2" height="15.0" fill="rgb(239,177,8)" rx="2" ry="2" />
<text  x="809.91" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (95 samples, 0.48%)</title><rect x="181.5" y="1733" width="5.7" height="15.0" fill="rgb(223,42,15)" rx="2" ry="2" />
<text  x="184.54" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (5 samples, 0.03%)</title><rect x="600.5" y="1877" width="0.3" height="15.0" fill="rgb(254,155,14)" rx="2" ry="2" />
<text  x="603.50" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (3 samples, 0.02%)</title><rect x="122.7" y="1957" width="0.2" height="15.0" fill="rgb(223,216,26)" rx="2" ry="2" />
<text  x="125.72" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (2 samples, 0.01%)</title><rect x="749.6" y="1893" width="0.2" height="15.0" fill="rgb(244,75,9)" rx="2" ry="2" />
<text  x="752.64" y="1903.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (23 samples, 0.12%)</title><rect x="939.9" y="1861" width="1.4" height="15.0" fill="rgb(222,185,43)" rx="2" ry="2" />
<text  x="942.91" y="1871.5" ></text>
</g>
<g >
<title>do_mmap (26 samples, 0.13%)</title><rect x="1101.3" y="1957" width="1.5" height="15.0" fill="rgb(239,158,28)" rx="2" ry="2" />
<text  x="1104.28" y="1967.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;boost::optional&lt;TDocument&gt; &gt;::_M_get_result (3 samples, 0.02%)</title><rect x="131.8" y="1973" width="0.2" height="15.0" fill="rgb(228,140,37)" rx="2" ry="2" />
<text  x="134.82" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="179.2" y="1621" width="0.1" height="15.0" fill="rgb(221,52,12)" rx="2" ry="2" />
<text  x="182.23" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (100 samples, 0.50%)</title><rect x="170.7" y="1717" width="5.9" height="15.0" fill="rgb(240,80,25)" rx="2" ry="2" />
<text  x="173.72" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (395 samples, 1.98%)</title><rect x="55.8" y="1285" width="23.4" height="15.0" fill="rgb(238,138,27)" rx="2" ry="2" />
<text  x="58.81" y="1295.5" >[..</text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (24 samples, 0.12%)</title><rect x="117.6" y="2037" width="1.4" height="15.0" fill="rgb(238,204,9)" rx="2" ry="2" />
<text  x="120.58" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="764.1" y="2005" width="0.3" height="15.0" fill="rgb(227,54,36)" rx="2" ry="2" />
<text  x="767.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1701" width="0.2" height="15.0" fill="rgb(230,21,32)" rx="2" ry="2" />
<text  x="162.19" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1605" width="0.2" height="15.0" fill="rgb(245,186,28)" rx="2" ry="2" />
<text  x="1190.64" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="870.0" y="2005" width="0.1" height="15.0" fill="rgb(242,68,49)" rx="2" ry="2" />
<text  x="872.98" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.4" y="1877" width="0.1" height="15.0" fill="rgb(206,86,48)" rx="2" ry="2" />
<text  x="1189.39" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="405" width="0.4" height="15.0" fill="rgb(210,177,22)" rx="2" ry="2" />
<text  x="1190.81" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="437" width="0.2" height="15.0" fill="rgb(218,175,47)" rx="2" ry="2" />
<text  x="1190.64" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (39 samples, 0.20%)</title><rect x="486.4" y="1925" width="2.3" height="15.0" fill="rgb(232,51,14)" rx="2" ry="2" />
<text  x="489.36" y="1935.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="79.9" y="1205" width="0.1" height="15.0" fill="rgb(215,216,50)" rx="2" ry="2" />
<text  x="82.93" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1269" width="0.2" height="15.0" fill="rgb(211,176,32)" rx="2" ry="2" />
<text  x="1190.64" y="1279.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (249 samples, 1.25%)</title><rect x="496.2" y="1973" width="14.8" height="15.0" fill="rgb(230,189,8)" rx="2" ry="2" />
<text  x="499.23" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1829" width="0.3" height="15.0" fill="rgb(214,220,6)" rx="2" ry="2" />
<text  x="162.19" y="1839.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="104.6" y="2021" width="0.1" height="15.0" fill="rgb(229,10,35)" rx="2" ry="2" />
<text  x="107.57" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (23 samples, 0.12%)</title><rect x="759.7" y="2037" width="1.3" height="15.0" fill="rgb(224,123,14)" rx="2" ry="2" />
<text  x="762.68" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="135.9" y="1557" width="0.4" height="15.0" fill="rgb(216,225,26)" rx="2" ry="2" />
<text  x="138.90" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (603 samples, 3.02%)</title><rect x="55.7" y="2005" width="35.6" height="15.0" fill="rgb(246,183,27)" rx="2" ry="2" />
<text  x="58.69" y="2015.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1365" width="0.1" height="15.0" fill="rgb(222,88,39)" rx="2" ry="2" />
<text  x="219.17" y="1375.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="191.2" y="1589" width="0.4" height="15.0" fill="rgb(226,174,7)" rx="2" ry="2" />
<text  x="194.23" y="1599.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (4 samples, 0.02%)</title><rect x="806.9" y="2037" width="0.2" height="15.0" fill="rgb(233,23,27)" rx="2" ry="2" />
<text  x="809.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1285" width="0.1" height="15.0" fill="rgb(239,87,43)" rx="2" ry="2" />
<text  x="1190.52" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (100 samples, 0.50%)</title><rect x="160.0" y="1717" width="5.9" height="15.0" fill="rgb(236,89,11)" rx="2" ry="2" />
<text  x="163.02" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (333 samples, 1.67%)</title><rect x="132.9" y="1797" width="19.7" height="15.0" fill="rgb(253,7,13)" rx="2" ry="2" />
<text  x="135.89" y="1807.5" ></text>
</g>
<g >
<title>get_unmapped_area (5 samples, 0.03%)</title><rect x="1101.3" y="1941" width="0.3" height="15.0" fill="rgb(251,152,22)" rx="2" ry="2" />
<text  x="1104.34" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (26 samples, 0.13%)</title><rect x="998.1" y="2053" width="1.6" height="15.0" fill="rgb(249,7,22)" rx="2" ry="2" />
<text  x="1001.13" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (55 samples, 0.28%)</title><rect x="144.4" y="1637" width="3.3" height="15.0" fill="rgb(245,139,14)" rx="2" ry="2" />
<text  x="147.41" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (77 samples, 0.39%)</title><rect x="210.9" y="1797" width="4.6" height="15.0" fill="rgb(242,202,54)" rx="2" ry="2" />
<text  x="213.91" y="1807.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (3,066 samples, 15.36%)</title><rect x="335.3" y="1989" width="181.2" height="15.0" fill="rgb(237,75,10)" rx="2" ry="2" />
<text  x="338.28" y="1999.5" >TSlinkClustering::Clust..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (436 samples, 2.18%)</title><rect x="190.3" y="1909" width="25.8" height="15.0" fill="rgb(225,204,19)" rx="2" ry="2" />
<text  x="193.28" y="1919.5" >s..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (14 samples, 0.07%)</title><rect x="1175.9" y="2037" width="0.8" height="15.0" fill="rgb(236,117,12)" rx="2" ry="2" />
<text  x="1178.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.3" y="1717" width="0.1" height="15.0" fill="rgb(212,133,41)" rx="2" ry="2" />
<text  x="218.29" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (81 samples, 0.41%)</title><rect x="139.0" y="1669" width="4.8" height="15.0" fill="rgb(231,124,33)" rx="2" ry="2" />
<text  x="142.04" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="312.5" y="1925" width="0.1" height="15.0" fill="rgb(210,40,30)" rx="2" ry="2" />
<text  x="315.52" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (367 samples, 1.84%)</title><rect x="55.8" y="1157" width="21.7" height="15.0" fill="rgb(225,184,41)" rx="2" ry="2" />
<text  x="58.81" y="1167.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="198.4" y="1589" width="0.2" height="15.0" fill="rgb(253,100,0)" rx="2" ry="2" />
<text  x="201.38" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.0" y="1381" width="0.2" height="15.0" fill="rgb(213,110,22)" rx="2" ry="2" />
<text  x="84.05" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.4" y="1093" width="0.1" height="15.0" fill="rgb(219,157,26)" rx="2" ry="2" />
<text  x="219.41" y="1103.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (2 samples, 0.01%)</title><rect x="753.4" y="2037" width="0.1" height="15.0" fill="rgb(211,188,3)" rx="2" ry="2" />
<text  x="756.36" y="2047.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (37 samples, 0.19%)</title><rect x="498.8" y="1941" width="2.2" height="15.0" fill="rgb(219,85,47)" rx="2" ry="2" />
<text  x="501.83" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="138.1" y="1557" width="0.3" height="15.0" fill="rgb(213,139,38)" rx="2" ry="2" />
<text  x="141.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="853" width="0.4" height="15.0" fill="rgb(206,111,32)" rx="2" ry="2" />
<text  x="1190.81" y="863.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (8 samples, 0.04%)</title><rect x="601.1" y="1877" width="0.5" height="15.0" fill="rgb(206,7,7)" rx="2" ry="2" />
<text  x="604.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.38%)</title><rect x="166.1" y="1669" width="4.4" height="15.0" fill="rgb(205,144,12)" rx="2" ry="2" />
<text  x="169.11" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (426 samples, 2.13%)</title><rect x="132.9" y="1893" width="25.2" height="15.0" fill="rgb(244,217,3)" rx="2" ry="2" />
<text  x="135.89" y="1903.5" >s..</text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.02%)</title><rect x="510.7" y="1877" width="0.1" height="15.0" fill="rgb(209,141,44)" rx="2" ry="2" />
<text  x="513.66" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="1957" width="0.1" height="15.0" fill="rgb(221,109,20)" rx="2" ry="2" />
<text  x="1190.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (95 samples, 0.48%)</title><rect x="133.4" y="1669" width="5.6" height="15.0" fill="rgb(205,192,50)" rx="2" ry="2" />
<text  x="136.36" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="517" width="0.1" height="15.0" fill="rgb(219,10,44)" rx="2" ry="2" />
<text  x="1190.52" y="527.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.03%)</title><rect x="30.3" y="1909" width="0.3" height="15.0" fill="rgb(223,169,6)" rx="2" ry="2" />
<text  x="33.27" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="188.3" y="1925" width="0.4" height="15.0" fill="rgb(239,228,2)" rx="2" ry="2" />
<text  x="191.27" y="1935.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="146.7" y="1605" width="0.2" height="15.0" fill="rgb(209,99,10)" rx="2" ry="2" />
<text  x="149.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.42%)</title><rect x="195.0" y="1717" width="4.9" height="15.0" fill="rgb(215,226,5)" rx="2" ry="2" />
<text  x="198.01" y="1727.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.06%)</title><rect x="991.9" y="2053" width="0.7" height="15.0" fill="rgb(233,67,36)" rx="2" ry="2" />
<text  x="994.92" y="2063.5" ></text>
</g>
<g >
<title>unmap_region (7 samples, 0.04%)</title><rect x="1101.7" y="1909" width="0.4" height="15.0" fill="rgb(207,118,27)" rx="2" ry="2" />
<text  x="1104.69" y="1919.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="678.0" y="1749" width="0.3" height="15.0" fill="rgb(253,215,48)" rx="2" ry="2" />
<text  x="680.99" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="85.7" y="1637" width="0.3" height="15.0" fill="rgb(238,212,47)" rx="2" ry="2" />
<text  x="88.72" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1525" width="0.6" height="15.0" fill="rgb(239,32,5)" rx="2" ry="2" />
<text  x="1189.69" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (378 samples, 1.89%)</title><rect x="55.8" y="1221" width="22.4" height="15.0" fill="rgb(223,42,49)" rx="2" ry="2" />
<text  x="58.81" y="1231.5" >[..</text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.8" y="1381" width="0.1" height="15.0" fill="rgb(214,170,27)" rx="2" ry="2" />
<text  x="85.76" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="152.6" y="1797" width="0.1" height="15.0" fill="rgb(251,163,27)" rx="2" ry="2" />
<text  x="155.57" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="661" width="0.4" height="15.0" fill="rgb(220,119,38)" rx="2" ry="2" />
<text  x="1190.81" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="1020.9" y="2021" width="0.5" height="15.0" fill="rgb(246,10,32)" rx="2" ry="2" />
<text  x="1023.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1749" width="0.7" height="15.0" fill="rgb(209,188,12)" rx="2" ry="2" />
<text  x="1189.63" y="1759.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (3 samples, 0.02%)</title><rect x="730.0" y="1893" width="0.1" height="15.0" fill="rgb(208,137,20)" rx="2" ry="2" />
<text  x="732.95" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="1146.9" y="2037" width="0.4" height="15.0" fill="rgb(234,24,25)" rx="2" ry="2" />
<text  x="1149.85" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.01%)</title><rect x="732.9" y="1893" width="0.1" height="15.0" fill="rgb(207,0,50)" rx="2" ry="2" />
<text  x="735.91" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="158.4" y="1829" width="0.1" height="15.0" fill="rgb(206,66,7)" rx="2" ry="2" />
<text  x="161.36" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="853" width="0.1" height="15.0" fill="rgb(217,109,52)" rx="2" ry="2" />
<text  x="1190.52" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1717" width="0.2" height="15.0" fill="rgb(215,181,49)" rx="2" ry="2" />
<text  x="1190.40" y="1727.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (2 samples, 0.01%)</title><rect x="938.8" y="1909" width="0.1" height="15.0" fill="rgb(226,213,19)" rx="2" ry="2" />
<text  x="941.79" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1285" width="0.1" height="15.0" fill="rgb(238,61,47)" rx="2" ry="2" />
<text  x="219.17" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (94 samples, 0.47%)</title><rect x="181.6" y="1717" width="5.6" height="15.0" fill="rgb(209,84,41)" rx="2" ry="2" />
<text  x="184.59" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="209.8" y="1637" width="0.5" height="15.0" fill="rgb(238,22,20)" rx="2" ry="2" />
<text  x="212.85" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92 samples, 0.46%)</title><rect x="205.1" y="1749" width="5.5" height="15.0" fill="rgb(248,57,7)" rx="2" ry="2" />
<text  x="208.12" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="661" width="0.2" height="15.0" fill="rgb(219,159,47)" rx="2" ry="2" />
<text  x="1190.64" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.40%)</title><rect x="176.6" y="1733" width="4.7" height="15.0" fill="rgb(225,226,3)" rx="2" ry="2" />
<text  x="179.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (59 samples, 0.30%)</title><rect x="177.5" y="1653" width="3.4" height="15.0" fill="rgb(230,187,1)" rx="2" ry="2" />
<text  x="180.46" y="1663.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (36 samples, 0.18%)</title><rect x="511.2" y="1973" width="2.1" height="15.0" fill="rgb(252,50,48)" rx="2" ry="2" />
<text  x="514.19" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1253" width="0.1" height="15.0" fill="rgb(239,7,33)" rx="2" ry="2" />
<text  x="162.43" y="1263.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.7" y="1173" width="0.1" height="15.0" fill="rgb(241,110,49)" rx="2" ry="2" />
<text  x="80.68" y="1183.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="1112.0" y="1861" width="0.2" height="15.0" fill="rgb(237,112,11)" rx="2" ry="2" />
<text  x="1115.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="293" width="0.2" height="15.0" fill="rgb(210,159,2)" rx="2" ry="2" />
<text  x="1190.64" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.8" y="1669" width="0.1" height="15.0" fill="rgb(214,93,53)" rx="2" ry="2" />
<text  x="89.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1477" width="0.1" height="15.0" fill="rgb(233,162,54)" rx="2" ry="2" />
<text  x="1190.52" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="165" width="0.4" height="15.0" fill="rgb(211,38,45)" rx="2" ry="2" />
<text  x="1190.81" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1765" width="0.4" height="15.0" fill="rgb(209,131,1)" rx="2" ry="2" />
<text  x="219.11" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1205" width="0.1" height="15.0" fill="rgb(229,204,5)" rx="2" ry="2" />
<text  x="219.35" y="1215.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (36 samples, 0.18%)</title><rect x="939.4" y="1909" width="2.1" height="15.0" fill="rgb(252,133,34)" rx="2" ry="2" />
<text  x="942.38" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (87 samples, 0.44%)</title><rect x="160.6" y="1589" width="5.2" height="15.0" fill="rgb(236,41,16)" rx="2" ry="2" />
<text  x="163.61" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="160.1" y="1637" width="0.2" height="15.0" fill="rgb(215,16,31)" rx="2" ry="2" />
<text  x="163.08" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (724 samples, 3.63%)</title><rect x="55.7" y="2037" width="42.8" height="15.0" fill="rgb(221,201,39)" rx="2" ry="2" />
<text  x="58.69" y="2047.5" >[unk..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="579.5" y="1877" width="0.3" height="15.0" fill="rgb(208,203,17)" rx="2" ry="2" />
<text  x="582.46" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10 samples, 0.05%)</title><rect x="158.1" y="1877" width="0.6" height="15.0" fill="rgb(225,80,21)" rx="2" ry="2" />
<text  x="161.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="101" width="0.4" height="15.0" fill="rgb(254,124,7)" rx="2" ry="2" />
<text  x="1190.81" y="111.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1957" width="0.1" height="15.0" fill="rgb(207,98,36)" rx="2" ry="2" />
<text  x="521.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (465 samples, 2.33%)</title><rect x="55.8" y="1509" width="27.4" height="15.0" fill="rgb(245,154,35)" rx="2" ry="2" />
<text  x="58.75" y="1519.5" >[..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="681.2" y="1845" width="0.1" height="15.0" fill="rgb(221,148,54)" rx="2" ry="2" />
<text  x="684.19" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (173 samples, 0.87%)</title><rect x="480.6" y="1941" width="10.2" height="15.0" fill="rgb(227,30,33)" rx="2" ry="2" />
<text  x="483.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1557" width="0.2" height="15.0" fill="rgb(214,63,28)" rx="2" ry="2" />
<text  x="162.19" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="965" width="0.6" height="15.0" fill="rgb(226,43,45)" rx="2" ry="2" />
<text  x="1189.75" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (26 samples, 0.13%)</title><rect x="509.4" y="1909" width="1.6" height="15.0" fill="rgb(236,5,18)" rx="2" ry="2" />
<text  x="512.41" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1365" width="0.1" height="15.0" fill="rgb(215,159,53)" rx="2" ry="2" />
<text  x="1190.52" y="1375.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (5 samples, 0.03%)</title><rect x="131.1" y="1941" width="0.3" height="15.0" fill="rgb(236,62,29)" rx="2" ry="2" />
<text  x="134.12" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.3" y="1397" width="0.1" height="15.0" fill="rgb(235,40,23)" rx="2" ry="2" />
<text  x="162.25" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (94 samples, 0.47%)</title><rect x="133.4" y="1621" width="5.6" height="15.0" fill="rgb(244,43,47)" rx="2" ry="2" />
<text  x="136.42" y="1631.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (9 samples, 0.05%)</title><rect x="522.4" y="1941" width="0.5" height="15.0" fill="rgb(231,5,11)" rx="2" ry="2" />
<text  x="525.36" y="1951.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (4 samples, 0.02%)</title><rect x="762.0" y="1861" width="0.2" height="15.0" fill="rgb(252,101,7)" rx="2" ry="2" />
<text  x="764.99" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1093" width="0.6" height="15.0" fill="rgb(217,66,30)" rx="2" ry="2" />
<text  x="1189.75" y="1103.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="518.5" y="1957" width="0.2" height="15.0" fill="rgb(254,111,30)" rx="2" ry="2" />
<text  x="521.52" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.01%)</title><rect x="526.6" y="1925" width="0.1" height="15.0" fill="rgb(208,1,19)" rx="2" ry="2" />
<text  x="529.56" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="933" width="0.6" height="15.0" fill="rgb(239,9,6)" rx="2" ry="2" />
<text  x="1189.75" y="943.5" ></text>
</g>
<g >
<title>TDocument::TDocument (16 samples, 0.08%)</title><rect x="122.5" y="1989" width="0.9" height="15.0" fill="rgb(231,12,5)" rx="2" ry="2" />
<text  x="125.49" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (96 samples, 0.48%)</title><rect x="170.8" y="1669" width="5.7" height="15.0" fill="rgb(227,32,54)" rx="2" ry="2" />
<text  x="173.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.41%)</title><rect x="139.0" y="1685" width="4.8" height="15.0" fill="rgb(228,91,2)" rx="2" ry="2" />
<text  x="142.04" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="169.9" y="1573" width="0.2" height="15.0" fill="rgb(208,100,9)" rx="2" ry="2" />
<text  x="172.89" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="522.7" y="1861" width="0.2" height="15.0" fill="rgb(215,154,11)" rx="2" ry="2" />
<text  x="525.66" y="1871.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="678.3" y="1765" width="0.2" height="15.0" fill="rgb(214,31,29)" rx="2" ry="2" />
<text  x="681.35" y="1775.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="26.9" y="1941" width="0.1" height="15.0" fill="rgb(214,226,37)" rx="2" ry="2" />
<text  x="29.91" y="1951.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="678.0" y="1765" width="0.3" height="15.0" fill="rgb(215,201,23)" rx="2" ry="2" />
<text  x="680.99" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (349 samples, 1.75%)</title><rect x="55.8" y="917" width="20.6" height="15.0" fill="rgb(238,197,45)" rx="2" ry="2" />
<text  x="58.81" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1621" width="0.2" height="15.0" fill="rgb(218,44,13)" rx="2" ry="2" />
<text  x="1190.64" y="1631.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (154 samples, 0.77%)</title><rect x="1136.9" y="2037" width="9.1" height="15.0" fill="rgb(229,61,46)" rx="2" ry="2" />
<text  x="1139.86" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="2005" width="0.7" height="15.0" fill="rgb(210,228,36)" rx="2" ry="2" />
<text  x="1189.63" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (68 samples, 0.34%)</title><rect x="190.9" y="1685" width="4.0" height="15.0" fill="rgb(228,183,43)" rx="2" ry="2" />
<text  x="193.87" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="132.0" y="1957" width="0.7" height="15.0" fill="rgb(218,43,3)" rx="2" ry="2" />
<text  x="135.00" y="1967.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (49 samples, 0.25%)</title><rect x="967.0" y="2053" width="2.9" height="15.0" fill="rgb(242,123,30)" rx="2" ry="2" />
<text  x="969.98" y="2063.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="515.2" y="1973" width="0.1" height="15.0" fill="rgb(215,152,38)" rx="2" ry="2" />
<text  x="518.21" y="1983.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (89 samples, 0.45%)</title><rect x="1154.2" y="2037" width="5.3" height="15.0" fill="rgb(213,105,37)" rx="2" ry="2" />
<text  x="1157.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1365" width="0.6" height="15.0" fill="rgb(237,14,19)" rx="2" ry="2" />
<text  x="1189.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="757" width="0.4" height="15.0" fill="rgb(223,156,9)" rx="2" ry="2" />
<text  x="1190.81" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="678.3" y="1717" width="0.2" height="15.0" fill="rgb(233,142,32)" rx="2" ry="2" />
<text  x="681.35" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (161 samples, 0.81%)</title><rect x="190.4" y="1749" width="9.5" height="15.0" fill="rgb(248,45,11)" rx="2" ry="2" />
<text  x="193.40" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (91 samples, 0.46%)</title><rect x="205.1" y="1717" width="5.4" height="15.0" fill="rgb(210,161,30)" rx="2" ry="2" />
<text  x="208.12" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.9" y="1541" width="0.1" height="15.0" fill="rgb(241,63,53)" rx="2" ry="2" />
<text  x="86.89" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.7" y="1733" width="0.2" height="15.0" fill="rgb(213,44,35)" rx="2" ry="2" />
<text  x="190.74" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (3 samples, 0.02%)</title><rect x="600.8" y="1877" width="0.2" height="15.0" fill="rgb(248,111,51)" rx="2" ry="2" />
<text  x="603.80" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (592 samples, 2.97%)</title><rect x="55.7" y="1957" width="35.0" height="15.0" fill="rgb(238,78,32)" rx="2" ry="2" />
<text  x="58.69" y="1967.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="213" width="0.1" height="15.0" fill="rgb(216,200,34)" rx="2" ry="2" />
<text  x="1190.52" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="175.3" y="1589" width="0.3" height="15.0" fill="rgb(253,179,23)" rx="2" ry="2" />
<text  x="178.27" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.6" y="1845" width="0.1" height="15.0" fill="rgb(250,46,26)" rx="2" ry="2" />
<text  x="91.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="210.7" y="1685" width="0.2" height="15.0" fill="rgb(240,182,39)" rx="2" ry="2" />
<text  x="213.74" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.76%)</title><rect x="55.8" y="965" width="20.8" height="15.0" fill="rgb(252,176,21)" rx="2" ry="2" />
<text  x="58.81" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1845" width="0.7" height="15.0" fill="rgb(206,135,20)" rx="2" ry="2" />
<text  x="1189.63" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.07%)</title><rect x="522.2" y="2005" width="0.9" height="15.0" fill="rgb(244,219,50)" rx="2" ry="2" />
<text  x="525.24" y="2015.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (82 samples, 0.41%)</title><rect x="49.4" y="2021" width="4.9" height="15.0" fill="rgb(253,173,44)" rx="2" ry="2" />
<text  x="52.43" y="2031.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.3" y="1365" width="0.2" height="15.0" fill="rgb(248,121,2)" rx="2" ry="2" />
<text  x="85.35" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="421" width="0.4" height="15.0" fill="rgb(252,140,40)" rx="2" ry="2" />
<text  x="1190.81" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="86.4" y="1541" width="0.1" height="15.0" fill="rgb(246,2,32)" rx="2" ry="2" />
<text  x="89.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1717" width="0.1" height="15.0" fill="rgb(247,177,10)" rx="2" ry="2" />
<text  x="162.43" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1717" width="0.6" height="15.0" fill="rgb(253,135,1)" rx="2" ry="2" />
<text  x="1190.64" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="869" width="0.2" height="15.0" fill="rgb(244,11,51)" rx="2" ry="2" />
<text  x="1190.64" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1717" width="0.7" height="15.0" fill="rgb(235,13,14)" rx="2" ry="2" />
<text  x="1189.63" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (27 samples, 0.14%)</title><rect x="499.4" y="1909" width="1.6" height="15.0" fill="rgb(228,150,51)" rx="2" ry="2" />
<text  x="502.43" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="215.6" y="1829" width="0.2" height="15.0" fill="rgb(207,62,22)" rx="2" ry="2" />
<text  x="218.64" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1573" width="0.2" height="15.0" fill="rgb(240,6,15)" rx="2" ry="2" />
<text  x="162.19" y="1583.5" ></text>
</g>
<g >
<title>__asan_memset (9 samples, 0.05%)</title><rect x="598.1" y="1877" width="0.5" height="15.0" fill="rgb(236,93,11)" rx="2" ry="2" />
<text  x="601.08" y="1887.5" ></text>
</g>
<g >
<title>smp_call_function_single (3 samples, 0.02%)</title><rect x="1101.9" y="1765" width="0.2" height="15.0" fill="rgb(229,12,17)" rx="2" ry="2" />
<text  x="1104.93" y="1775.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (7 samples, 0.04%)</title><rect x="521.5" y="2037" width="0.4" height="15.0" fill="rgb(217,219,48)" rx="2" ry="2" />
<text  x="524.53" y="2047.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="678.3" y="1733" width="0.2" height="15.0" fill="rgb(230,185,23)" rx="2" ry="2" />
<text  x="681.35" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="89.9" y="1909" width="0.1" height="15.0" fill="rgb(237,38,23)" rx="2" ry="2" />
<text  x="92.86" y="1919.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="515.4" y="1973" width="0.1" height="15.0" fill="rgb(208,54,9)" rx="2" ry="2" />
<text  x="518.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1925" width="0.7" height="15.0" fill="rgb(223,114,33)" rx="2" ry="2" />
<text  x="1189.63" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="837" width="0.2" height="15.0" fill="rgb(207,190,51)" rx="2" ry="2" />
<text  x="1190.64" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (82 samples, 0.41%)</title><rect x="152.9" y="1717" width="4.8" height="15.0" fill="rgb(211,170,35)" rx="2" ry="2" />
<text  x="155.87" y="1727.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="480.0" y="1941" width="0.1" height="15.0" fill="rgb(212,152,52)" rx="2" ry="2" />
<text  x="482.98" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (64 samples, 0.32%)</title><rect x="144.0" y="1701" width="3.8" height="15.0" fill="rgb(218,223,23)" rx="2" ry="2" />
<text  x="147.00" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (90 samples, 0.45%)</title><rect x="160.5" y="1621" width="5.3" height="15.0" fill="rgb(222,127,38)" rx="2" ry="2" />
<text  x="163.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (102 samples, 0.51%)</title><rect x="132.9" y="1717" width="6.1" height="15.0" fill="rgb(230,4,16)" rx="2" ry="2" />
<text  x="135.95" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (67 samples, 0.34%)</title><rect x="190.9" y="1605" width="4.0" height="15.0" fill="rgb(241,189,3)" rx="2" ry="2" />
<text  x="193.93" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1093" width="0.1" height="15.0" fill="rgb(213,223,54)" rx="2" ry="2" />
<text  x="1190.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1301" width="0.6" height="15.0" fill="rgb(244,110,32)" rx="2" ry="2" />
<text  x="1189.75" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.72%)</title><rect x="55.8" y="517" width="20.3" height="15.0" fill="rgb(232,203,6)" rx="2" ry="2" />
<text  x="58.81" y="527.5" ></text>
</g>
<g >
<title>[unknown] (513 samples, 2.57%)</title><rect x="55.8" y="1653" width="30.3" height="15.0" fill="rgb(245,105,5)" rx="2" ry="2" />
<text  x="58.75" y="1663.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (429 samples, 2.15%)</title><rect x="190.3" y="1861" width="25.3" height="15.0" fill="rgb(221,55,43)" rx="2" ry="2" />
<text  x="193.28" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1573" width="0.1" height="15.0" fill="rgb(215,33,40)" rx="2" ry="2" />
<text  x="162.43" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74 samples, 0.37%)</title><rect x="211.0" y="1765" width="4.4" height="15.0" fill="rgb(245,96,43)" rx="2" ry="2" />
<text  x="214.03" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1333" width="0.2" height="15.0" fill="rgb(253,72,36)" rx="2" ry="2" />
<text  x="191.51" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="867.4" y="2021" width="0.3" height="15.0" fill="rgb(248,156,22)" rx="2" ry="2" />
<text  x="870.38" y="2031.5" ></text>
</g>
<g >
<title>__do_munmap (10 samples, 0.05%)</title><rect x="761.8" y="1909" width="0.5" height="15.0" fill="rgb(215,151,40)" rx="2" ry="2" />
<text  x="764.75" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1349" width="0.1" height="15.0" fill="rgb(218,165,35)" rx="2" ry="2" />
<text  x="1190.52" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="277" width="0.4" height="15.0" fill="rgb(244,100,6)" rx="2" ry="2" />
<text  x="1190.81" y="287.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="193.5" y="1557" width="0.2" height="15.0" fill="rgb(217,4,10)" rx="2" ry="2" />
<text  x="196.53" y="1567.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (13 samples, 0.07%)</title><rect x="810.6" y="2005" width="0.7" height="15.0" fill="rgb(219,97,28)" rx="2" ry="2" />
<text  x="813.58" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.02%)</title><rect x="167.6" y="1573" width="0.2" height="15.0" fill="rgb(236,79,54)" rx="2" ry="2" />
<text  x="170.64" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1189" width="0.2" height="15.0" fill="rgb(241,223,14)" rx="2" ry="2" />
<text  x="191.51" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1413" width="0.2" height="15.0" fill="rgb(252,130,20)" rx="2" ry="2" />
<text  x="191.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1285" width="0.4" height="15.0" fill="rgb(241,96,3)" rx="2" ry="2" />
<text  x="1190.81" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.38%)</title><rect x="166.1" y="1637" width="4.4" height="15.0" fill="rgb(245,12,52)" rx="2" ry="2" />
<text  x="169.11" y="1647.5" ></text>
</g>
<g >
<title>get_futex_key (2 samples, 0.01%)</title><rect x="30.1" y="1909" width="0.1" height="15.0" fill="rgb(209,206,51)" rx="2" ry="2" />
<text  x="33.10" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1877" width="0.4" height="15.0" fill="rgb(205,136,34)" rx="2" ry="2" />
<text  x="219.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="187.5" y="1749" width="0.1" height="15.0" fill="rgb(223,59,18)" rx="2" ry="2" />
<text  x="190.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1221" width="0.1" height="15.0" fill="rgb(235,227,53)" rx="2" ry="2" />
<text  x="219.17" y="1231.5" ></text>
</g>
<g >
<title>std::locale::locale (8 samples, 0.04%)</title><rect x="333.7" y="1989" width="0.5" height="15.0" fill="rgb(233,144,0)" rx="2" ry="2" />
<text  x="336.74" y="1999.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="91.6" y="1909" width="0.1" height="15.0" fill="rgb(218,183,34)" rx="2" ry="2" />
<text  x="94.57" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (2 samples, 0.01%)</title><rect x="1188.6" y="2037" width="0.1" height="15.0" fill="rgb(220,229,47)" rx="2" ry="2" />
<text  x="1191.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1717" width="0.2" height="15.0" fill="rgb(224,75,25)" rx="2" ry="2" />
<text  x="219.11" y="1727.5" ></text>
</g>
<g >
<title>memcpy (17 samples, 0.09%)</title><rect x="654.2" y="1877" width="1.0" height="15.0" fill="rgb(230,153,41)" rx="2" ry="2" />
<text  x="657.23" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="85" width="0.6" height="15.0" fill="rgb(248,217,25)" rx="2" ry="2" />
<text  x="1189.75" y="95.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.5" y="1973" width="0.2" height="15.0" fill="rgb(220,146,12)" rx="2" ry="2" />
<text  x="521.52" y="1983.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.01%)</title><rect x="677.8" y="1781" width="0.1" height="15.0" fill="rgb(215,73,48)" rx="2" ry="2" />
<text  x="680.82" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="805" width="0.1" height="15.0" fill="rgb(218,184,7)" rx="2" ry="2" />
<text  x="1190.52" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="30.3" y="1877" width="0.3" height="15.0" fill="rgb(211,92,46)" rx="2" ry="2" />
<text  x="33.27" y="1887.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="936.5" y="1941" width="0.2" height="15.0" fill="rgb(241,141,21)" rx="2" ry="2" />
<text  x="939.54" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (131 samples, 0.66%)</title><rect x="123.7" y="1957" width="7.7" height="15.0" fill="rgb(216,38,11)" rx="2" ry="2" />
<text  x="126.67" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1186.7" y="1637" width="0.6" height="15.0" fill="rgb(248,50,0)" rx="2" ry="2" />
<text  x="1189.69" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="79.0" y="1269" width="0.1" height="15.0" fill="rgb(212,41,16)" rx="2" ry="2" />
<text  x="81.98" y="1279.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.3" y="1301" width="0.2" height="15.0" fill="rgb(211,116,13)" rx="2" ry="2" />
<text  x="85.35" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (410 samples, 2.05%)</title><rect x="55.8" y="1317" width="24.2" height="15.0" fill="rgb(223,202,49)" rx="2" ry="2" />
<text  x="58.81" y="1327.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="629" width="0.6" height="15.0" fill="rgb(225,15,48)" rx="2" ry="2" />
<text  x="1189.75" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="789" width="0.2" height="15.0" fill="rgb(252,196,1)" rx="2" ry="2" />
<text  x="1190.64" y="799.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (131 samples, 0.66%)</title><rect x="123.7" y="1989" width="7.7" height="15.0" fill="rgb(220,137,25)" rx="2" ry="2" />
<text  x="126.67" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="1147.3" y="2037" width="0.1" height="15.0" fill="rgb(233,155,26)" rx="2" ry="2" />
<text  x="1150.32" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (35 samples, 0.18%)</title><rect x="508.9" y="1941" width="2.1" height="15.0" fill="rgb(207,32,53)" rx="2" ry="2" />
<text  x="511.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="159.1" y="1941" width="0.4" height="15.0" fill="rgb(236,151,23)" rx="2" ry="2" />
<text  x="162.13" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1765" width="0.2" height="15.0" fill="rgb(231,139,46)" rx="2" ry="2" />
<text  x="191.45" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (181 samples, 0.91%)</title><rect x="160.0" y="1749" width="10.7" height="15.0" fill="rgb(214,217,26)" rx="2" ry="2" />
<text  x="162.96" y="1759.5" ></text>
</g>
<g >
<title>main (6,718 samples, 33.65%)</title><rect x="122.4" y="2021" width="397.1" height="15.0" fill="rgb(239,178,14)" rx="2" ry="2" />
<text  x="125.43" y="2031.5" >main</text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="938.4" y="1909" width="0.3" height="15.0" fill="rgb(214,119,21)" rx="2" ry="2" />
<text  x="941.43" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1813" width="0.6" height="15.0" fill="rgb(221,15,32)" rx="2" ry="2" />
<text  x="1190.64" y="1823.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (133 samples, 0.67%)</title><rect x="501.0" y="1941" width="7.9" height="15.0" fill="rgb(240,150,19)" rx="2" ry="2" />
<text  x="504.02" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="133.0" y="1685" width="0.4" height="15.0" fill="rgb(230,48,37)" rx="2" ry="2" />
<text  x="136.01" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="261" width="0.6" height="15.0" fill="rgb(223,220,42)" rx="2" ry="2" />
<text  x="1189.75" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (83 samples, 0.42%)</title><rect x="200.2" y="1685" width="4.9" height="15.0" fill="rgb(224,3,44)" rx="2" ry="2" />
<text  x="203.15" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="84.4" y="1573" width="0.2" height="15.0" fill="rgb(254,175,14)" rx="2" ry="2" />
<text  x="87.42" y="1583.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (2 samples, 0.01%)</title><rect x="519.1" y="1973" width="0.1" height="15.0" fill="rgb(218,79,7)" rx="2" ry="2" />
<text  x="522.11" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1189.7" y="1957" width="0.1" height="15.0" fill="rgb(224,118,9)" rx="2" ry="2" />
<text  x="1192.70" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLabel[abi:cxx11] (2 samples, 0.01%)</title><rect x="526.7" y="1925" width="0.1" height="15.0" fill="rgb(247,38,30)" rx="2" ry="2" />
<text  x="529.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.69%)</title><rect x="55.8" y="165" width="20.0" height="15.0" fill="rgb(225,18,24)" rx="2" ry="2" />
<text  x="58.81" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1749" width="0.2" height="15.0" fill="rgb(246,32,34)" rx="2" ry="2" />
<text  x="191.45" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="757" width="0.6" height="15.0" fill="rgb(231,51,36)" rx="2" ry="2" />
<text  x="1189.75" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (132 samples, 0.66%)</title><rect x="612.6" y="1861" width="7.8" height="15.0" fill="rgb(252,71,29)" rx="2" ry="2" />
<text  x="615.62" y="1871.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (3 samples, 0.02%)</title><rect x="572.8" y="1909" width="0.2" height="15.0" fill="rgb(250,99,30)" rx="2" ry="2" />
<text  x="575.78" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (22 samples, 0.11%)</title><rect x="731.6" y="1893" width="1.3" height="15.0" fill="rgb(211,12,1)" rx="2" ry="2" />
<text  x="734.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="773" width="0.2" height="15.0" fill="rgb(253,144,41)" rx="2" ry="2" />
<text  x="1190.64" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="132.0" y="1925" width="0.7" height="15.0" fill="rgb(214,100,40)" rx="2" ry="2" />
<text  x="135.00" y="1935.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1103.8" y="2021" width="0.3" height="15.0" fill="rgb(205,215,17)" rx="2" ry="2" />
<text  x="1106.76" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.4" y="1157" width="0.1" height="15.0" fill="rgb(209,3,30)" rx="2" ry="2" />
<text  x="219.41" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="85" width="0.4" height="15.0" fill="rgb(227,167,17)" rx="2" ry="2" />
<text  x="1190.81" y="95.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.72%)</title><rect x="55.8" y="533" width="20.3" height="15.0" fill="rgb(207,128,21)" rx="2" ry="2" />
<text  x="58.81" y="543.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (21 samples, 0.11%)</title><rect x="29.4" y="2037" width="1.3" height="15.0" fill="rgb(247,19,46)" rx="2" ry="2" />
<text  x="32.45" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="163.2" y="1541" width="0.1" height="15.0" fill="rgb(237,159,41)" rx="2" ry="2" />
<text  x="166.15" y="1551.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (5 samples, 0.03%)</title><rect x="28.6" y="2053" width="0.3" height="15.0" fill="rgb(233,176,21)" rx="2" ry="2" />
<text  x="31.62" y="2063.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="572.2" y="1893" width="0.2" height="15.0" fill="rgb(239,54,27)" rx="2" ry="2" />
<text  x="575.25" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="677" width="0.6" height="15.0" fill="rgb(253,25,53)" rx="2" ry="2" />
<text  x="1189.75" y="687.5" ></text>
</g>
<g >
<title>do_mmap (17 samples, 0.09%)</title><rect x="761.7" y="1941" width="1.0" height="15.0" fill="rgb(235,119,24)" rx="2" ry="2" />
<text  x="764.69" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1381" width="0.1" height="15.0" fill="rgb(254,133,41)" rx="2" ry="2" />
<text  x="162.43" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (373 samples, 1.87%)</title><rect x="55.8" y="1189" width="22.1" height="15.0" fill="rgb(221,21,45)" rx="2" ry="2" />
<text  x="58.81" y="1199.5" >[..</text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="261" width="20.1" height="15.0" fill="rgb(226,43,52)" rx="2" ry="2" />
<text  x="58.81" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1797" width="0.4" height="15.0" fill="rgb(216,105,1)" rx="2" ry="2" />
<text  x="219.11" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1013" width="0.4" height="15.0" fill="rgb(244,70,6)" rx="2" ry="2" />
<text  x="1190.81" y="1023.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (6 samples, 0.03%)</title><rect x="520.0" y="2037" width="0.4" height="15.0" fill="rgb(240,120,4)" rx="2" ry="2" />
<text  x="523.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="261" width="0.1" height="15.0" fill="rgb(253,45,40)" rx="2" ry="2" />
<text  x="1190.52" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1493" width="0.2" height="15.0" fill="rgb(214,28,13)" rx="2" ry="2" />
<text  x="1190.64" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1013" width="0.2" height="15.0" fill="rgb(240,2,18)" rx="2" ry="2" />
<text  x="1190.64" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.38%)</title><rect x="211.0" y="1781" width="4.5" height="15.0" fill="rgb(238,9,52)" rx="2" ry="2" />
<text  x="213.97" y="1791.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="758.7" y="1973" width="0.4" height="15.0" fill="rgb(238,99,53)" rx="2" ry="2" />
<text  x="761.68" y="1983.5" ></text>
</g>
<g >
<title>do_page_fault (23 samples, 0.12%)</title><rect x="677.5" y="1829" width="1.4" height="15.0" fill="rgb(220,196,42)" rx="2" ry="2" />
<text  x="680.52" y="1839.5" ></text>
</g>
<g >
<title>vma_merge (4 samples, 0.02%)</title><rect x="1102.5" y="1925" width="0.2" height="15.0" fill="rgb(217,104,31)" rx="2" ry="2" />
<text  x="1105.46" y="1935.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (2 samples, 0.01%)</title><rect x="584.1" y="1893" width="0.1" height="15.0" fill="rgb(213,77,19)" rx="2" ry="2" />
<text  x="587.13" y="1903.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="82.0" y="1221" width="0.1" height="15.0" fill="rgb(214,44,52)" rx="2" ry="2" />
<text  x="85.00" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (452 samples, 2.26%)</title><rect x="55.8" y="1461" width="26.7" height="15.0" fill="rgb(246,163,16)" rx="2" ry="2" />
<text  x="58.75" y="1471.5" >[..</text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="55.3" y="1829" width="0.1" height="15.0" fill="rgb(208,112,17)" rx="2" ry="2" />
<text  x="58.28" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1781" width="0.2" height="15.0" fill="rgb(228,24,29)" rx="2" ry="2" />
<text  x="1190.40" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (437 samples, 2.19%)</title><rect x="132.9" y="1925" width="25.8" height="15.0" fill="rgb(237,47,30)" rx="2" ry="2" />
<text  x="135.89" y="1935.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (35 samples, 0.18%)</title><rect x="1149.6" y="2037" width="2.1" height="15.0" fill="rgb(238,159,54)" rx="2" ry="2" />
<text  x="1152.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1269" width="0.1" height="15.0" fill="rgb(217,154,23)" rx="2" ry="2" />
<text  x="162.43" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (37 samples, 0.19%)</title><rect x="192.4" y="1573" width="2.2" height="15.0" fill="rgb(247,58,41)" rx="2" ry="2" />
<text  x="195.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="2005" width="0.6" height="15.0" fill="rgb(226,140,32)" rx="2" ry="2" />
<text  x="1190.64" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1017.0" y="1973" width="0.1" height="15.0" fill="rgb(224,76,14)" rx="2" ry="2" />
<text  x="1019.99" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (23 samples, 0.12%)</title><rect x="677.5" y="1813" width="1.4" height="15.0" fill="rgb(248,94,37)" rx="2" ry="2" />
<text  x="680.52" y="1823.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.3" y="1349" width="0.2" height="15.0" fill="rgb(239,152,45)" rx="2" ry="2" />
<text  x="85.35" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1285" width="0.6" height="15.0" fill="rgb(234,164,26)" rx="2" ry="2" />
<text  x="1189.75" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (442 samples, 2.21%)</title><rect x="132.8" y="1941" width="26.2" height="15.0" fill="rgb(218,216,17)" rx="2" ry="2" />
<text  x="135.83" y="1951.5" >s..</text>
</g>
<g >
<title>operator new[] (3 samples, 0.02%)</title><rect x="1111.7" y="2053" width="0.2" height="15.0" fill="rgb(221,175,5)" rx="2" ry="2" />
<text  x="1114.68" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="1021.3" y="1957" width="0.1" height="15.0" fill="rgb(211,0,3)" rx="2" ry="2" />
<text  x="1024.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1605" width="0.1" height="15.0" fill="rgb(250,229,53)" rx="2" ry="2" />
<text  x="219.35" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="517.1" y="1989" width="0.1" height="15.0" fill="rgb(244,75,40)" rx="2" ry="2" />
<text  x="520.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="501" width="0.6" height="15.0" fill="rgb(239,3,14)" rx="2" ry="2" />
<text  x="1189.75" y="511.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (492 samples, 2.46%)</title><rect x="543.2" y="1893" width="29.0" height="15.0" fill="rgb(238,123,48)" rx="2" ry="2" />
<text  x="546.17" y="1903.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="709" width="0.2" height="15.0" fill="rgb(220,208,11)" rx="2" ry="2" />
<text  x="1190.64" y="719.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="78.7" y="1253" width="0.2" height="15.0" fill="rgb(244,107,48)" rx="2" ry="2" />
<text  x="81.74" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1413" width="0.1" height="15.0" fill="rgb(249,48,25)" rx="2" ry="2" />
<text  x="1190.52" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1925" width="0.1" height="15.0" fill="rgb(231,212,49)" rx="2" ry="2" />
<text  x="58.57" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.39%)</title><rect x="176.6" y="1717" width="4.6" height="15.0" fill="rgb(224,6,18)" rx="2" ry="2" />
<text  x="179.63" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (7 samples, 0.04%)</title><rect x="1189.4" y="2037" width="0.4" height="15.0" fill="rgb(239,94,41)" rx="2" ry="2" />
<text  x="1192.41" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="293" width="0.6" height="15.0" fill="rgb(211,78,52)" rx="2" ry="2" />
<text  x="1189.75" y="303.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.02%)</title><rect x="938.4" y="1893" width="0.2" height="15.0" fill="rgb(213,21,1)" rx="2" ry="2" />
<text  x="941.43" y="1903.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.02%)</title><rect x="872.2" y="2037" width="0.2" height="15.0" fill="rgb(238,161,39)" rx="2" ry="2" />
<text  x="875.23" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="314.4" y="1957" width="0.1" height="15.0" fill="rgb(209,187,27)" rx="2" ry="2" />
<text  x="317.41" y="1967.5" ></text>
</g>
<g >
<title>lru_add_drain (4 samples, 0.02%)</title><rect x="762.0" y="1877" width="0.2" height="15.0" fill="rgb(209,185,45)" rx="2" ry="2" />
<text  x="764.99" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="30.0" y="1973" width="0.7" height="15.0" fill="rgb(243,123,35)" rx="2" ry="2" />
<text  x="33.04" y="1983.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="654.9" y="1749" width="0.2" height="15.0" fill="rgb(224,29,32)" rx="2" ry="2" />
<text  x="657.94" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="965" width="0.2" height="15.0" fill="rgb(247,17,35)" rx="2" ry="2" />
<text  x="1190.64" y="975.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="213.3" y="1669" width="0.3" height="15.0" fill="rgb(227,19,12)" rx="2" ry="2" />
<text  x="216.34" y="1679.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="83.4" y="1413" width="0.1" height="15.0" fill="rgb(226,29,15)" rx="2" ry="2" />
<text  x="86.41" y="1423.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="869.1" y="1973" width="0.1" height="15.0" fill="rgb(206,152,39)" rx="2" ry="2" />
<text  x="872.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1813" width="0.2" height="15.0" fill="rgb(240,94,44)" rx="2" ry="2" />
<text  x="1190.40" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="645" width="0.4" height="15.0" fill="rgb(240,113,27)" rx="2" ry="2" />
<text  x="1190.81" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="885" width="0.1" height="15.0" fill="rgb(232,179,24)" rx="2" ry="2" />
<text  x="1190.52" y="895.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="165.3" y="1557" width="0.2" height="15.0" fill="rgb(242,29,28)" rx="2" ry="2" />
<text  x="168.34" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="2021" width="0.1" height="15.0" fill="rgb(213,61,19)" rx="2" ry="2" />
<text  x="58.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1589" width="0.4" height="15.0" fill="rgb(225,72,19)" rx="2" ry="2" />
<text  x="1190.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1909" width="0.6" height="15.0" fill="rgb(214,54,25)" rx="2" ry="2" />
<text  x="1190.64" y="1919.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1301" width="0.1" height="15.0" fill="rgb(207,225,24)" rx="2" ry="2" />
<text  x="85.00" y="1311.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (8 samples, 0.04%)</title><rect x="655.2" y="1877" width="0.5" height="15.0" fill="rgb(215,9,5)" rx="2" ry="2" />
<text  x="658.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1413" width="0.1" height="15.0" fill="rgb(243,181,24)" rx="2" ry="2" />
<text  x="219.17" y="1423.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (14 samples, 0.07%)</title><rect x="720.8" y="1877" width="0.8" height="15.0" fill="rgb(215,153,27)" rx="2" ry="2" />
<text  x="723.79" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1221" width="0.6" height="15.0" fill="rgb(246,198,50)" rx="2" ry="2" />
<text  x="1189.75" y="1231.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="759.0" y="1941" width="0.1" height="15.0" fill="rgb(215,11,6)" rx="2" ry="2" />
<text  x="761.97" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1381" width="0.1" height="15.0" fill="rgb(241,192,29)" rx="2" ry="2" />
<text  x="162.25" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="157.7" y="1797" width="0.2" height="15.0" fill="rgb(207,145,21)" rx="2" ry="2" />
<text  x="160.71" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="145.7" y="1605" width="0.1" height="15.0" fill="rgb(232,162,33)" rx="2" ry="2" />
<text  x="148.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.3" y="1669" width="0.2" height="15.0" fill="rgb(220,190,1)" rx="2" ry="2" />
<text  x="219.29" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="185.1" y="1653" width="0.2" height="15.0" fill="rgb(222,221,6)" rx="2" ry="2" />
<text  x="188.14" y="1663.5" ></text>
</g>
<g >
<title>Rank (961 samples, 4.81%)</title><rect x="132.7" y="2005" width="56.8" height="15.0" fill="rgb(235,24,14)" rx="2" ry="2" />
<text  x="135.65" y="2015.5" >Rank</text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1429" width="0.1" height="15.0" fill="rgb(211,105,22)" rx="2" ry="2" />
<text  x="85.00" y="1439.5" ></text>
</g>
<g >
<title>__interceptor_memchr (3 samples, 0.02%)</title><rect x="998.0" y="2053" width="0.1" height="15.0" fill="rgb(229,220,19)" rx="2" ry="2" />
<text  x="1000.95" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="621.9" y="1845" width="0.2" height="15.0" fill="rgb(210,39,49)" rx="2" ry="2" />
<text  x="624.90" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="869" width="0.1" height="15.0" fill="rgb(239,93,9)" rx="2" ry="2" />
<text  x="1190.52" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (6 samples, 0.03%)</title><rect x="71.2" y="37" width="0.3" height="15.0" fill="rgb(211,100,21)" rx="2" ry="2" />
<text  x="74.18" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="341" width="0.2" height="15.0" fill="rgb(238,125,1)" rx="2" ry="2" />
<text  x="1190.64" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1893" width="0.6" height="15.0" fill="rgb(245,111,33)" rx="2" ry="2" />
<text  x="1190.64" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="757" width="0.2" height="15.0" fill="rgb(217,114,1)" rx="2" ry="2" />
<text  x="1190.64" y="767.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (2 samples, 0.01%)</title><rect x="379.7" y="1941" width="0.1" height="15.0" fill="rgb(219,212,2)" rx="2" ry="2" />
<text  x="382.67" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="421" width="0.6" height="15.0" fill="rgb(254,160,47)" rx="2" ry="2" />
<text  x="1189.75" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="37" width="0.4" height="15.0" fill="rgb(239,199,2)" rx="2" ry="2" />
<text  x="1190.81" y="47.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="937.8" y="1925" width="0.2" height="15.0" fill="rgb(234,50,24)" rx="2" ry="2" />
<text  x="940.84" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1269" width="0.1" height="15.0" fill="rgb(222,9,34)" rx="2" ry="2" />
<text  x="219.35" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (14 samples, 0.07%)</title><rect x="522.2" y="1989" width="0.9" height="15.0" fill="rgb(251,159,38)" rx="2" ry="2" />
<text  x="525.24" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="84.2" y="1557" width="0.2" height="15.0" fill="rgb(249,19,15)" rx="2" ry="2" />
<text  x="87.18" y="1567.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.02%)</title><rect x="1112.0" y="1893" width="0.2" height="15.0" fill="rgb(219,98,16)" rx="2" ry="2" />
<text  x="1114.98" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1509" width="0.4" height="15.0" fill="rgb(233,1,23)" rx="2" ry="2" />
<text  x="1190.81" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.3" y="1429" width="0.2" height="15.0" fill="rgb(219,176,37)" rx="2" ry="2" />
<text  x="85.35" y="1439.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (4 samples, 0.02%)</title><rect x="1101.3" y="1925" width="0.3" height="15.0" fill="rgb(244,201,14)" rx="2" ry="2" />
<text  x="1104.34" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 1.82%)</title><rect x="55.8" y="1141" width="21.5" height="15.0" fill="rgb(224,225,30)" rx="2" ry="2" />
<text  x="58.81" y="1151.5" >[..</text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (2 samples, 0.01%)</title><rect x="29.6" y="2005" width="0.1" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="32.62" y="2015.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.01%)</title><rect x="1103.2" y="1893" width="0.1" height="15.0" fill="rgb(239,133,0)" rx="2" ry="2" />
<text  x="1106.23" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="901" width="0.4" height="15.0" fill="rgb(211,220,13)" rx="2" ry="2" />
<text  x="1190.81" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1669" width="0.1" height="15.0" fill="rgb(211,81,43)" rx="2" ry="2" />
<text  x="162.43" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.1" y="1493" width="0.1" height="15.0" fill="rgb(212,120,10)" rx="2" ry="2" />
<text  x="86.06" y="1503.5" ></text>
</g>
<g >
<title>page_fault (32 samples, 0.16%)</title><rect x="689.9" y="1845" width="1.9" height="15.0" fill="rgb(234,5,19)" rx="2" ry="2" />
<text  x="692.93" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="202.5" y="1605" width="0.1" height="15.0" fill="rgb(230,133,36)" rx="2" ry="2" />
<text  x="205.52" y="1615.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (49 samples, 0.25%)</title><rect x="803.8" y="2037" width="2.9" height="15.0" fill="rgb(219,220,9)" rx="2" ry="2" />
<text  x="806.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1381" width="0.1" height="15.0" fill="rgb(236,140,39)" rx="2" ry="2" />
<text  x="219.35" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="693" width="20.4" height="15.0" fill="rgb(219,105,35)" rx="2" ry="2" />
<text  x="58.81" y="703.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (33 samples, 0.17%)</title><rect x="323.3" y="1973" width="2.0" height="15.0" fill="rgb(222,107,1)" rx="2" ry="2" />
<text  x="326.34" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1141" width="0.4" height="15.0" fill="rgb(235,112,41)" rx="2" ry="2" />
<text  x="1190.81" y="1151.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="1102.9" y="2053" width="0.2" height="15.0" fill="rgb(240,29,13)" rx="2" ry="2" />
<text  x="1105.87" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="245" width="0.4" height="15.0" fill="rgb(225,40,33)" rx="2" ry="2" />
<text  x="1190.81" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="885" width="0.2" height="15.0" fill="rgb(232,190,12)" rx="2" ry="2" />
<text  x="1190.64" y="895.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (3 samples, 0.02%)</title><rect x="517.7" y="1909" width="0.2" height="15.0" fill="rgb(247,194,43)" rx="2" ry="2" />
<text  x="520.69" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="188.4" y="1797" width="0.3" height="15.0" fill="rgb(205,76,36)" rx="2" ry="2" />
<text  x="191.39" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (54 samples, 0.27%)</title><rect x="1108.0" y="2053" width="3.1" height="15.0" fill="rgb(236,142,7)" rx="2" ry="2" />
<text  x="1110.96" y="2063.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (13 samples, 0.07%)</title><rect x="1159.5" y="2037" width="0.8" height="15.0" fill="rgb(235,181,27)" rx="2" ry="2" />
<text  x="1162.50" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (530 samples, 2.65%)</title><rect x="55.8" y="1717" width="31.3" height="15.0" fill="rgb(227,101,1)" rx="2" ry="2" />
<text  x="58.75" y="1727.5" >[u..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="85.5" y="1589" width="0.2" height="15.0" fill="rgb(241,51,30)" rx="2" ry="2" />
<text  x="88.54" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1029" width="0.6" height="15.0" fill="rgb(237,178,49)" rx="2" ry="2" />
<text  x="1189.75" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.5" y="1605" width="0.1" height="15.0" fill="rgb(216,57,22)" rx="2" ry="2" />
<text  x="1190.46" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.01%)</title><rect x="869.9" y="2037" width="0.1" height="15.0" fill="rgb(222,208,25)" rx="2" ry="2" />
<text  x="872.86" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (2 samples, 0.01%)</title><rect x="478.4" y="1957" width="0.2" height="15.0" fill="rgb(224,205,51)" rx="2" ry="2" />
<text  x="481.44" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (313 samples, 1.57%)</title><rect x="10.1" y="2053" width="18.5" height="15.0" fill="rgb(207,129,8)" rx="2" ry="2" />
<text  x="13.12" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (131 samples, 0.66%)</title><rect x="123.7" y="1973" width="7.7" height="15.0" fill="rgb(231,176,9)" rx="2" ry="2" />
<text  x="126.67" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="213.8" y="1669" width="0.1" height="15.0" fill="rgb(250,26,33)" rx="2" ry="2" />
<text  x="216.81" y="1679.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.02%)</title><rect x="178.8" y="1621" width="0.2" height="15.0" fill="rgb(219,220,41)" rx="2" ry="2" />
<text  x="181.82" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (557 samples, 2.79%)</title><rect x="55.7" y="1845" width="32.9" height="15.0" fill="rgb(228,130,9)" rx="2" ry="2" />
<text  x="58.69" y="1855.5" >[u..</text>
</g>
<g >
<title>clear_page_erms (14 samples, 0.07%)</title><rect x="509.6" y="1845" width="0.8" height="15.0" fill="rgb(209,189,52)" rx="2" ry="2" />
<text  x="512.59" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (79 samples, 0.40%)</title><rect x="1160.9" y="2037" width="4.7" height="15.0" fill="rgb(254,59,19)" rx="2" ry="2" />
<text  x="1163.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1061" width="0.1" height="15.0" fill="rgb(227,99,25)" rx="2" ry="2" />
<text  x="1190.52" y="1071.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (322 samples, 1.61%)</title><rect x="222.7" y="1957" width="19.0" height="15.0" fill="rgb(229,50,5)" rx="2" ry="2" />
<text  x="225.68" y="1967.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (170 samples, 0.85%)</title><rect x="498.8" y="1957" width="10.1" height="15.0" fill="rgb(205,46,40)" rx="2" ry="2" />
<text  x="501.83" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.80%)</title><rect x="55.8" y="1093" width="21.3" height="15.0" fill="rgb(236,102,20)" rx="2" ry="2" />
<text  x="58.81" y="1103.5" >[..</text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="136.7" y="1557" width="0.3" height="15.0" fill="rgb(205,61,9)" rx="2" ry="2" />
<text  x="139.73" y="1567.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="579.8" y="1877" width="0.3" height="15.0" fill="rgb(216,158,23)" rx="2" ry="2" />
<text  x="582.76" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="207.5" y="1637" width="0.2" height="15.0" fill="rgb(235,105,28)" rx="2" ry="2" />
<text  x="210.54" y="1647.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (9 samples, 0.05%)</title><rect x="516.6" y="1973" width="0.5" height="15.0" fill="rgb(248,94,6)" rx="2" ry="2" />
<text  x="519.57" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="229" width="20.1" height="15.0" fill="rgb(229,124,51)" rx="2" ry="2" />
<text  x="58.81" y="239.5" ></text>
</g>
<g >
<title>zalloc_cpumask_var (2 samples, 0.01%)</title><rect x="941.3" y="1861" width="0.1" height="15.0" fill="rgb(239,163,23)" rx="2" ry="2" />
<text  x="944.33" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="806.9" y="2005" width="0.2" height="15.0" fill="rgb(227,121,2)" rx="2" ry="2" />
<text  x="809.91" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="55.0" y="1893" width="0.1" height="15.0" fill="rgb(205,34,2)" rx="2" ry="2" />
<text  x="57.98" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (99 samples, 0.50%)</title><rect x="170.7" y="1701" width="5.9" height="15.0" fill="rgb(239,168,17)" rx="2" ry="2" />
<text  x="173.72" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="202.7" y="1605" width="0.3" height="15.0" fill="rgb(226,189,39)" rx="2" ry="2" />
<text  x="205.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1237" width="0.6" height="15.0" fill="rgb(241,9,13)" rx="2" ry="2" />
<text  x="1189.75" y="1247.5" ></text>
</g>
<g >
<title>native_write_msr (21 samples, 0.11%)</title><rect x="940.0" y="1765" width="1.3" height="15.0" fill="rgb(237,205,8)" rx="2" ry="2" />
<text  x="943.03" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (374 samples, 1.87%)</title><rect x="55.8" y="1205" width="22.1" height="15.0" fill="rgb(233,62,54)" rx="2" ry="2" />
<text  x="58.81" y="1215.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="645" width="0.1" height="15.0" fill="rgb(206,20,11)" rx="2" ry="2" />
<text  x="1190.52" y="655.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="81.8" y="1365" width="0.1" height="15.0" fill="rgb(215,207,48)" rx="2" ry="2" />
<text  x="84.82" y="1375.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (34 samples, 0.17%)</title><rect x="807.1" y="2037" width="2.1" height="15.0" fill="rgb(226,102,49)" rx="2" ry="2" />
<text  x="810.15" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (390 samples, 1.95%)</title><rect x="55.8" y="1269" width="23.1" height="15.0" fill="rgb(226,110,33)" rx="2" ry="2" />
<text  x="58.81" y="1279.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.38%)</title><rect x="190.5" y="1717" width="4.5" height="15.0" fill="rgb(235,19,8)" rx="2" ry="2" />
<text  x="193.46" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1509" width="0.2" height="15.0" fill="rgb(212,17,35)" rx="2" ry="2" />
<text  x="219.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1925" width="0.2" height="15.0" fill="rgb(210,152,40)" rx="2" ry="2" />
<text  x="1190.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1861" width="0.6" height="15.0" fill="rgb(245,198,42)" rx="2" ry="2" />
<text  x="1190.64" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.8" y="1461" width="0.1" height="15.0" fill="rgb(232,72,16)" rx="2" ry="2" />
<text  x="85.76" y="1471.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="654.8" y="1813" width="0.4" height="15.0" fill="rgb(214,45,2)" rx="2" ry="2" />
<text  x="657.82" y="1823.5" ></text>
</g>
<g >
<title>TDocument::operator= (2 samples, 0.01%)</title><rect x="519.1" y="1957" width="0.1" height="15.0" fill="rgb(245,2,28)" rx="2" ry="2" />
<text  x="522.11" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="79.5" y="1285" width="0.1" height="15.0" fill="rgb(250,123,5)" rx="2" ry="2" />
<text  x="82.45" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (282 samples, 1.41%)</title><rect x="160.0" y="1765" width="16.6" height="15.0" fill="rgb(248,71,52)" rx="2" ry="2" />
<text  x="162.96" y="1775.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,198 samples, 6.00%)</title><rect x="241.8" y="1973" width="70.8" height="15.0" fill="rgb(249,176,26)" rx="2" ry="2" />
<text  x="244.83" y="1983.5" >fasttext..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="215.1" y="1685" width="0.1" height="15.0" fill="rgb(249,36,30)" rx="2" ry="2" />
<text  x="218.05" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (82 samples, 0.41%)</title><rect x="195.0" y="1669" width="4.9" height="15.0" fill="rgb(237,214,2)" rx="2" ry="2" />
<text  x="198.01" y="1679.5" ></text>
</g>
<g >
<title>smp_call_function_many (3 samples, 0.02%)</title><rect x="1101.9" y="1781" width="0.2" height="15.0" fill="rgb(250,179,38)" rx="2" ry="2" />
<text  x="1104.93" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.07%)</title><rect x="522.2" y="2021" width="0.9" height="15.0" fill="rgb(250,111,48)" rx="2" ry="2" />
<text  x="525.24" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.7" y="1301" width="0.2" height="15.0" fill="rgb(228,187,52)" rx="2" ry="2" />
<text  x="82.75" y="1311.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="54.6" y="1877" width="0.2" height="15.0" fill="rgb(212,211,50)" rx="2" ry="2" />
<text  x="57.57" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1045" width="0.4" height="15.0" fill="rgb(214,78,45)" rx="2" ry="2" />
<text  x="1190.81" y="1055.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="519.1" y="1989" width="0.4" height="15.0" fill="rgb(211,210,24)" rx="2" ry="2" />
<text  x="522.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.5" y="1701" width="0.1" height="15.0" fill="rgb(238,147,48)" rx="2" ry="2" />
<text  x="1190.46" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.26%)</title><rect x="149.1" y="1653" width="3.0" height="15.0" fill="rgb(217,45,39)" rx="2" ry="2" />
<text  x="152.08" y="1663.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="317.8" y="1941" width="0.2" height="15.0" fill="rgb(244,155,23)" rx="2" ry="2" />
<text  x="320.84" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="933" width="0.2" height="15.0" fill="rgb(240,4,27)" rx="2" ry="2" />
<text  x="1190.64" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="613" width="0.1" height="15.0" fill="rgb(206,145,25)" rx="2" ry="2" />
<text  x="1190.52" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1877" width="0.3" height="15.0" fill="rgb(226,112,21)" rx="2" ry="2" />
<text  x="162.19" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="82.0" y="1125" width="0.1" height="15.0" fill="rgb(224,184,31)" rx="2" ry="2" />
<text  x="85.00" y="1135.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1016.9" y="2037" width="0.2" height="15.0" fill="rgb(239,156,10)" rx="2" ry="2" />
<text  x="1019.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="117" width="0.4" height="15.0" fill="rgb(211,32,37)" rx="2" ry="2" />
<text  x="1190.81" y="127.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (20 samples, 0.10%)</title><rect x="127.9" y="1909" width="1.2" height="15.0" fill="rgb(237,221,21)" rx="2" ry="2" />
<text  x="130.92" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1109" width="0.1" height="15.0" fill="rgb(244,191,38)" rx="2" ry="2" />
<text  x="219.17" y="1119.5" ></text>
</g>
<g >
<title>perf_iterate_sb (2 samples, 0.01%)</title><rect x="1102.3" y="1909" width="0.1" height="15.0" fill="rgb(244,167,1)" rx="2" ry="2" />
<text  x="1105.28" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="1973" width="0.1" height="15.0" fill="rgb(242,214,14)" rx="2" ry="2" />
<text  x="1190.28" y="1983.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (132 samples, 0.66%)</title><rect x="501.0" y="1909" width="7.8" height="15.0" fill="rgb(222,183,14)" rx="2" ry="2" />
<text  x="504.02" y="1919.5" ></text>
</g>
<g >
<title>TDocument::operator= (2 samples, 0.01%)</title><rect x="519.2" y="1957" width="0.1" height="15.0" fill="rgb(226,17,28)" rx="2" ry="2" />
<text  x="522.23" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="53" width="0.4" height="15.0" fill="rgb(225,167,51)" rx="2" ry="2" />
<text  x="1190.81" y="63.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="92.5" y="2021" width="0.3" height="15.0" fill="rgb(252,211,19)" rx="2" ry="2" />
<text  x="95.52" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="149" width="0.6" height="15.0" fill="rgb(219,116,17)" rx="2" ry="2" />
<text  x="1189.75" y="159.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (43 samples, 0.22%)</title><rect x="119.0" y="2037" width="2.5" height="15.0" fill="rgb(214,176,0)" rx="2" ry="2" />
<text  x="122.00" y="2047.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (7 samples, 0.04%)</title><rect x="379.8" y="1941" width="0.4" height="15.0" fill="rgb(235,130,14)" rx="2" ry="2" />
<text  x="382.79" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (10 samples, 0.05%)</title><rect x="870.0" y="2037" width="0.6" height="15.0" fill="rgb(224,177,50)" rx="2" ry="2" />
<text  x="872.98" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="549" width="20.4" height="15.0" fill="rgb(232,78,4)" rx="2" ry="2" />
<text  x="58.81" y="559.5" ></text>
</g>
<g >
<title>unmap_vmas (8 samples, 0.04%)</title><rect x="1103.1" y="1941" width="0.5" height="15.0" fill="rgb(218,87,5)" rx="2" ry="2" />
<text  x="1106.11" y="1951.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.02%)</title><rect x="122.2" y="1909" width="0.2" height="15.0" fill="rgb(245,214,2)" rx="2" ry="2" />
<text  x="125.19" y="1919.5" ></text>
</g>
<g >
<title>std::istream::get (4 samples, 0.02%)</title><rect x="869.2" y="1989" width="0.2" height="15.0" fill="rgb(228,159,15)" rx="2" ry="2" />
<text  x="872.21" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1285" width="0.1" height="15.0" fill="rgb(240,187,14)" rx="2" ry="2" />
<text  x="162.43" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1957" width="0.6" height="15.0" fill="rgb(205,53,8)" rx="2" ry="2" />
<text  x="1190.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="565" width="0.1" height="15.0" fill="rgb(225,30,32)" rx="2" ry="2" />
<text  x="1190.52" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1397" width="0.6" height="15.0" fill="rgb(242,211,33)" rx="2" ry="2" />
<text  x="1189.75" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (10 samples, 0.05%)</title><rect x="635.1" y="1877" width="0.6" height="15.0" fill="rgb(230,89,23)" rx="2" ry="2" />
<text  x="638.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.40%)</title><rect x="147.8" y="1749" width="4.8" height="15.0" fill="rgb(221,1,10)" rx="2" ry="2" />
<text  x="150.84" y="1759.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (7 samples, 0.04%)</title><rect x="749.2" y="1893" width="0.4" height="15.0" fill="rgb(208,43,17)" rx="2" ry="2" />
<text  x="752.22" y="1903.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="156.4" y="1669" width="0.3" height="15.0" fill="rgb(208,9,34)" rx="2" ry="2" />
<text  x="159.35" y="1679.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (9 samples, 0.05%)</title><rect x="516.6" y="1957" width="0.5" height="15.0" fill="rgb(239,172,3)" rx="2" ry="2" />
<text  x="519.57" y="1967.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="82.0" y="1157" width="0.1" height="15.0" fill="rgb(241,172,30)" rx="2" ry="2" />
<text  x="85.00" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1621" width="0.2" height="15.0" fill="rgb(210,4,53)" rx="2" ry="2" />
<text  x="191.51" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (344 samples, 1.72%)</title><rect x="190.3" y="1797" width="20.4" height="15.0" fill="rgb(249,226,42)" rx="2" ry="2" />
<text  x="193.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.3" y="1909" width="0.4" height="15.0" fill="rgb(225,221,39)" rx="2" ry="2" />
<text  x="191.33" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (43 samples, 0.22%)</title><rect x="813.1" y="2005" width="2.6" height="15.0" fill="rgb(209,88,47)" rx="2" ry="2" />
<text  x="816.12" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (342 samples, 1.71%)</title><rect x="55.8" y="453" width="20.2" height="15.0" fill="rgb(237,84,11)" rx="2" ry="2" />
<text  x="58.81" y="463.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="773" width="20.5" height="15.0" fill="rgb(233,135,27)" rx="2" ry="2" />
<text  x="58.81" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="199.9" y="1749" width="0.2" height="15.0" fill="rgb(239,71,52)" rx="2" ry="2" />
<text  x="202.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1653" width="0.2" height="15.0" fill="rgb(219,124,13)" rx="2" ry="2" />
<text  x="219.11" y="1663.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (5 samples, 0.03%)</title><rect x="1126.3" y="2037" width="0.3" height="15.0" fill="rgb(221,125,46)" rx="2" ry="2" />
<text  x="1129.28" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1253" width="0.1" height="15.0" fill="rgb(223,164,36)" rx="2" ry="2" />
<text  x="219.35" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1269" width="0.2" height="15.0" fill="rgb(228,227,34)" rx="2" ry="2" />
<text  x="191.51" y="1279.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="517.1" y="1973" width="0.1" height="15.0" fill="rgb(232,198,19)" rx="2" ry="2" />
<text  x="520.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="117" width="0.1" height="15.0" fill="rgb(218,3,24)" rx="2" ry="2" />
<text  x="1190.52" y="127.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="180.0" y="1621" width="0.1" height="15.0" fill="rgb(224,88,4)" rx="2" ry="2" />
<text  x="183.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1301" width="0.4" height="15.0" fill="rgb(210,179,17)" rx="2" ry="2" />
<text  x="1190.81" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="357" width="0.4" height="15.0" fill="rgb(210,117,33)" rx="2" ry="2" />
<text  x="1190.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1221" width="0.2" height="15.0" fill="rgb(221,124,41)" rx="2" ry="2" />
<text  x="191.51" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1285" width="0.2" height="15.0" fill="rgb(232,170,2)" rx="2" ry="2" />
<text  x="1190.64" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="949" width="0.4" height="15.0" fill="rgb(231,67,52)" rx="2" ry="2" />
<text  x="1190.81" y="959.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (7 samples, 0.04%)</title><rect x="520.4" y="2037" width="0.4" height="15.0" fill="rgb(222,207,54)" rx="2" ry="2" />
<text  x="523.35" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="809.6" y="2037" width="0.1" height="15.0" fill="rgb(232,126,48)" rx="2" ry="2" />
<text  x="812.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (99 samples, 0.50%)</title><rect x="160.0" y="1701" width="5.9" height="15.0" fill="rgb(212,153,2)" rx="2" ry="2" />
<text  x="163.02" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="158.2" y="1829" width="0.1" height="15.0" fill="rgb(226,126,29)" rx="2" ry="2" />
<text  x="161.19" y="1839.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="1020.9" y="2037" width="0.5" height="15.0" fill="rgb(244,12,8)" rx="2" ry="2" />
<text  x="1023.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1557" width="0.1" height="15.0" fill="rgb(233,162,25)" rx="2" ry="2" />
<text  x="219.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="821" width="0.1" height="15.0" fill="rgb(249,46,48)" rx="2" ry="2" />
<text  x="1190.52" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1653" width="0.2" height="15.0" fill="rgb(208,18,42)" rx="2" ry="2" />
<text  x="1190.64" y="1663.5" ></text>
</g>
<g >
<title>DetectCategory (2 samples, 0.01%)</title><rect x="10.0" y="2053" width="0.1" height="15.0" fill="rgb(243,194,35)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.4" y="2021" width="0.2" height="15.0" fill="rgb(218,90,53)" rx="2" ry="2" />
<text  x="1189.39" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="104.6" y="1989" width="0.1" height="15.0" fill="rgb(241,175,44)" rx="2" ry="2" />
<text  x="107.57" y="1999.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.05%)</title><rect x="137.3" y="1557" width="0.5" height="15.0" fill="rgb(250,218,21)" rx="2" ry="2" />
<text  x="140.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1493" width="0.2" height="15.0" fill="rgb(223,215,10)" rx="2" ry="2" />
<text  x="191.51" y="1503.5" ></text>
</g>
<g >
<title>__asan_memset (16 samples, 0.08%)</title><rect x="680.2" y="1861" width="1.0" height="15.0" fill="rgb(216,84,0)" rx="2" ry="2" />
<text  x="683.24" y="1871.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (17 samples, 0.09%)</title><rect x="761.7" y="1957" width="1.0" height="15.0" fill="rgb(254,113,38)" rx="2" ry="2" />
<text  x="764.69" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.4" y="917" width="0.2" height="15.0" fill="rgb(241,146,13)" rx="2" ry="2" />
<text  x="79.44" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="85.5" y="1605" width="0.2" height="15.0" fill="rgb(207,89,42)" rx="2" ry="2" />
<text  x="88.54" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (73 samples, 0.37%)</title><rect x="200.6" y="1637" width="4.3" height="15.0" fill="rgb(236,116,31)" rx="2" ry="2" />
<text  x="203.63" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="837" width="20.5" height="15.0" fill="rgb(244,104,36)" rx="2" ry="2" />
<text  x="58.81" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="170.5" y="1701" width="0.2" height="15.0" fill="rgb(233,225,7)" rx="2" ry="2" />
<text  x="173.54" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="757" width="0.1" height="15.0" fill="rgb(221,190,39)" rx="2" ry="2" />
<text  x="1190.52" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.40%)</title><rect x="165.9" y="1717" width="4.8" height="15.0" fill="rgb(248,5,49)" rx="2" ry="2" />
<text  x="168.93" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1557" width="0.2" height="15.0" fill="rgb(250,42,49)" rx="2" ry="2" />
<text  x="1190.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1429" width="0.1" height="15.0" fill="rgb(229,66,52)" rx="2" ry="2" />
<text  x="1190.52" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1541" width="0.1" height="15.0" fill="rgb(239,102,4)" rx="2" ry="2" />
<text  x="219.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1493" width="0.1" height="15.0" fill="rgb(241,77,39)" rx="2" ry="2" />
<text  x="1190.52" y="1503.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="731.4" y="1893" width="0.1" height="15.0" fill="rgb(233,34,37)" rx="2" ry="2" />
<text  x="734.37" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1557" width="0.2" height="15.0" fill="rgb(235,138,47)" rx="2" ry="2" />
<text  x="191.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1861" width="0.3" height="15.0" fill="rgb(235,149,22)" rx="2" ry="2" />
<text  x="162.19" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="518.8" y="1973" width="0.1" height="15.0" fill="rgb(207,84,31)" rx="2" ry="2" />
<text  x="521.75" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="405" width="0.2" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="1190.64" y="415.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (90 samples, 0.45%)</title><rect x="38.8" y="2021" width="5.3" height="15.0" fill="rgb(254,97,2)" rx="2" ry="2" />
<text  x="41.79" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="2005" width="0.2" height="15.0" fill="rgb(233,100,8)" rx="2" ry="2" />
<text  x="1189.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="216.3" y="1733" width="0.2" height="15.0" fill="rgb(214,81,47)" rx="2" ry="2" />
<text  x="219.29" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (15 samples, 0.08%)</title><rect x="618.5" y="1845" width="0.9" height="15.0" fill="rgb(242,162,4)" rx="2" ry="2" />
<text  x="621.47" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (221 samples, 1.11%)</title><rect x="526.8" y="1925" width="13.1" height="15.0" fill="rgb(235,111,41)" rx="2" ry="2" />
<text  x="529.79" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="190.5" y="1669" width="0.4" height="15.0" fill="rgb(230,106,29)" rx="2" ry="2" />
<text  x="193.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (82 samples, 0.41%)</title><rect x="195.0" y="1637" width="4.9" height="15.0" fill="rgb(248,229,18)" rx="2" ry="2" />
<text  x="198.01" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1333" width="0.1" height="15.0" fill="rgb(230,95,11)" rx="2" ry="2" />
<text  x="1190.52" y="1343.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="169.4" y="1573" width="0.1" height="15.0" fill="rgb(225,182,33)" rx="2" ry="2" />
<text  x="172.42" y="1583.5" ></text>
</g>
<g >
<title>__vma_adjust (3 samples, 0.02%)</title><rect x="1102.5" y="1909" width="0.1" height="15.0" fill="rgb(227,147,23)" rx="2" ry="2" />
<text  x="1105.46" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (181 samples, 0.91%)</title><rect x="160.0" y="1733" width="10.7" height="15.0" fill="rgb(227,147,2)" rx="2" ry="2" />
<text  x="162.96" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="853" width="0.2" height="15.0" fill="rgb(225,64,13)" rx="2" ry="2" />
<text  x="1190.64" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="187.9" y="1781" width="0.1" height="15.0" fill="rgb(226,19,34)" rx="2" ry="2" />
<text  x="190.86" y="1791.5" ></text>
</g>
<g >
<title>__pthread_getspecific (44 samples, 0.22%)</title><rect x="523.1" y="2037" width="2.6" height="15.0" fill="rgb(238,96,31)" rx="2" ry="2" />
<text  x="526.07" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (11 samples, 0.06%)</title><rect x="1153.1" y="2037" width="0.6" height="15.0" fill="rgb(212,56,4)" rx="2" ry="2" />
<text  x="1156.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (54 samples, 0.27%)</title><rect x="191.6" y="1589" width="3.2" height="15.0" fill="rgb(223,157,49)" rx="2" ry="2" />
<text  x="194.58" y="1599.5" ></text>
</g>
<g >
<title>std::istream::read (2 samples, 0.01%)</title><rect x="1188.4" y="2053" width="0.1" height="15.0" fill="rgb(205,187,46)" rx="2" ry="2" />
<text  x="1191.40" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1797" width="0.7" height="15.0" fill="rgb(246,175,42)" rx="2" ry="2" />
<text  x="1189.63" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="1941" width="0.1" height="15.0" fill="rgb(216,37,5)" rx="2" ry="2" />
<text  x="1190.28" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1029" width="0.2" height="15.0" fill="rgb(251,184,29)" rx="2" ry="2" />
<text  x="1190.64" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (600 samples, 3.01%)</title><rect x="55.7" y="1989" width="35.5" height="15.0" fill="rgb(208,175,29)" rx="2" ry="2" />
<text  x="58.69" y="1999.5" >[un..</text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (3 samples, 0.02%)</title><rect x="518.8" y="1861" width="0.1" height="15.0" fill="rgb(216,220,0)" rx="2" ry="2" />
<text  x="521.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1861" width="0.4" height="15.0" fill="rgb(253,5,2)" rx="2" ry="2" />
<text  x="219.11" y="1871.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="677.8" y="1797" width="0.1" height="15.0" fill="rgb(235,14,29)" rx="2" ry="2" />
<text  x="680.82" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="661" width="20.4" height="15.0" fill="rgb(206,60,1)" rx="2" ry="2" />
<text  x="58.81" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="533" width="0.1" height="15.0" fill="rgb(242,186,38)" rx="2" ry="2" />
<text  x="1190.52" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1509" width="0.1" height="15.0" fill="rgb(246,139,3)" rx="2" ry="2" />
<text  x="86.41" y="1519.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.10%)</title><rect x="499.8" y="1877" width="1.2" height="15.0" fill="rgb(217,12,29)" rx="2" ry="2" />
<text  x="502.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1349" width="0.1" height="15.0" fill="rgb(210,15,6)" rx="2" ry="2" />
<text  x="219.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="159.1" y="1909" width="0.4" height="15.0" fill="rgb(229,128,38)" rx="2" ry="2" />
<text  x="162.13" y="1919.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (61 samples, 0.31%)</title><rect x="112.1" y="2037" width="3.6" height="15.0" fill="rgb(215,162,37)" rx="2" ry="2" />
<text  x="115.14" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1909" width="0.7" height="15.0" fill="rgb(236,40,6)" rx="2" ry="2" />
<text  x="1189.63" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="150.2" y="1637" width="0.1" height="15.0" fill="rgb(210,171,50)" rx="2" ry="2" />
<text  x="153.21" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="10.0" y="2021" width="0.1" height="15.0" fill="rgb(209,205,0)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.74%)</title><rect x="55.8" y="901" width="20.6" height="15.0" fill="rgb(211,177,27)" rx="2" ry="2" />
<text  x="58.81" y="911.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="142.3" y="1589" width="0.2" height="15.0" fill="rgb(212,219,42)" rx="2" ry="2" />
<text  x="145.29" y="1599.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="585.8" y="1877" width="0.3" height="15.0" fill="rgb(235,87,39)" rx="2" ry="2" />
<text  x="588.84" y="1887.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (21 samples, 0.11%)</title><rect x="940.0" y="1781" width="1.3" height="15.0" fill="rgb(244,9,33)" rx="2" ry="2" />
<text  x="943.03" y="1791.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="1124.7" y="2037" width="0.4" height="15.0" fill="rgb(218,127,25)" rx="2" ry="2" />
<text  x="1127.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1317" width="0.1" height="15.0" fill="rgb(248,46,10)" rx="2" ry="2" />
<text  x="162.43" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (541 samples, 2.71%)</title><rect x="55.8" y="1781" width="31.9" height="15.0" fill="rgb(221,114,37)" rx="2" ry="2" />
<text  x="58.75" y="1791.5" >[u..</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1445" width="0.1" height="15.0" fill="rgb(210,194,8)" rx="2" ry="2" />
<text  x="86.41" y="1455.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="169.7" y="1573" width="0.2" height="15.0" fill="rgb(239,149,10)" rx="2" ry="2" />
<text  x="172.71" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1461" width="0.1" height="15.0" fill="rgb(239,217,52)" rx="2" ry="2" />
<text  x="219.17" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1237" width="0.2" height="15.0" fill="rgb(242,59,48)" rx="2" ry="2" />
<text  x="1190.64" y="1247.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="203.4" y="1605" width="0.2" height="15.0" fill="rgb(215,201,15)" rx="2" ry="2" />
<text  x="206.41" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="45.8" y="2005" width="0.1" height="15.0" fill="rgb(235,32,19)" rx="2" ry="2" />
<text  x="48.82" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (95 samples, 0.48%)</title><rect x="181.5" y="1765" width="5.7" height="15.0" fill="rgb(213,0,21)" rx="2" ry="2" />
<text  x="184.54" y="1775.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="691.6" y="1733" width="0.2" height="15.0" fill="rgb(229,75,34)" rx="2" ry="2" />
<text  x="694.59" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (11 samples, 0.06%)</title><rect x="585.2" y="1877" width="0.6" height="15.0" fill="rgb(209,40,4)" rx="2" ry="2" />
<text  x="588.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="661" width="0.6" height="15.0" fill="rgb(238,89,48)" rx="2" ry="2" />
<text  x="1189.75" y="671.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="151.4" y="1637" width="0.3" height="15.0" fill="rgb(224,151,54)" rx="2" ry="2" />
<text  x="154.39" y="1647.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (459 samples, 2.30%)</title><rect x="189.7" y="1989" width="27.1" height="15.0" fill="rgb(225,36,42)" rx="2" ry="2" />
<text  x="192.69" y="1999.5" >T..</text>
</g>
<g >
<title>strcmp@plt (8 samples, 0.04%)</title><rect x="44.8" y="2037" width="0.5" height="15.0" fill="rgb(224,169,38)" rx="2" ry="2" />
<text  x="47.82" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="540.2" y="1957" width="0.1" height="15.0" fill="rgb(218,178,15)" rx="2" ry="2" />
<text  x="543.15" y="1967.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (49 samples, 0.25%)</title><rect x="328.1" y="1989" width="2.9" height="15.0" fill="rgb(238,63,51)" rx="2" ry="2" />
<text  x="331.13" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="30.3" y="1893" width="0.3" height="15.0" fill="rgb(248,80,2)" rx="2" ry="2" />
<text  x="33.27" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (11 samples, 0.06%)</title><rect x="158.1" y="1893" width="0.6" height="15.0" fill="rgb(216,74,43)" rx="2" ry="2" />
<text  x="161.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (100 samples, 0.50%)</title><rect x="170.7" y="1733" width="5.9" height="15.0" fill="rgb(222,104,9)" rx="2" ry="2" />
<text  x="173.72" y="1743.5" ></text>
</g>
<g >
<title>std::locale::operator= (2 samples, 0.01%)</title><rect x="29.2" y="2021" width="0.1" height="15.0" fill="rgb(225,198,37)" rx="2" ry="2" />
<text  x="32.15" y="2031.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.04%)</title><rect x="136.3" y="1557" width="0.4" height="15.0" fill="rgb(237,170,16)" rx="2" ry="2" />
<text  x="139.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1557" width="0.6" height="15.0" fill="rgb(221,34,35)" rx="2" ry="2" />
<text  x="1189.69" y="1567.5" ></text>
</g>
<g >
<title>__madvise (17 samples, 0.09%)</title><rect x="522.1" y="2037" width="1.0" height="15.0" fill="rgb(218,160,10)" rx="2" ry="2" />
<text  x="525.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1349" width="0.1" height="15.0" fill="rgb(222,54,32)" rx="2" ry="2" />
<text  x="219.35" y="1359.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.01%)</title><rect x="189.8" y="1957" width="0.1" height="15.0" fill="rgb(253,154,24)" rx="2" ry="2" />
<text  x="192.81" y="1967.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (2,060 samples, 10.32%)</title><rect x="374.5" y="1973" width="121.7" height="15.0" fill="rgb(223,20,48)" rx="2" ry="2" />
<text  x="377.47" y="1983.5" >TFastTextEmbedd..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="1121.2" y="2037" width="0.1" height="15.0" fill="rgb(213,50,29)" rx="2" ry="2" />
<text  x="1124.20" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="158.1" y="1861" width="0.4" height="15.0" fill="rgb(244,208,19)" rx="2" ry="2" />
<text  x="161.13" y="1871.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.01%)</title><rect x="522.2" y="1973" width="0.2" height="15.0" fill="rgb(236,209,34)" rx="2" ry="2" />
<text  x="525.24" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1397" width="0.1" height="15.0" fill="rgb(208,48,14)" rx="2" ry="2" />
<text  x="1190.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="997" width="0.4" height="15.0" fill="rgb(249,80,21)" rx="2" ry="2" />
<text  x="1190.81" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.40%)</title><rect x="147.8" y="1781" width="4.8" height="15.0" fill="rgb(220,139,24)" rx="2" ry="2" />
<text  x="150.84" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.27%)</title><rect x="172.5" y="1605" width="3.1" height="15.0" fill="rgb(228,128,30)" rx="2" ry="2" />
<text  x="175.49" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="98.0" y="2021" width="0.1" height="15.0" fill="rgb(215,161,27)" rx="2" ry="2" />
<text  x="100.95" y="2031.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="634.6" y="1877" width="0.5" height="15.0" fill="rgb(208,88,32)" rx="2" ry="2" />
<text  x="637.61" y="1887.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (215 samples, 1.08%)</title><rect x="478.6" y="1957" width="12.7" height="15.0" fill="rgb(242,35,20)" rx="2" ry="2" />
<text  x="481.56" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="90.5" y="1925" width="0.1" height="15.0" fill="rgb(214,138,12)" rx="2" ry="2" />
<text  x="93.51" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (224 samples, 1.12%)</title><rect x="707.5" y="1877" width="13.2" height="15.0" fill="rgb(231,13,22)" rx="2" ry="2" />
<text  x="710.49" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="163.3" y="1541" width="0.2" height="15.0" fill="rgb(222,190,45)" rx="2" ry="2" />
<text  x="166.33" y="1551.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (4 samples, 0.02%)</title><rect x="595.2" y="1877" width="0.2" height="15.0" fill="rgb(227,167,31)" rx="2" ry="2" />
<text  x="598.18" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (3 samples, 0.02%)</title><rect x="152.6" y="1781" width="0.1" height="15.0" fill="rgb(244,123,12)" rx="2" ry="2" />
<text  x="155.57" y="1791.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="151.1" y="1637" width="0.3" height="15.0" fill="rgb(252,221,13)" rx="2" ry="2" />
<text  x="154.09" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="762.0" y="1829" width="0.2" height="15.0" fill="rgb(249,94,18)" rx="2" ry="2" />
<text  x="764.99" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1573" width="0.2" height="15.0" fill="rgb(221,224,38)" rx="2" ry="2" />
<text  x="219.11" y="1583.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="203.9" y="1605" width="0.5" height="15.0" fill="rgb(210,149,40)" rx="2" ry="2" />
<text  x="206.94" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.8" y="1413" width="0.1" height="15.0" fill="rgb(254,226,16)" rx="2" ry="2" />
<text  x="85.76" y="1423.5" ></text>
</g>
<g >
<title>cpumask_any_but (5 samples, 0.03%)</title><rect x="939.1" y="1909" width="0.3" height="15.0" fill="rgb(215,199,17)" rx="2" ry="2" />
<text  x="942.08" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (442 samples, 2.21%)</title><rect x="189.9" y="1957" width="26.2" height="15.0" fill="rgb(209,94,28)" rx="2" ry="2" />
<text  x="192.93" y="1967.5" >s..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (60 samples, 0.30%)</title><rect x="144.2" y="1653" width="3.5" height="15.0" fill="rgb(225,145,44)" rx="2" ry="2" />
<text  x="147.18" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (260 samples, 1.30%)</title><rect x="55.8" y="37" width="15.4" height="15.0" fill="rgb(212,214,27)" rx="2" ry="2" />
<text  x="58.81" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="216.1" y="1909" width="0.4" height="15.0" fill="rgb(215,42,40)" rx="2" ry="2" />
<text  x="219.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1365" width="0.1" height="15.0" fill="rgb(240,168,3)" rx="2" ry="2" />
<text  x="162.25" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="210.7" y="1765" width="0.2" height="15.0" fill="rgb(211,131,35)" rx="2" ry="2" />
<text  x="213.68" y="1775.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="651.2" y="1749" width="0.1" height="15.0" fill="rgb(207,30,35)" rx="2" ry="2" />
<text  x="654.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.3" y="1861" width="0.4" height="15.0" fill="rgb(221,153,33)" rx="2" ry="2" />
<text  x="191.33" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (43 samples, 0.22%)</title><rect x="178.3" y="1637" width="2.5" height="15.0" fill="rgb(213,209,26)" rx="2" ry="2" />
<text  x="181.28" y="1647.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="162.9" y="1541" width="0.1" height="15.0" fill="rgb(251,104,24)" rx="2" ry="2" />
<text  x="165.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.3" y="1653" width="0.2" height="15.0" fill="rgb(244,126,50)" rx="2" ry="2" />
<text  x="219.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1893" width="0.2" height="15.0" fill="rgb(227,16,47)" rx="2" ry="2" />
<text  x="1190.40" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (5 samples, 0.03%)</title><rect x="44.1" y="2021" width="0.3" height="15.0" fill="rgb(233,214,43)" rx="2" ry="2" />
<text  x="47.11" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="162.6" y="1541" width="0.1" height="15.0" fill="rgb(216,153,31)" rx="2" ry="2" />
<text  x="165.56" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="997" width="0.2" height="15.0" fill="rgb(248,31,17)" rx="2" ry="2" />
<text  x="1190.64" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.77%)</title><rect x="55.8" y="1013" width="20.9" height="15.0" fill="rgb(244,228,30)" rx="2" ry="2" />
<text  x="58.81" y="1023.5" ></text>
</g>
<g >
<title>__asan_memset (18 samples, 0.09%)</title><rect x="653.2" y="1877" width="1.0" height="15.0" fill="rgb(211,202,8)" rx="2" ry="2" />
<text  x="656.17" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="204.4" y="1605" width="0.3" height="15.0" fill="rgb(244,203,28)" rx="2" ry="2" />
<text  x="207.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="187.9" y="1813" width="0.1" height="15.0" fill="rgb(223,211,20)" rx="2" ry="2" />
<text  x="190.86" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (80 samples, 0.40%)</title><rect x="160.8" y="1573" width="4.8" height="15.0" fill="rgb(244,57,0)" rx="2" ry="2" />
<text  x="163.85" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (443 samples, 2.22%)</title><rect x="132.8" y="1957" width="26.2" height="15.0" fill="rgb(247,110,25)" rx="2" ry="2" />
<text  x="135.83" y="1967.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1701" width="0.7" height="15.0" fill="rgb(214,181,54)" rx="2" ry="2" />
<text  x="1189.63" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="89.1" y="1877" width="0.1" height="15.0" fill="rgb(226,26,52)" rx="2" ry="2" />
<text  x="92.09" y="1887.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="137.8" y="1557" width="0.3" height="15.0" fill="rgb(241,175,12)" rx="2" ry="2" />
<text  x="140.79" y="1567.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.04%)</title><rect x="758.7" y="1957" width="0.4" height="15.0" fill="rgb(244,148,43)" rx="2" ry="2" />
<text  x="761.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (79 samples, 0.40%)</title><rect x="139.1" y="1637" width="4.7" height="15.0" fill="rgb(229,25,10)" rx="2" ry="2" />
<text  x="142.09" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (17 samples, 0.09%)</title><rect x="27.1" y="1957" width="1.0" height="15.0" fill="rgb(224,24,12)" rx="2" ry="2" />
<text  x="30.14" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="613" width="0.2" height="15.0" fill="rgb(249,48,14)" rx="2" ry="2" />
<text  x="1190.64" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="229" width="0.6" height="15.0" fill="rgb(212,14,12)" rx="2" ry="2" />
<text  x="1189.75" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="485" width="0.6" height="15.0" fill="rgb(209,68,43)" rx="2" ry="2" />
<text  x="1189.75" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1317" width="0.1" height="15.0" fill="rgb(207,37,36)" rx="2" ry="2" />
<text  x="219.35" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="293" width="0.4" height="15.0" fill="rgb(238,128,13)" rx="2" ry="2" />
<text  x="1190.81" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (7 samples, 0.04%)</title><rect x="1179.1" y="2037" width="0.4" height="15.0" fill="rgb(205,63,36)" rx="2" ry="2" />
<text  x="1182.06" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (6 samples, 0.03%)</title><rect x="596.5" y="1877" width="0.4" height="15.0" fill="rgb(222,56,25)" rx="2" ry="2" />
<text  x="599.54" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.79%)</title><rect x="55.8" y="1077" width="21.2" height="15.0" fill="rgb(219,164,2)" rx="2" ry="2" />
<text  x="58.81" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.42%)</title><rect x="152.8" y="1813" width="4.9" height="15.0" fill="rgb(215,4,24)" rx="2" ry="2" />
<text  x="155.81" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1381" width="0.2" height="15.0" fill="rgb(225,97,15)" rx="2" ry="2" />
<text  x="1190.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1429" width="0.1" height="15.0" fill="rgb(227,218,25)" rx="2" ry="2" />
<text  x="219.17" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (84 samples, 0.42%)</title><rect x="182.0" y="1685" width="5.0" height="15.0" fill="rgb(226,179,31)" rx="2" ry="2" />
<text  x="185.01" y="1695.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="1103.3" y="1877" width="0.3" height="15.0" fill="rgb(223,25,47)" rx="2" ry="2" />
<text  x="1106.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="176.3" y="1637" width="0.2" height="15.0" fill="rgb(247,22,50)" rx="2" ry="2" />
<text  x="179.33" y="1647.5" ></text>
</g>
<g >
<title>TDocument::operator= (2 samples, 0.01%)</title><rect x="519.3" y="1957" width="0.2" height="15.0" fill="rgb(232,49,20)" rx="2" ry="2" />
<text  x="522.35" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="341" width="20.1" height="15.0" fill="rgb(253,218,21)" rx="2" ry="2" />
<text  x="58.81" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.02%)</title><rect x="691.2" y="1765" width="0.2" height="15.0" fill="rgb(219,172,8)" rx="2" ry="2" />
<text  x="694.18" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="144.9" y="1621" width="0.1" height="15.0" fill="rgb(223,217,47)" rx="2" ry="2" />
<text  x="147.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (477 samples, 2.39%)</title><rect x="160.0" y="1893" width="28.2" height="15.0" fill="rgb(242,29,49)" rx="2" ry="2" />
<text  x="162.96" y="1903.5" >s..</text>
</g>
<g >
<title>[unknown] (503 samples, 2.52%)</title><rect x="55.8" y="1621" width="29.7" height="15.0" fill="rgb(214,104,32)" rx="2" ry="2" />
<text  x="58.75" y="1631.5" >[u..</text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,338 samples, 6.70%)</title><rect x="399.4" y="1957" width="79.0" height="15.0" fill="rgb(222,2,31)" rx="2" ry="2" />
<text  x="402.35" y="1967.5" >fasttext:..</text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.02%)</title><rect x="122.2" y="1893" width="0.2" height="15.0" fill="rgb(235,33,4)" rx="2" ry="2" />
<text  x="125.19" y="1903.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="762.8" y="1845" width="0.1" height="15.0" fill="rgb(205,113,35)" rx="2" ry="2" />
<text  x="765.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (68 samples, 0.34%)</title><rect x="190.9" y="1653" width="4.0" height="15.0" fill="rgb(240,99,29)" rx="2" ry="2" />
<text  x="193.87" y="1663.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="601.0" y="1877" width="0.1" height="15.0" fill="rgb(224,54,1)" rx="2" ry="2" />
<text  x="603.98" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (7 samples, 0.04%)</title><rect x="938.0" y="1909" width="0.4" height="15.0" fill="rgb(210,83,54)" rx="2" ry="2" />
<text  x="941.02" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="870.3" y="2021" width="0.1" height="15.0" fill="rgb(210,105,17)" rx="2" ry="2" />
<text  x="873.28" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (431 samples, 2.16%)</title><rect x="190.3" y="1893" width="25.5" height="15.0" fill="rgb(207,40,49)" rx="2" ry="2" />
<text  x="193.28" y="1903.5" >s..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (16 samples, 0.08%)</title><rect x="1020.5" y="2053" width="0.9" height="15.0" fill="rgb(238,105,14)" rx="2" ry="2" />
<text  x="1023.47" y="2063.5" ></text>
</g>
<g >
<title>syscall (11 samples, 0.06%)</title><rect x="132.0" y="1973" width="0.7" height="15.0" fill="rgb(221,202,15)" rx="2" ry="2" />
<text  x="135.00" y="1983.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="572.4" y="1909" width="0.1" height="15.0" fill="rgb(238,32,16)" rx="2" ry="2" />
<text  x="575.37" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="122.1" y="2021" width="0.3" height="15.0" fill="rgb(240,131,42)" rx="2" ry="2" />
<text  x="125.13" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="173.7" y="1589" width="0.2" height="15.0" fill="rgb(218,7,28)" rx="2" ry="2" />
<text  x="176.67" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (265 samples, 1.33%)</title><rect x="733.0" y="1893" width="15.7" height="15.0" fill="rgb(235,199,14)" rx="2" ry="2" />
<text  x="736.03" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="188.4" y="1813" width="0.3" height="15.0" fill="rgb(212,1,30)" rx="2" ry="2" />
<text  x="191.39" y="1823.5" ></text>
</g>
<g >
<title>Preprocess (3,022 samples, 15.14%)</title><rect x="573.1" y="1957" width="178.7" height="15.0" fill="rgb(244,151,44)" rx="2" ry="2" />
<text  x="576.13" y="1967.5" >Preprocess</text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.02%)</title><rect x="1112.0" y="1989" width="0.2" height="15.0" fill="rgb(210,219,4)" rx="2" ry="2" />
<text  x="1114.98" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.0" y="1413" width="0.1" height="15.0" fill="rgb(240,10,39)" rx="2" ry="2" />
<text  x="85.00" y="1423.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="81.6" y="1413" width="0.2" height="15.0" fill="rgb(238,225,22)" rx="2" ry="2" />
<text  x="84.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="789" width="0.6" height="15.0" fill="rgb(209,46,10)" rx="2" ry="2" />
<text  x="1189.75" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1173" width="0.2" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="191.51" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="693" width="0.1" height="15.0" fill="rgb(215,196,23)" rx="2" ry="2" />
<text  x="1190.52" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1989" width="0.1" height="15.0" fill="rgb(245,76,22)" rx="2" ry="2" />
<text  x="521.75" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1989" width="0.1" height="15.0" fill="rgb(212,162,27)" rx="2" ry="2" />
<text  x="58.57" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1173" width="0.1" height="15.0" fill="rgb(246,78,7)" rx="2" ry="2" />
<text  x="1190.52" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (437 samples, 2.19%)</title><rect x="132.9" y="1909" width="25.8" height="15.0" fill="rgb(229,7,20)" rx="2" ry="2" />
<text  x="135.89" y="1919.5" >s..</text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="1112.0" y="1877" width="0.2" height="15.0" fill="rgb(215,2,31)" rx="2" ry="2" />
<text  x="1115.03" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1669" width="0.2" height="15.0" fill="rgb(208,184,44)" rx="2" ry="2" />
<text  x="219.11" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.01%)</title><rect x="763.1" y="2037" width="0.1" height="15.0" fill="rgb(251,109,46)" rx="2" ry="2" />
<text  x="766.11" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="85.4" y="1589" width="0.1" height="15.0" fill="rgb(208,166,26)" rx="2" ry="2" />
<text  x="88.36" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="213" width="20.1" height="15.0" fill="rgb(245,31,33)" rx="2" ry="2" />
<text  x="58.81" y="223.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.72%)</title><rect x="55.8" y="501" width="20.3" height="15.0" fill="rgb(251,93,27)" rx="2" ry="2" />
<text  x="58.81" y="511.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="155.1" y="1669" width="0.2" height="15.0" fill="rgb(249,175,4)" rx="2" ry="2" />
<text  x="158.05" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1845" width="0.6" height="15.0" fill="rgb(223,98,29)" rx="2" ry="2" />
<text  x="1190.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.77%)</title><rect x="55.8" y="1029" width="20.9" height="15.0" fill="rgb(214,6,54)" rx="2" ry="2" />
<text  x="58.81" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (95 samples, 0.48%)</title><rect x="133.4" y="1685" width="5.6" height="15.0" fill="rgb(244,162,48)" rx="2" ry="2" />
<text  x="136.36" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1845" width="0.2" height="15.0" fill="rgb(227,149,47)" rx="2" ry="2" />
<text  x="1190.40" y="1855.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="1124.0" y="2037" width="0.2" height="15.0" fill="rgb(244,197,45)" rx="2" ry="2" />
<text  x="1127.03" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="181" width="0.4" height="15.0" fill="rgb(211,220,6)" rx="2" ry="2" />
<text  x="1190.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1125" width="0.1" height="15.0" fill="rgb(212,156,15)" rx="2" ry="2" />
<text  x="191.57" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1205" width="0.1" height="15.0" fill="rgb(233,74,37)" rx="2" ry="2" />
<text  x="219.17" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1269" width="0.4" height="15.0" fill="rgb(244,118,48)" rx="2" ry="2" />
<text  x="1190.81" y="1279.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (9 samples, 0.05%)</title><rect x="688.1" y="1845" width="0.5" height="15.0" fill="rgb(210,12,4)" rx="2" ry="2" />
<text  x="691.10" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (23 samples, 0.12%)</title><rect x="513.7" y="1973" width="1.3" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="516.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1957" width="0.1" height="15.0" fill="rgb(247,56,31)" rx="2" ry="2" />
<text  x="58.57" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="143.2" y="1589" width="0.1" height="15.0" fill="rgb(208,164,31)" rx="2" ry="2" />
<text  x="146.17" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="517.5" y="2005" width="0.1" height="15.0" fill="rgb(232,14,27)" rx="2" ry="2" />
<text  x="520.51" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (17 samples, 0.09%)</title><rect x="116.6" y="2037" width="1.0" height="15.0" fill="rgb(214,28,46)" rx="2" ry="2" />
<text  x="119.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="133.4" y="1653" width="5.6" height="15.0" fill="rgb(220,108,14)" rx="2" ry="2" />
<text  x="136.36" y="1663.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (9 samples, 0.05%)</title><rect x="583.6" y="1893" width="0.5" height="15.0" fill="rgb(246,122,37)" rx="2" ry="2" />
<text  x="586.60" y="1903.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (14 samples, 0.07%)</title><rect x="115.7" y="2037" width="0.9" height="15.0" fill="rgb(234,127,1)" rx="2" ry="2" />
<text  x="118.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="901" width="0.1" height="15.0" fill="rgb(248,12,12)" rx="2" ry="2" />
<text  x="1190.52" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.3" y="1413" width="0.2" height="15.0" fill="rgb(239,179,11)" rx="2" ry="2" />
<text  x="85.35" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1685" width="0.1" height="15.0" fill="rgb(230,87,31)" rx="2" ry="2" />
<text  x="1190.46" y="1695.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="174.7" y="1589" width="0.2" height="15.0" fill="rgb(215,229,37)" rx="2" ry="2" />
<text  x="177.74" y="1599.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="761.8" y="1861" width="0.2" height="15.0" fill="rgb(234,28,14)" rx="2" ry="2" />
<text  x="764.81" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="83.4" y="1477" width="0.1" height="15.0" fill="rgb(247,84,26)" rx="2" ry="2" />
<text  x="86.41" y="1487.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.03%)</title><rect x="54.6" y="1893" width="0.3" height="15.0" fill="rgb(252,71,24)" rx="2" ry="2" />
<text  x="57.57" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (71 samples, 0.36%)</title><rect x="721.6" y="1877" width="4.2" height="15.0" fill="rgb(219,98,24)" rx="2" ry="2" />
<text  x="724.62" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (28 samples, 0.14%)</title><rect x="815.7" y="2037" width="1.6" height="15.0" fill="rgb(243,176,25)" rx="2" ry="2" />
<text  x="818.66" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1157" width="0.1" height="15.0" fill="rgb(219,35,41)" rx="2" ry="2" />
<text  x="191.57" y="1167.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (4 samples, 0.02%)</title><rect x="212.6" y="1669" width="0.2" height="15.0" fill="rgb(218,92,10)" rx="2" ry="2" />
<text  x="215.57" y="1679.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="725.8" y="1861" width="0.3" height="15.0" fill="rgb(241,84,38)" rx="2" ry="2" />
<text  x="728.81" y="1871.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="1103.8" y="1925" width="0.3" height="15.0" fill="rgb(220,199,15)" rx="2" ry="2" />
<text  x="1106.82" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="229" width="0.2" height="15.0" fill="rgb(237,90,33)" rx="2" ry="2" />
<text  x="1190.64" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (64 samples, 0.32%)</title><rect x="144.0" y="1685" width="3.8" height="15.0" fill="rgb(246,116,32)" rx="2" ry="2" />
<text  x="147.00" y="1695.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1189.6" y="2021" width="0.2" height="15.0" fill="rgb(250,149,53)" rx="2" ry="2" />
<text  x="1192.59" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="693" width="0.6" height="15.0" fill="rgb(225,28,51)" rx="2" ry="2" />
<text  x="1189.75" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="181.5" y="1749" width="5.7" height="15.0" fill="rgb(227,190,18)" rx="2" ry="2" />
<text  x="184.54" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="629" width="20.4" height="15.0" fill="rgb(253,203,23)" rx="2" ry="2" />
<text  x="58.81" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1989" width="0.6" height="15.0" fill="rgb(248,227,15)" rx="2" ry="2" />
<text  x="1190.64" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (507 samples, 2.54%)</title><rect x="55.8" y="1637" width="29.9" height="15.0" fill="rgb(248,227,14)" rx="2" ry="2" />
<text  x="58.75" y="1647.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1253" width="0.1" height="15.0" fill="rgb(246,96,35)" rx="2" ry="2" />
<text  x="1190.52" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (417 samples, 2.09%)</title><rect x="55.8" y="1349" width="24.7" height="15.0" fill="rgb(237,84,52)" rx="2" ry="2" />
<text  x="58.81" y="1359.5" >[..</text>
</g>
<g >
<title>fasttext::Vector::addVector (3 samples, 0.02%)</title><rect x="513.4" y="1973" width="0.2" height="15.0" fill="rgb(226,181,9)" rx="2" ry="2" />
<text  x="516.38" y="1983.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="165.6" y="1573" width="0.1" height="15.0" fill="rgb(234,159,25)" rx="2" ry="2" />
<text  x="168.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1141" width="0.1" height="15.0" fill="rgb(234,28,34)" rx="2" ry="2" />
<text  x="1190.52" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="213" width="0.6" height="15.0" fill="rgb(210,216,13)" rx="2" ry="2" />
<text  x="1189.75" y="223.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="522.5" y="1829" width="0.2" height="15.0" fill="rgb(254,89,12)" rx="2" ry="2" />
<text  x="525.54" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (16 samples, 0.08%)</title><rect x="868.1" y="1957" width="0.9" height="15.0" fill="rgb(253,119,27)" rx="2" ry="2" />
<text  x="871.09" y="1967.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="82.0" y="1269" width="0.1" height="15.0" fill="rgb(241,42,3)" rx="2" ry="2" />
<text  x="85.00" y="1279.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.04%)</title><rect x="618.0" y="1845" width="0.5" height="15.0" fill="rgb(223,6,2)" rx="2" ry="2" />
<text  x="621.00" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (34 samples, 0.17%)</title><rect x="807.1" y="2005" width="2.1" height="15.0" fill="rgb(208,13,15)" rx="2" ry="2" />
<text  x="810.15" y="2015.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="150.3" y="1637" width="0.1" height="15.0" fill="rgb(239,122,47)" rx="2" ry="2" />
<text  x="153.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1701" width="0.2" height="15.0" fill="rgb(251,143,20)" rx="2" ry="2" />
<text  x="191.51" y="1711.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="490.8" y="1941" width="0.4" height="15.0" fill="rgb(242,93,13)" rx="2" ry="2" />
<text  x="493.80" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1205" width="0.1" height="15.0" fill="rgb(210,104,28)" rx="2" ry="2" />
<text  x="1190.52" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1187.8" y="1653" width="0.4" height="15.0" fill="rgb(209,32,30)" rx="2" ry="2" />
<text  x="1190.75" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="539.6" y="1909" width="0.1" height="15.0" fill="rgb(246,104,19)" rx="2" ry="2" />
<text  x="542.56" y="1919.5" ></text>
</g>
<g >
<title>sqrtf32 (4 samples, 0.02%)</title><rect x="333.2" y="1989" width="0.2" height="15.0" fill="rgb(229,196,47)" rx="2" ry="2" />
<text  x="336.21" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1013" width="0.6" height="15.0" fill="rgb(239,63,19)" rx="2" ry="2" />
<text  x="1189.75" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="629" width="0.1" height="15.0" fill="rgb(221,55,44)" rx="2" ry="2" />
<text  x="1190.52" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1349" width="0.1" height="15.0" fill="rgb(233,210,4)" rx="2" ry="2" />
<text  x="162.43" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="199.1" y="1589" width="0.3" height="15.0" fill="rgb(227,142,45)" rx="2" ry="2" />
<text  x="202.09" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="389" width="20.1" height="15.0" fill="rgb(210,61,32)" rx="2" ry="2" />
<text  x="58.81" y="399.5" ></text>
</g>
<g >
<title>[unknown] (597 samples, 2.99%)</title><rect x="55.7" y="1973" width="35.3" height="15.0" fill="rgb(221,163,28)" rx="2" ry="2" />
<text  x="58.69" y="1983.5" >[u..</text>
</g>
<g >
<title>RunFasttextClf (234 samples, 1.17%)</title><rect x="526.3" y="1957" width="13.8" height="15.0" fill="rgb(214,85,37)" rx="2" ry="2" />
<text  x="529.26" y="1967.5" ></text>
</g>
<g >
<title>__asan::asan_delete (7 samples, 0.04%)</title><rect x="1165.6" y="2037" width="0.4" height="15.0" fill="rgb(215,34,23)" rx="2" ry="2" />
<text  x="1168.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="160.0" y="1669" width="0.3" height="15.0" fill="rgb(249,210,47)" rx="2" ry="2" />
<text  x="163.02" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (2 samples, 0.01%)</title><rect x="158.7" y="1925" width="0.1" height="15.0" fill="rgb(248,214,7)" rx="2" ry="2" />
<text  x="161.72" y="1935.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3 samples, 0.02%)</title><rect x="806.7" y="2037" width="0.2" height="15.0" fill="rgb(208,84,28)" rx="2" ry="2" />
<text  x="809.73" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (103 samples, 0.52%)</title><rect x="132.9" y="1733" width="6.1" height="15.0" fill="rgb(241,122,14)" rx="2" ry="2" />
<text  x="135.95" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.25%)</title><rect x="212.0" y="1685" width="2.9" height="15.0" fill="rgb(216,137,21)" rx="2" ry="2" />
<text  x="215.04" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1573" width="0.1" height="15.0" fill="rgb(250,159,3)" rx="2" ry="2" />
<text  x="1190.46" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="763.1" y="2005" width="0.1" height="15.0" fill="rgb(219,166,49)" rx="2" ry="2" />
<text  x="766.11" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (95 samples, 0.48%)</title><rect x="935.9" y="1973" width="5.6" height="15.0" fill="rgb(226,128,4)" rx="2" ry="2" />
<text  x="938.89" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="309" width="0.1" height="15.0" fill="rgb(211,186,49)" rx="2" ry="2" />
<text  x="1190.52" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1285" width="0.1" height="15.0" fill="rgb(217,192,42)" rx="2" ry="2" />
<text  x="85.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="187.6" y="1781" width="0.3" height="15.0" fill="rgb(233,2,41)" rx="2" ry="2" />
<text  x="190.62" y="1791.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="496.1" y="1957" width="0.1" height="15.0" fill="rgb(227,213,25)" rx="2" ry="2" />
<text  x="499.12" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (5 samples, 0.03%)</title><rect x="184.0" y="1653" width="0.3" height="15.0" fill="rgb(245,17,27)" rx="2" ry="2" />
<text  x="187.02" y="1663.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1099.1" y="2021" width="0.2" height="15.0" fill="rgb(240,58,33)" rx="2" ry="2" />
<text  x="1102.09" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.77%)</title><rect x="55.8" y="981" width="20.9" height="15.0" fill="rgb(233,103,0)" rx="2" ry="2" />
<text  x="58.81" y="991.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (14 samples, 0.07%)</title><rect x="962.8" y="2053" width="0.9" height="15.0" fill="rgb(205,55,10)" rx="2" ry="2" />
<text  x="965.84" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1157" width="0.1" height="15.0" fill="rgb(210,20,14)" rx="2" ry="2" />
<text  x="1190.52" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="176.5" y="1669" width="0.1" height="15.0" fill="rgb(227,66,40)" rx="2" ry="2" />
<text  x="179.45" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.15%)</title><rect x="1101.2" y="2037" width="1.7" height="15.0" fill="rgb(227,180,25)" rx="2" ry="2" />
<text  x="1104.16" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (3 samples, 0.02%)</title><rect x="731.2" y="1893" width="0.2" height="15.0" fill="rgb(254,175,32)" rx="2" ry="2" />
<text  x="734.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1109" width="0.1" height="15.0" fill="rgb(207,202,32)" rx="2" ry="2" />
<text  x="1190.52" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1157" width="0.6" height="15.0" fill="rgb(211,124,46)" rx="2" ry="2" />
<text  x="1189.75" y="1167.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="483.6" y="1925" width="0.1" height="15.0" fill="rgb(237,209,46)" rx="2" ry="2" />
<text  x="486.58" y="1935.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (3 samples, 0.02%)</title><rect x="655.7" y="1877" width="0.2" height="15.0" fill="rgb(245,89,45)" rx="2" ry="2" />
<text  x="658.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1621" width="0.2" height="15.0" fill="rgb(227,176,18)" rx="2" ry="2" />
<text  x="162.19" y="1631.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (6 samples, 0.03%)</title><rect x="764.1" y="2037" width="0.3" height="15.0" fill="rgb(213,126,5)" rx="2" ry="2" />
<text  x="767.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="160.4" y="1637" width="0.1" height="15.0" fill="rgb(249,180,52)" rx="2" ry="2" />
<text  x="163.37" y="1647.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (8 samples, 0.04%)</title><rect x="537.6" y="1909" width="0.5" height="15.0" fill="rgb(244,193,31)" rx="2" ry="2" />
<text  x="540.61" y="1919.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.03%)</title><rect x="937.0" y="1893" width="0.3" height="15.0" fill="rgb(221,226,15)" rx="2" ry="2" />
<text  x="940.01" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;onmt::AnnotatedToken, std::allocator&lt;onmt::AnnotatedToken&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="749.8" y="1893" width="0.1" height="15.0" fill="rgb(226,21,32)" rx="2" ry="2" />
<text  x="752.75" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.3" y="1509" width="0.1" height="15.0" fill="rgb(210,32,2)" rx="2" ry="2" />
<text  x="86.30" y="1519.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (15 samples, 0.08%)</title><rect x="1019.6" y="2053" width="0.9" height="15.0" fill="rgb(226,31,44)" rx="2" ry="2" />
<text  x="1022.59" y="2063.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (3 samples, 0.02%)</title><rect x="594.7" y="1877" width="0.2" height="15.0" fill="rgb(254,8,30)" rx="2" ry="2" />
<text  x="597.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="725" width="0.2" height="15.0" fill="rgb(222,60,15)" rx="2" ry="2" />
<text  x="1190.64" y="735.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (117 samples, 0.59%)</title><rect x="124.2" y="1941" width="6.9" height="15.0" fill="rgb(235,95,20)" rx="2" ry="2" />
<text  x="127.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="325" width="20.1" height="15.0" fill="rgb(239,204,26)" rx="2" ry="2" />
<text  x="58.81" y="335.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="178.6" y="1621" width="0.1" height="15.0" fill="rgb(236,5,34)" rx="2" ry="2" />
<text  x="181.58" y="1631.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (56 samples, 0.28%)</title><rect x="963.7" y="2053" width="3.3" height="15.0" fill="rgb(208,56,43)" rx="2" ry="2" />
<text  x="966.67" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="341" width="0.6" height="15.0" fill="rgb(209,76,15)" rx="2" ry="2" />
<text  x="1189.75" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.8" y="1429" width="0.1" height="15.0" fill="rgb(216,57,6)" rx="2" ry="2" />
<text  x="85.76" y="1439.5" ></text>
</g>
<g >
<title>GetHost (455 samples, 2.28%)</title><rect x="132.8" y="1973" width="26.9" height="15.0" fill="rgb(214,97,40)" rx="2" ry="2" />
<text  x="135.77" y="1983.5" >G..</text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1124.3" y="2037" width="0.1" height="15.0" fill="rgb(240,30,18)" rx="2" ry="2" />
<text  x="1127.27" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (27 samples, 0.14%)</title><rect x="1119.2" y="2037" width="1.6" height="15.0" fill="rgb(216,90,28)" rx="2" ry="2" />
<text  x="1122.25" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (264 samples, 1.32%)</title><rect x="691.9" y="1877" width="15.6" height="15.0" fill="rgb(214,13,38)" rx="2" ry="2" />
<text  x="694.89" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="210.7" y="1733" width="0.2" height="15.0" fill="rgb(229,134,49)" rx="2" ry="2" />
<text  x="213.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="693" width="0.4" height="15.0" fill="rgb(219,215,11)" rx="2" ry="2" />
<text  x="1190.81" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="160.0" y="1653" width="0.3" height="15.0" fill="rgb(217,93,6)" rx="2" ry="2" />
<text  x="163.02" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="201.8" y="1621" width="2.9" height="15.0" fill="rgb(207,201,5)" rx="2" ry="2" />
<text  x="204.75" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="511.1" y="1941" width="0.1" height="15.0" fill="rgb(239,7,40)" rx="2" ry="2" />
<text  x="514.07" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1621" width="0.1" height="15.0" fill="rgb(243,226,44)" rx="2" ry="2" />
<text  x="1190.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="901" width="0.2" height="15.0" fill="rgb(252,6,33)" rx="2" ry="2" />
<text  x="1190.64" y="911.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (17 samples, 0.09%)</title><rect x="131.6" y="1989" width="1.1" height="15.0" fill="rgb(234,85,24)" rx="2" ry="2" />
<text  x="134.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1717" width="0.2" height="15.0" fill="rgb(240,61,32)" rx="2" ry="2" />
<text  x="191.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="2021" width="0.6" height="15.0" fill="rgb(253,129,44)" rx="2" ry="2" />
<text  x="1190.64" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (17 samples, 0.09%)</title><rect x="536.5" y="1909" width="1.1" height="15.0" fill="rgb(212,133,45)" rx="2" ry="2" />
<text  x="539.55" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="761.2" y="2005" width="0.2" height="15.0" fill="rgb(228,197,25)" rx="2" ry="2" />
<text  x="764.16" y="2015.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (4 samples, 0.02%)</title><rect x="1112.0" y="2053" width="0.2" height="15.0" fill="rgb(221,187,27)" rx="2" ry="2" />
<text  x="1114.98" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="150.8" y="1637" width="0.1" height="15.0" fill="rgb(240,90,8)" rx="2" ry="2" />
<text  x="153.80" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="691.5" y="1765" width="0.3" height="15.0" fill="rgb(233,3,28)" rx="2" ry="2" />
<text  x="694.47" y="1775.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="1103.9" y="1909" width="0.1" height="15.0" fill="rgb(226,72,50)" rx="2" ry="2" />
<text  x="1106.88" y="1919.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (42 samples, 0.21%)</title><rect x="992.6" y="2053" width="2.5" height="15.0" fill="rgb(211,189,44)" rx="2" ry="2" />
<text  x="995.57" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1845" width="0.4" height="15.0" fill="rgb(243,23,13)" rx="2" ry="2" />
<text  x="219.11" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1093" width="0.2" height="15.0" fill="rgb(211,71,14)" rx="2" ry="2" />
<text  x="1190.64" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1173" width="0.1" height="15.0" fill="rgb(233,164,34)" rx="2" ry="2" />
<text  x="219.17" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1109" width="0.2" height="15.0" fill="rgb(244,21,17)" rx="2" ry="2" />
<text  x="1190.64" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (55 samples, 0.28%)</title><rect x="1121.8" y="2053" width="3.3" height="15.0" fill="rgb(234,162,47)" rx="2" ry="2" />
<text  x="1124.85" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1493" width="0.1" height="15.0" fill="rgb(252,96,10)" rx="2" ry="2" />
<text  x="162.43" y="1503.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="1151.7" y="2037" width="0.1" height="15.0" fill="rgb(211,211,23)" rx="2" ry="2" />
<text  x="1154.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="809.6" y="2021" width="0.1" height="15.0" fill="rgb(240,213,8)" rx="2" ry="2" />
<text  x="812.63" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1125" width="0.1" height="15.0" fill="rgb(217,65,13)" rx="2" ry="2" />
<text  x="219.17" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10 samples, 0.05%)</title><rect x="809.8" y="2037" width="0.6" height="15.0" fill="rgb(241,19,4)" rx="2" ry="2" />
<text  x="812.81" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="85.4" y="1557" width="0.1" height="15.0" fill="rgb(208,30,51)" rx="2" ry="2" />
<text  x="88.36" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (7 samples, 0.04%)</title><rect x="599.9" y="1877" width="0.4" height="15.0" fill="rgb(250,197,50)" rx="2" ry="2" />
<text  x="602.85" y="1887.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="180.3" y="1621" width="0.3" height="15.0" fill="rgb(244,142,32)" rx="2" ry="2" />
<text  x="183.29" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.76%)</title><rect x="55.8" y="949" width="20.8" height="15.0" fill="rgb(244,81,28)" rx="2" ry="2" />
<text  x="58.81" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1477" width="0.2" height="15.0" fill="rgb(226,19,22)" rx="2" ry="2" />
<text  x="191.51" y="1487.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (143 samples, 0.72%)</title><rect x="969.9" y="2053" width="8.4" height="15.0" fill="rgb(221,63,20)" rx="2" ry="2" />
<text  x="972.88" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="183.4" y="1669" width="0.1" height="15.0" fill="rgb(244,66,37)" rx="2" ry="2" />
<text  x="186.37" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="133.4" y="1701" width="5.6" height="15.0" fill="rgb(244,182,15)" rx="2" ry="2" />
<text  x="136.36" y="1711.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (4 samples, 0.02%)</title><rect x="173.3" y="1589" width="0.2" height="15.0" fill="rgb(242,56,26)" rx="2" ry="2" />
<text  x="176.26" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1877" width="0.1" height="15.0" fill="rgb(231,15,18)" rx="2" ry="2" />
<text  x="521.75" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="757" width="20.5" height="15.0" fill="rgb(251,49,16)" rx="2" ry="2" />
<text  x="58.81" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1237" width="0.1" height="15.0" fill="rgb(240,31,36)" rx="2" ry="2" />
<text  x="1190.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (94 samples, 0.47%)</title><rect x="133.4" y="1637" width="5.6" height="15.0" fill="rgb(217,159,14)" rx="2" ry="2" />
<text  x="136.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1781" width="0.7" height="15.0" fill="rgb(249,136,2)" rx="2" ry="2" />
<text  x="1189.63" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (30 samples, 0.15%)</title><rect x="1099.3" y="2053" width="1.7" height="15.0" fill="rgb(209,43,35)" rx="2" ry="2" />
<text  x="1102.27" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="709" width="20.4" height="15.0" fill="rgb(222,123,43)" rx="2" ry="2" />
<text  x="58.81" y="719.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="318.9" y="1941" width="0.1" height="15.0" fill="rgb(246,78,45)" rx="2" ry="2" />
<text  x="321.91" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="194.7" y="1573" width="0.1" height="15.0" fill="rgb(229,193,26)" rx="2" ry="2" />
<text  x="197.66" y="1583.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="510.4" y="1845" width="0.1" height="15.0" fill="rgb(239,218,6)" rx="2" ry="2" />
<text  x="513.42" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (74 samples, 0.37%)</title><rect x="211.0" y="1749" width="4.4" height="15.0" fill="rgb(245,126,26)" rx="2" ry="2" />
<text  x="214.03" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.69%)</title><rect x="55.8" y="181" width="20.0" height="15.0" fill="rgb(227,48,6)" rx="2" ry="2" />
<text  x="58.81" y="191.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (3 samples, 0.02%)</title><rect x="798.7" y="2037" width="0.2" height="15.0" fill="rgb(208,143,16)" rx="2" ry="2" />
<text  x="801.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.78%)</title><rect x="55.8" y="1061" width="21.1" height="15.0" fill="rgb(210,61,9)" rx="2" ry="2" />
<text  x="58.81" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="69" width="0.1" height="15.0" fill="rgb(235,223,13)" rx="2" ry="2" />
<text  x="1190.52" y="79.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="500.7" y="1845" width="0.3" height="15.0" fill="rgb(220,185,42)" rx="2" ry="2" />
<text  x="503.73" y="1855.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="215.6" y="1797" width="0.2" height="15.0" fill="rgb(231,149,50)" rx="2" ry="2" />
<text  x="218.64" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (539 samples, 2.70%)</title><rect x="55.8" y="1765" width="31.8" height="15.0" fill="rgb(239,220,24)" rx="2" ry="2" />
<text  x="58.75" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="216.1" y="1925" width="0.4" height="15.0" fill="rgb(231,218,1)" rx="2" ry="2" />
<text  x="219.06" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1509" width="0.2" height="15.0" fill="rgb(221,198,33)" rx="2" ry="2" />
<text  x="191.51" y="1519.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (9 samples, 0.05%)</title><rect x="752.7" y="2037" width="0.5" height="15.0" fill="rgb(222,105,36)" rx="2" ry="2" />
<text  x="755.71" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (387 samples, 1.94%)</title><rect x="55.8" y="1253" width="22.9" height="15.0" fill="rgb(247,58,37)" rx="2" ry="2" />
<text  x="58.81" y="1263.5" >[..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (10 samples, 0.05%)</title><rect x="159.0" y="1957" width="0.6" height="15.0" fill="rgb(219,46,34)" rx="2" ry="2" />
<text  x="162.01" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="517.0" y="1909" width="0.1" height="15.0" fill="rgb(249,25,24)" rx="2" ry="2" />
<text  x="519.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21 samples, 0.11%)</title><rect x="1186.4" y="2053" width="1.2" height="15.0" fill="rgb(211,159,53)" rx="2" ry="2" />
<text  x="1189.39" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (42 samples, 0.21%)</title><rect x="1116.8" y="2037" width="2.4" height="15.0" fill="rgb(240,197,45)" rx="2" ry="2" />
<text  x="1119.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (428 samples, 2.14%)</title><rect x="190.3" y="1845" width="25.3" height="15.0" fill="rgb(240,209,35)" rx="2" ry="2" />
<text  x="193.28" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1186.7" y="1589" width="0.6" height="15.0" fill="rgb(207,88,5)" rx="2" ry="2" />
<text  x="1189.69" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (520 samples, 2.60%)</title><rect x="55.8" y="1669" width="30.7" height="15.0" fill="rgb(234,134,18)" rx="2" ry="2" />
<text  x="58.75" y="1679.5" >[u..</text>
</g>
<g >
<title>fasttext::Matrix::size (41 samples, 0.21%)</title><rect x="491.3" y="1957" width="2.4" height="15.0" fill="rgb(222,154,24)" rx="2" ry="2" />
<text  x="494.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (94 samples, 0.47%)</title><rect x="181.6" y="1701" width="5.6" height="15.0" fill="rgb(226,132,19)" rx="2" ry="2" />
<text  x="184.59" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1685" width="0.7" height="15.0" fill="rgb(219,120,17)" rx="2" ry="2" />
<text  x="1189.63" y="1695.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="518.8" y="1797" width="0.1" height="15.0" fill="rgb(221,67,4)" rx="2" ry="2" />
<text  x="521.81" y="1807.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="725.9" y="1797" width="0.2" height="15.0" fill="rgb(244,57,30)" rx="2" ry="2" />
<text  x="728.87" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1525" width="0.1" height="15.0" fill="rgb(227,229,39)" rx="2" ry="2" />
<text  x="1190.46" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="580.5" y="1893" width="0.1" height="15.0" fill="rgb(205,104,43)" rx="2" ry="2" />
<text  x="583.52" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="142.8" y="1589" width="0.4" height="15.0" fill="rgb(237,155,49)" rx="2" ry="2" />
<text  x="145.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1685" width="0.2" height="15.0" fill="rgb(210,104,41)" rx="2" ry="2" />
<text  x="191.51" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="174.2" y="1589" width="0.3" height="15.0" fill="rgb(254,111,36)" rx="2" ry="2" />
<text  x="177.21" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (87 samples, 0.44%)</title><rect x="754.0" y="2037" width="5.1" height="15.0" fill="rgb(207,211,46)" rx="2" ry="2" />
<text  x="756.95" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="91.7" y="2005" width="0.1" height="15.0" fill="rgb(225,144,14)" rx="2" ry="2" />
<text  x="94.69" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (11 samples, 0.06%)</title><rect x="1160.3" y="2037" width="0.6" height="15.0" fill="rgb(231,44,26)" rx="2" ry="2" />
<text  x="1163.27" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="88.1" y="1797" width="0.1" height="15.0" fill="rgb(246,28,8)" rx="2" ry="2" />
<text  x="91.08" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1605" width="0.2" height="15.0" fill="rgb(221,92,37)" rx="2" ry="2" />
<text  x="191.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1525" width="0.2" height="15.0" fill="rgb(219,155,22)" rx="2" ry="2" />
<text  x="162.19" y="1535.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="213.1" y="1669" width="0.2" height="15.0" fill="rgb(216,109,38)" rx="2" ry="2" />
<text  x="216.10" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="312.5" y="1941" width="0.1" height="15.0" fill="rgb(217,126,13)" rx="2" ry="2" />
<text  x="315.52" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1017.0" y="1989" width="0.1" height="15.0" fill="rgb(252,149,51)" rx="2" ry="2" />
<text  x="1019.99" y="1999.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (2 samples, 0.01%)</title><rect x="222.6" y="1957" width="0.1" height="15.0" fill="rgb(232,69,36)" rx="2" ry="2" />
<text  x="225.56" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (167 samples, 0.84%)</title><rect x="623.8" y="1877" width="9.9" height="15.0" fill="rgb(213,10,48)" rx="2" ry="2" />
<text  x="626.79" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1941" width="0.6" height="15.0" fill="rgb(248,1,46)" rx="2" ry="2" />
<text  x="1190.64" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.13%)</title><rect x="810.5" y="2021" width="1.5" height="15.0" fill="rgb(236,154,15)" rx="2" ry="2" />
<text  x="813.46" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="179.0" y="1621" width="0.1" height="15.0" fill="rgb(213,166,32)" rx="2" ry="2" />
<text  x="181.99" y="1631.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.02%)</title><rect x="522.9" y="1957" width="0.2" height="15.0" fill="rgb(231,175,21)" rx="2" ry="2" />
<text  x="525.89" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (41 samples, 0.21%)</title><rect x="958.5" y="2053" width="2.4" height="15.0" fill="rgb(206,79,41)" rx="2" ry="2" />
<text  x="961.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1973" width="0.7" height="15.0" fill="rgb(209,173,22)" rx="2" ry="2" />
<text  x="1189.63" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (440 samples, 2.20%)</title><rect x="55.8" y="1429" width="26.0" height="15.0" fill="rgb(240,9,25)" rx="2" ry="2" />
<text  x="58.81" y="1439.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1477" width="0.2" height="15.0" fill="rgb(211,91,6)" rx="2" ry="2" />
<text  x="219.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="501" width="0.2" height="15.0" fill="rgb(229,182,4)" rx="2" ry="2" />
<text  x="1190.64" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1381" width="0.6" height="15.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="1189.75" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="762.8" y="1829" width="0.1" height="15.0" fill="rgb(233,119,36)" rx="2" ry="2" />
<text  x="765.76" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (8 samples, 0.04%)</title><rect x="188.3" y="1941" width="0.4" height="15.0" fill="rgb(238,170,36)" rx="2" ry="2" />
<text  x="191.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1669" width="0.2" height="15.0" fill="rgb(220,221,19)" rx="2" ry="2" />
<text  x="162.19" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="581" width="20.4" height="15.0" fill="rgb(210,20,42)" rx="2" ry="2" />
<text  x="58.81" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (59 samples, 0.30%)</title><rect x="135.0" y="1573" width="3.5" height="15.0" fill="rgb(208,129,16)" rx="2" ry="2" />
<text  x="138.02" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1893" width="0.1" height="15.0" fill="rgb(238,22,26)" rx="2" ry="2" />
<text  x="58.57" y="1903.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.01%)</title><rect x="122.3" y="1877" width="0.1" height="15.0" fill="rgb(229,1,10)" rx="2" ry="2" />
<text  x="125.31" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="488.7" y="1925" width="0.1" height="15.0" fill="rgb(240,40,36)" rx="2" ry="2" />
<text  x="491.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="997" width="0.6" height="15.0" fill="rgb(242,26,28)" rx="2" ry="2" />
<text  x="1189.75" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="357" width="0.2" height="15.0" fill="rgb(238,53,28)" rx="2" ry="2" />
<text  x="1190.64" y="367.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="689.8" y="1845" width="0.1" height="15.0" fill="rgb(235,86,18)" rx="2" ry="2" />
<text  x="692.82" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="197" width="0.4" height="15.0" fill="rgb(246,5,45)" rx="2" ry="2" />
<text  x="1190.81" y="207.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.9" y="1269" width="0.1" height="15.0" fill="rgb(236,176,10)" rx="2" ry="2" />
<text  x="81.86" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (436 samples, 2.18%)</title><rect x="190.3" y="1925" width="25.8" height="15.0" fill="rgb(229,202,7)" rx="2" ry="2" />
<text  x="193.28" y="1935.5" >s..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="54.9" y="1909" width="0.1" height="15.0" fill="rgb(214,126,6)" rx="2" ry="2" />
<text  x="57.86" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="154.6" y="1669" width="0.2" height="15.0" fill="rgb(252,96,9)" rx="2" ry="2" />
<text  x="157.58" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (80 samples, 0.40%)</title><rect x="147.8" y="1717" width="4.8" height="15.0" fill="rgb(252,142,17)" rx="2" ry="2" />
<text  x="150.84" y="1727.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.02%)</title><rect x="762.7" y="1925" width="0.2" height="15.0" fill="rgb(240,175,21)" rx="2" ry="2" />
<text  x="765.70" y="1935.5" ></text>
</g>
<g >
<title>__libc_start_main (6,718 samples, 33.65%)</title><rect x="122.4" y="2037" width="397.1" height="15.0" fill="rgb(225,181,41)" rx="2" ry="2" />
<text  x="125.43" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>[unknown] (429 samples, 2.15%)</title><rect x="55.8" y="1397" width="25.4" height="15.0" fill="rgb(222,52,43)" rx="2" ry="2" />
<text  x="58.81" y="1407.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="483.9" y="1925" width="0.7" height="15.0" fill="rgb(214,155,47)" rx="2" ry="2" />
<text  x="486.88" y="1935.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="758.6" y="2021" width="0.5" height="15.0" fill="rgb(221,134,46)" rx="2" ry="2" />
<text  x="761.62" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="1121.7" y="2053" width="0.1" height="15.0" fill="rgb(219,85,40)" rx="2" ry="2" />
<text  x="1124.73" y="2063.5" ></text>
</g>
<g >
<title>get_user_pages_fast (2 samples, 0.01%)</title><rect x="30.1" y="1893" width="0.1" height="15.0" fill="rgb(236,228,31)" rx="2" ry="2" />
<text  x="33.10" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="516.3" y="1973" width="0.2" height="15.0" fill="rgb(221,16,14)" rx="2" ry="2" />
<text  x="519.33" y="1983.5" ></text>
</g>
<g >
<title>alloc_pages_vma (16 samples, 0.08%)</title><rect x="509.6" y="1877" width="0.9" height="15.0" fill="rgb(230,44,17)" rx="2" ry="2" />
<text  x="512.59" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1573" width="0.2" height="15.0" fill="rgb(210,149,33)" rx="2" ry="2" />
<text  x="191.51" y="1583.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.4" y="1829" width="0.2" height="15.0" fill="rgb(240,211,28)" rx="2" ry="2" />
<text  x="91.44" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="159.4" y="1733" width="0.1" height="15.0" fill="rgb(228,18,29)" rx="2" ry="2" />
<text  x="162.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1381" width="0.2" height="15.0" fill="rgb(235,154,30)" rx="2" ry="2" />
<text  x="191.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="53" width="0.6" height="15.0" fill="rgb(235,12,3)" rx="2" ry="2" />
<text  x="1189.75" y="63.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.81%)</title><rect x="55.8" y="1125" width="21.3" height="15.0" fill="rgb(239,126,2)" rx="2" ry="2" />
<text  x="58.81" y="1135.5" >[..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (3 samples, 0.02%)</title><rect x="123.5" y="1973" width="0.2" height="15.0" fill="rgb(226,188,9)" rx="2" ry="2" />
<text  x="126.49" y="1983.5" ></text>
</g>
<g >
<title>do_page_fault (32 samples, 0.16%)</title><rect x="689.9" y="1829" width="1.9" height="15.0" fill="rgb(228,167,29)" rx="2" ry="2" />
<text  x="692.93" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (149 samples, 0.75%)</title><rect x="1112.2" y="2053" width="8.8" height="15.0" fill="rgb(220,41,28)" rx="2" ry="2" />
<text  x="1115.21" y="2063.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="522.7" y="1893" width="0.2" height="15.0" fill="rgb(248,107,24)" rx="2" ry="2" />
<text  x="525.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1653" width="0.7" height="15.0" fill="rgb(236,113,52)" rx="2" ry="2" />
<text  x="1189.63" y="1663.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="198.1" y="1589" width="0.3" height="15.0" fill="rgb(211,87,50)" rx="2" ry="2" />
<text  x="201.15" y="1599.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.02%)</title><rect x="1101.9" y="1813" width="0.2" height="15.0" fill="rgb(235,53,34)" rx="2" ry="2" />
<text  x="1104.93" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="533" width="0.2" height="15.0" fill="rgb(223,227,43)" rx="2" ry="2" />
<text  x="1190.64" y="543.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (3 samples, 0.02%)</title><rect x="1101.9" y="1829" width="0.2" height="15.0" fill="rgb(209,189,34)" rx="2" ry="2" />
<text  x="1104.93" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="203.1" y="1605" width="0.3" height="15.0" fill="rgb(232,8,16)" rx="2" ry="2" />
<text  x="206.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="37" width="0.6" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="1189.75" y="47.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.06%)</title><rect x="815.7" y="1989" width="0.7" height="15.0" fill="rgb(219,176,53)" rx="2" ry="2" />
<text  x="818.66" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="678.6" y="1749" width="0.3" height="15.0" fill="rgb(247,21,27)" rx="2" ry="2" />
<text  x="681.59" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="421" width="0.2" height="15.0" fill="rgb(240,174,26)" rx="2" ry="2" />
<text  x="1190.64" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1109" width="0.6" height="15.0" fill="rgb(254,134,8)" rx="2" ry="2" />
<text  x="1189.75" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="741" width="20.5" height="15.0" fill="rgb(218,16,0)" rx="2" ry="2" />
<text  x="58.81" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="81.8" y="1381" width="0.1" height="15.0" fill="rgb(205,185,5)" rx="2" ry="2" />
<text  x="84.82" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="933" width="0.4" height="15.0" fill="rgb(229,105,51)" rx="2" ry="2" />
<text  x="1190.81" y="943.5" ></text>
</g>
<g >
<title>[unknown] (585 samples, 2.93%)</title><rect x="55.7" y="1925" width="34.6" height="15.0" fill="rgb(235,61,49)" rx="2" ry="2" />
<text  x="58.69" y="1935.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1477" width="0.1" height="15.0" fill="rgb(223,19,1)" rx="2" ry="2" />
<text  x="219.35" y="1487.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.02%)</title><rect x="122.2" y="1941" width="0.2" height="15.0" fill="rgb(208,71,11)" rx="2" ry="2" />
<text  x="125.19" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (6 samples, 0.03%)</title><rect x="751.4" y="1941" width="0.4" height="15.0" fill="rgb(242,151,51)" rx="2" ry="2" />
<text  x="754.41" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="309" width="0.6" height="15.0" fill="rgb(251,106,45)" rx="2" ry="2" />
<text  x="1189.75" y="319.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="185.9" y="1653" width="0.1" height="15.0" fill="rgb(210,39,17)" rx="2" ry="2" />
<text  x="188.85" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="133.0" y="1669" width="0.4" height="15.0" fill="rgb(244,179,40)" rx="2" ry="2" />
<text  x="136.01" y="1679.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (218 samples, 1.09%)</title><rect x="694.6" y="1861" width="12.9" height="15.0" fill="rgb(209,14,30)" rx="2" ry="2" />
<text  x="697.60" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="821" width="0.6" height="15.0" fill="rgb(232,45,9)" rx="2" ry="2" />
<text  x="1189.75" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (7 samples, 0.04%)</title><rect x="190.5" y="1653" width="0.4" height="15.0" fill="rgb(218,32,11)" rx="2" ry="2" />
<text  x="193.46" y="1663.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="173.1" y="1589" width="0.2" height="15.0" fill="rgb(218,77,40)" rx="2" ry="2" />
<text  x="176.14" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (19 samples, 0.10%)</title><rect x="1017.9" y="2053" width="1.2" height="15.0" fill="rgb(245,196,3)" rx="2" ry="2" />
<text  x="1020.93" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1461" width="0.6" height="15.0" fill="rgb(233,27,22)" rx="2" ry="2" />
<text  x="1189.75" y="1471.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="173.9" y="1589" width="0.2" height="15.0" fill="rgb(205,131,21)" rx="2" ry="2" />
<text  x="176.91" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1173" width="0.6" height="15.0" fill="rgb(243,96,6)" rx="2" ry="2" />
<text  x="1189.75" y="1183.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.02%)</title><rect x="938.7" y="1925" width="0.2" height="15.0" fill="rgb(228,199,35)" rx="2" ry="2" />
<text  x="941.67" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (31 samples, 0.16%)</title><rect x="867.7" y="2005" width="1.8" height="15.0" fill="rgb(248,147,21)" rx="2" ry="2" />
<text  x="870.68" y="2015.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="85.4" y="1525" width="0.1" height="15.0" fill="rgb(243,79,10)" rx="2" ry="2" />
<text  x="88.36" y="1535.5" ></text>
</g>
<g >
<title>sqrtf32 (3 samples, 0.02%)</title><rect x="515.0" y="1973" width="0.2" height="15.0" fill="rgb(225,34,28)" rx="2" ry="2" />
<text  x="518.03" y="1983.5" ></text>
</g>
<g >
<title>mmap_region (17 samples, 0.09%)</title><rect x="761.7" y="1925" width="1.0" height="15.0" fill="rgb(252,117,26)" rx="2" ry="2" />
<text  x="764.69" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (33 samples, 0.17%)</title><rect x="488.8" y="1925" width="2.0" height="15.0" fill="rgb(223,196,53)" rx="2" ry="2" />
<text  x="491.84" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (5 samples, 0.03%)</title><rect x="1104.2" y="2053" width="0.3" height="15.0" fill="rgb(254,45,27)" rx="2" ry="2" />
<text  x="1107.17" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="181.2" y="1717" width="0.1" height="15.0" fill="rgb(217,162,23)" rx="2" ry="2" />
<text  x="184.18" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1637" width="0.1" height="15.0" fill="rgb(250,79,28)" rx="2" ry="2" />
<text  x="1190.46" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (64 samples, 0.32%)</title><rect x="144.0" y="1669" width="3.8" height="15.0" fill="rgb(252,18,17)" rx="2" ry="2" />
<text  x="147.00" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (4 samples, 0.02%)</title><rect x="539.9" y="1925" width="0.2" height="15.0" fill="rgb(220,167,24)" rx="2" ry="2" />
<text  x="542.86" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1461" width="0.2" height="15.0" fill="rgb(247,170,44)" rx="2" ry="2" />
<text  x="191.51" y="1471.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (4 samples, 0.02%)</title><rect x="596.2" y="1877" width="0.3" height="15.0" fill="rgb(205,95,42)" rx="2" ry="2" />
<text  x="599.25" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="55.5" y="1925" width="0.1" height="15.0" fill="rgb(254,1,51)" rx="2" ry="2" />
<text  x="58.46" y="1935.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.02%)</title><rect x="333.5" y="1989" width="0.2" height="15.0" fill="rgb(225,46,47)" rx="2" ry="2" />
<text  x="336.51" y="1999.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (283 samples, 1.42%)</title><rect x="941.7" y="2053" width="16.8" height="15.0" fill="rgb(241,154,36)" rx="2" ry="2" />
<text  x="944.74" y="2063.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="85.5" y="1557" width="0.2" height="15.0" fill="rgb(242,54,43)" rx="2" ry="2" />
<text  x="88.54" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="78.5" y="1237" width="0.1" height="15.0" fill="rgb(225,9,41)" rx="2" ry="2" />
<text  x="81.51" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.38%)</title><rect x="176.7" y="1669" width="4.5" height="15.0" fill="rgb(224,218,45)" rx="2" ry="2" />
<text  x="179.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (66 samples, 0.33%)</title><rect x="143.9" y="1733" width="3.9" height="15.0" fill="rgb(205,0,29)" rx="2" ry="2" />
<text  x="146.94" y="1743.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="203.8" y="1605" width="0.1" height="15.0" fill="rgb(253,160,9)" rx="2" ry="2" />
<text  x="206.82" y="1615.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="204.7" y="1621" width="0.2" height="15.0" fill="rgb(254,46,10)" rx="2" ry="2" />
<text  x="207.71" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.05%)</title><rect x="30.0" y="1957" width="0.6" height="15.0" fill="rgb(215,185,11)" rx="2" ry="2" />
<text  x="33.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.39%)</title><rect x="176.6" y="1685" width="4.6" height="15.0" fill="rgb(252,135,47)" rx="2" ry="2" />
<text  x="179.63" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="210.7" y="1781" width="0.2" height="15.0" fill="rgb(244,151,38)" rx="2" ry="2" />
<text  x="213.68" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.8" y="1365" width="0.1" height="15.0" fill="rgb(235,105,13)" rx="2" ry="2" />
<text  x="83.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="181.3" y="1749" width="0.1" height="15.0" fill="rgb(217,48,44)" rx="2" ry="2" />
<text  x="184.30" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (66 samples, 0.33%)</title><rect x="143.9" y="1765" width="3.9" height="15.0" fill="rgb(239,71,32)" rx="2" ry="2" />
<text  x="146.94" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="581" width="0.6" height="15.0" fill="rgb(211,34,15)" rx="2" ry="2" />
<text  x="1189.75" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1829" width="0.2" height="15.0" fill="rgb(211,166,38)" rx="2" ry="2" />
<text  x="1190.40" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.69%)</title><rect x="55.8" y="133" width="20.0" height="15.0" fill="rgb(219,20,14)" rx="2" ry="2" />
<text  x="58.81" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (42 samples, 0.21%)</title><rect x="145.1" y="1621" width="2.4" height="15.0" fill="rgb(248,142,7)" rx="2" ry="2" />
<text  x="148.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1477" width="0.4" height="15.0" fill="rgb(231,97,47)" rx="2" ry="2" />
<text  x="1190.81" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="149" width="0.4" height="15.0" fill="rgb(212,209,36)" rx="2" ry="2" />
<text  x="1190.81" y="159.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="163.0" y="1541" width="0.1" height="15.0" fill="rgb(237,52,5)" rx="2" ry="2" />
<text  x="165.98" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="753.5" y="2037" width="0.2" height="15.0" fill="rgb(229,203,53)" rx="2" ry="2" />
<text  x="756.54" y="2047.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (8 samples, 0.04%)</title><rect x="520.9" y="2037" width="0.5" height="15.0" fill="rgb(239,168,25)" rx="2" ry="2" />
<text  x="523.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (545 samples, 2.73%)</title><rect x="55.8" y="1797" width="32.2" height="15.0" fill="rgb(210,78,37)" rx="2" ry="2" />
<text  x="58.75" y="1807.5" >[u..</text>
</g>
<g >
<title>onmt::AnnotatedToken::set (2 samples, 0.01%)</title><rect x="575.6" y="1909" width="0.1" height="15.0" fill="rgb(225,39,40)" rx="2" ry="2" />
<text  x="578.62" y="1919.5" ></text>
</g>
<g >
<title>alloc_pages_vma (11 samples, 0.06%)</title><rect x="690.5" y="1765" width="0.7" height="15.0" fill="rgb(225,216,35)" rx="2" ry="2" />
<text  x="693.53" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.41%)</title><rect x="139.0" y="1717" width="4.8" height="15.0" fill="rgb(245,202,4)" rx="2" ry="2" />
<text  x="142.04" y="1727.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="179.9" y="1621" width="0.1" height="15.0" fill="rgb(221,88,30)" rx="2" ry="2" />
<text  x="182.88" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="193.2" y="1557" width="0.2" height="15.0" fill="rgb(218,163,21)" rx="2" ry="2" />
<text  x="196.24" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="87.7" y="1781" width="0.1" height="15.0" fill="rgb(241,42,10)" rx="2" ry="2" />
<text  x="90.73" y="1791.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (8 samples, 0.04%)</title><rect x="1001.2" y="2053" width="0.5" height="15.0" fill="rgb(239,88,30)" rx="2" ry="2" />
<text  x="1004.20" y="2063.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="620.2" y="1845" width="0.2" height="15.0" fill="rgb(234,64,3)" rx="2" ry="2" />
<text  x="623.19" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (478 samples, 2.39%)</title><rect x="55.8" y="1557" width="28.2" height="15.0" fill="rgb(229,29,46)" rx="2" ry="2" />
<text  x="58.75" y="1567.5" >[..</text>
</g>
<g >
<title>__asan::asan_memalign (27 samples, 0.14%)</title><rect x="990.3" y="2053" width="1.6" height="15.0" fill="rgb(227,138,1)" rx="2" ry="2" />
<text  x="993.27" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1112.0" y="2021" width="0.2" height="15.0" fill="rgb(231,125,12)" rx="2" ry="2" />
<text  x="1114.98" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="965" width="0.4" height="15.0" fill="rgb(239,192,5)" rx="2" ry="2" />
<text  x="1190.81" y="975.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (2 samples, 0.01%)</title><rect x="577.1" y="1893" width="0.1" height="15.0" fill="rgb(215,171,15)" rx="2" ry="2" />
<text  x="580.10" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="511.1" y="1925" width="0.1" height="15.0" fill="rgb(211,13,28)" rx="2" ry="2" />
<text  x="514.07" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.69%)</title><rect x="55.8" y="101" width="19.9" height="15.0" fill="rgb(233,226,4)" rx="2" ry="2" />
<text  x="58.81" y="111.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="1103.8" y="1941" width="0.3" height="15.0" fill="rgb(232,97,32)" rx="2" ry="2" />
<text  x="1106.82" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1141" width="0.1" height="15.0" fill="rgb(211,71,50)" rx="2" ry="2" />
<text  x="191.57" y="1151.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (6 samples, 0.03%)</title><rect x="595.4" y="1877" width="0.4" height="15.0" fill="rgb(238,137,33)" rx="2" ry="2" />
<text  x="598.42" y="1887.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1909" width="0.1" height="15.0" fill="rgb(235,91,16)" rx="2" ry="2" />
<text  x="521.75" y="1919.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1016.9" y="2005" width="0.2" height="15.0" fill="rgb(208,44,4)" rx="2" ry="2" />
<text  x="1019.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="187.3" y="1813" width="0.1" height="15.0" fill="rgb(215,113,19)" rx="2" ry="2" />
<text  x="190.27" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.24%)</title><rect x="167.3" y="1589" width="2.9" height="15.0" fill="rgb(241,200,33)" rx="2" ry="2" />
<text  x="170.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1077" width="0.1" height="15.0" fill="rgb(210,4,4)" rx="2" ry="2" />
<text  x="1190.52" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1589" width="0.1" height="15.0" fill="rgb(247,51,25)" rx="2" ry="2" />
<text  x="219.35" y="1599.5" ></text>
</g>
<g >
<title>__asan_memcpy (19 samples, 0.10%)</title><rect x="688.6" y="1845" width="1.2" height="15.0" fill="rgb(245,142,34)" rx="2" ry="2" />
<text  x="691.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (186 samples, 0.93%)</title><rect x="132.9" y="1765" width="11.0" height="15.0" fill="rgb(253,108,5)" rx="2" ry="2" />
<text  x="135.95" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1173" width="0.4" height="15.0" fill="rgb(217,202,14)" rx="2" ry="2" />
<text  x="1190.81" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1445" width="0.1" height="15.0" fill="rgb(209,4,13)" rx="2" ry="2" />
<text  x="219.35" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.04%)</title><rect x="45.3" y="2021" width="0.5" height="15.0" fill="rgb(213,35,4)" rx="2" ry="2" />
<text  x="48.35" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="357" width="0.6" height="15.0" fill="rgb(234,200,28)" rx="2" ry="2" />
<text  x="1189.75" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="709" width="0.6" height="15.0" fill="rgb(239,96,8)" rx="2" ry="2" />
<text  x="1189.75" y="719.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1016.9" y="2021" width="0.2" height="15.0" fill="rgb(221,218,16)" rx="2" ry="2" />
<text  x="1019.87" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="173.6" y="1589" width="0.1" height="15.0" fill="rgb(224,4,42)" rx="2" ry="2" />
<text  x="176.56" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (12 samples, 0.06%)</title><rect x="187.4" y="1845" width="0.8" height="15.0" fill="rgb(213,84,53)" rx="2" ry="2" />
<text  x="190.45" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1397" width="0.2" height="15.0" fill="rgb(235,103,40)" rx="2" ry="2" />
<text  x="191.51" y="1407.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="143.6" y="1621" width="0.2" height="15.0" fill="rgb(238,63,9)" rx="2" ry="2" />
<text  x="146.59" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (74 samples, 0.37%)</title><rect x="34.4" y="2021" width="4.4" height="15.0" fill="rgb(209,0,29)" rx="2" ry="2" />
<text  x="37.41" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (68 samples, 0.34%)</title><rect x="190.9" y="1621" width="4.0" height="15.0" fill="rgb(205,201,16)" rx="2" ry="2" />
<text  x="193.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="917" width="0.2" height="15.0" fill="rgb(250,205,5)" rx="2" ry="2" />
<text  x="1190.64" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1125" width="0.4" height="15.0" fill="rgb(249,92,37)" rx="2" ry="2" />
<text  x="1190.81" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.42%)</title><rect x="152.8" y="1797" width="4.9" height="15.0" fill="rgb(247,51,9)" rx="2" ry="2" />
<text  x="155.81" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.3" y="1445" width="0.2" height="15.0" fill="rgb(215,173,17)" rx="2" ry="2" />
<text  x="85.35" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1333" width="0.1" height="15.0" fill="rgb(237,204,54)" rx="2" ry="2" />
<text  x="219.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (69 samples, 0.35%)</title><rect x="190.9" y="1701" width="4.1" height="15.0" fill="rgb(223,76,3)" rx="2" ry="2" />
<text  x="193.87" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="517.5" y="1973" width="0.1" height="15.0" fill="rgb(214,101,3)" rx="2" ry="2" />
<text  x="520.51" y="1983.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (12 samples, 0.06%)</title><rect x="936.9" y="1909" width="0.7" height="15.0" fill="rgb(241,221,39)" rx="2" ry="2" />
<text  x="939.89" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (615 samples, 3.08%)</title><rect x="55.7" y="2021" width="36.3" height="15.0" fill="rgb(216,43,9)" rx="2" ry="2" />
<text  x="58.69" y="2031.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1461" width="0.4" height="15.0" fill="rgb(220,71,11)" rx="2" ry="2" />
<text  x="1190.81" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="901" width="0.6" height="15.0" fill="rgb(213,12,22)" rx="2" ry="2" />
<text  x="1189.75" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1525" width="0.2" height="15.0" fill="rgb(241,5,47)" rx="2" ry="2" />
<text  x="219.11" y="1535.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (4 samples, 0.02%)</title><rect x="192.7" y="1557" width="0.2" height="15.0" fill="rgb(212,106,1)" rx="2" ry="2" />
<text  x="195.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1685" width="0.1" height="15.0" fill="rgb(210,70,27)" rx="2" ry="2" />
<text  x="162.43" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.6" y="1461" width="0.2" height="15.0" fill="rgb(223,107,47)" rx="2" ry="2" />
<text  x="85.65" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (7 samples, 0.04%)</title><rect x="1121.0" y="2053" width="0.4" height="15.0" fill="rgb(209,227,47)" rx="2" ry="2" />
<text  x="1124.02" y="2063.5" ></text>
</g>
<g >
<title>[[vdso]] (9 samples, 0.05%)</title><rect x="121.6" y="2021" width="0.5" height="15.0" fill="rgb(214,195,12)" rx="2" ry="2" />
<text  x="124.60" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="179.1" y="1621" width="0.1" height="15.0" fill="rgb(234,191,41)" rx="2" ry="2" />
<text  x="182.11" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (13 samples, 0.07%)</title><rect x="1017.2" y="2053" width="0.7" height="15.0" fill="rgb(238,16,41)" rx="2" ry="2" />
<text  x="1020.16" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="201.5" y="1621" width="0.2" height="15.0" fill="rgb(206,220,35)" rx="2" ry="2" />
<text  x="204.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="837" width="0.4" height="15.0" fill="rgb(227,166,30)" rx="2" ry="2" />
<text  x="1190.81" y="847.5" ></text>
</g>
<g >
<title>__asan_memset (3 samples, 0.02%)</title><rect x="581.9" y="1893" width="0.2" height="15.0" fill="rgb(238,135,52)" rx="2" ry="2" />
<text  x="584.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="789" width="0.4" height="15.0" fill="rgb(250,4,38)" rx="2" ry="2" />
<text  x="1190.81" y="799.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="199.5" y="1621" width="0.4" height="15.0" fill="rgb(238,191,27)" rx="2" ry="2" />
<text  x="202.50" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1781" width="0.3" height="15.0" fill="rgb(233,51,10)" rx="2" ry="2" />
<text  x="162.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (92 samples, 0.46%)</title><rect x="205.1" y="1765" width="5.5" height="15.0" fill="rgb(243,216,40)" rx="2" ry="2" />
<text  x="208.12" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="165" width="0.6" height="15.0" fill="rgb(249,114,7)" rx="2" ry="2" />
<text  x="1189.75" y="175.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.8" y="1333" width="0.1" height="15.0" fill="rgb(236,115,14)" rx="2" ry="2" />
<text  x="85.76" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="525.8" y="2021" width="0.2" height="15.0" fill="rgb(253,173,48)" rx="2" ry="2" />
<text  x="528.79" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1045" width="0.2" height="15.0" fill="rgb(245,71,36)" rx="2" ry="2" />
<text  x="1190.64" y="1055.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (34 samples, 0.17%)</title><rect x="493.7" y="1957" width="2.0" height="15.0" fill="rgb(241,132,42)" rx="2" ry="2" />
<text  x="496.69" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.1" y="1541" width="0.2" height="15.0" fill="rgb(208,213,52)" rx="2" ry="2" />
<text  x="219.11" y="1551.5" ></text>
</g>
<g >
<title>do_wp_page (85 samples, 0.43%)</title><rect x="936.5" y="1957" width="5.0" height="15.0" fill="rgb(223,186,3)" rx="2" ry="2" />
<text  x="939.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.41%)</title><rect x="139.0" y="1733" width="4.8" height="15.0" fill="rgb(228,90,26)" rx="2" ry="2" />
<text  x="142.04" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1269" width="0.6" height="15.0" fill="rgb(253,41,48)" rx="2" ry="2" />
<text  x="1189.75" y="1279.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (21 samples, 0.11%)</title><rect x="1151.8" y="2037" width="1.3" height="15.0" fill="rgb(228,94,50)" rx="2" ry="2" />
<text  x="1154.82" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="123.5" y="1957" width="0.2" height="15.0" fill="rgb(226,118,26)" rx="2" ry="2" />
<text  x="126.55" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.03%)</title><rect x="654.8" y="1781" width="0.3" height="15.0" fill="rgb(219,11,16)" rx="2" ry="2" />
<text  x="657.82" y="1791.5" ></text>
</g>
<g >
<title>handle_mm_fault (24 samples, 0.12%)</title><rect x="690.4" y="1797" width="1.4" height="15.0" fill="rgb(231,48,6)" rx="2" ry="2" />
<text  x="693.41" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="86.4" y="1621" width="0.1" height="15.0" fill="rgb(221,2,38)" rx="2" ry="2" />
<text  x="89.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="325" width="0.6" height="15.0" fill="rgb(219,110,2)" rx="2" ry="2" />
<text  x="1189.75" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="501" width="0.4" height="15.0" fill="rgb(252,65,51)" rx="2" ry="2" />
<text  x="1190.81" y="511.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (12 samples, 0.06%)</title><rect x="596.9" y="1877" width="0.7" height="15.0" fill="rgb(228,112,7)" rx="2" ry="2" />
<text  x="599.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="693" width="0.2" height="15.0" fill="rgb(234,76,33)" rx="2" ry="2" />
<text  x="1190.64" y="703.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,023 samples, 15.14%)</title><rect x="573.1" y="1973" width="178.7" height="15.0" fill="rgb(235,43,54)" rx="2" ry="2" />
<text  x="576.08" y="1983.5" >TDocument::PreprocessTe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1045" width="0.6" height="15.0" fill="rgb(211,34,37)" rx="2" ry="2" />
<text  x="1189.75" y="1055.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="654.8" y="1749" width="0.1" height="15.0" fill="rgb(213,228,6)" rx="2" ry="2" />
<text  x="657.82" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="373" width="0.2" height="15.0" fill="rgb(238,47,53)" rx="2" ry="2" />
<text  x="1190.64" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="177.2" y="1653" width="0.3" height="15.0" fill="rgb(229,133,32)" rx="2" ry="2" />
<text  x="180.16" y="1663.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="165.0" y="1541" width="0.2" height="15.0" fill="rgb(225,49,48)" rx="2" ry="2" />
<text  x="168.04" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="525.8" y="2005" width="0.2" height="15.0" fill="rgb(241,87,41)" rx="2" ry="2" />
<text  x="528.79" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (11 samples, 0.06%)</title><rect x="1125.6" y="2037" width="0.7" height="15.0" fill="rgb(228,84,19)" rx="2" ry="2" />
<text  x="1128.63" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (62 samples, 0.31%)</title><rect x="812.0" y="2037" width="3.7" height="15.0" fill="rgb(231,89,43)" rx="2" ry="2" />
<text  x="815.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1749" width="0.2" height="15.0" fill="rgb(221,76,25)" rx="2" ry="2" />
<text  x="1190.40" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="933" width="0.1" height="15.0" fill="rgb(238,6,28)" rx="2" ry="2" />
<text  x="1190.52" y="943.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="725" width="20.4" height="15.0" fill="rgb(220,88,46)" rx="2" ry="2" />
<text  x="58.81" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11 samples, 0.06%)</title><rect x="187.4" y="1829" width="0.7" height="15.0" fill="rgb(214,124,19)" rx="2" ry="2" />
<text  x="190.45" y="1839.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (7 samples, 0.04%)</title><rect x="1104.5" y="2053" width="0.4" height="15.0" fill="rgb(251,25,4)" rx="2" ry="2" />
<text  x="1107.47" y="2063.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1941" width="0.1" height="15.0" fill="rgb(233,179,49)" rx="2" ry="2" />
<text  x="521.75" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="1188.5" y="2053" width="0.3" height="15.0" fill="rgb(233,146,6)" rx="2" ry="2" />
<text  x="1191.52" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1909" width="0.1" height="15.0" fill="rgb(229,160,19)" rx="2" ry="2" />
<text  x="58.57" y="1919.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="213.6" y="1669" width="0.2" height="15.0" fill="rgb(212,64,49)" rx="2" ry="2" />
<text  x="216.57" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="599.6" y="1877" width="0.3" height="15.0" fill="rgb(207,176,17)" rx="2" ry="2" />
<text  x="602.56" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="159.2" y="1685" width="0.2" height="15.0" fill="rgb(220,69,50)" rx="2" ry="2" />
<text  x="162.19" y="1695.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (3 samples, 0.02%)</title><rect x="1104.2" y="2037" width="0.2" height="15.0" fill="rgb(217,70,15)" rx="2" ry="2" />
<text  x="1107.23" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (8 samples, 0.04%)</title><rect x="595.8" y="1877" width="0.4" height="15.0" fill="rgb(221,206,23)" rx="2" ry="2" />
<text  x="598.77" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1285" width="0.1" height="15.0" fill="rgb(249,97,49)" rx="2" ry="2" />
<text  x="219.35" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1749" width="0.6" height="15.0" fill="rgb(247,64,19)" rx="2" ry="2" />
<text  x="1190.64" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1653" width="0.2" height="15.0" fill="rgb(238,224,31)" rx="2" ry="2" />
<text  x="191.51" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="159.1" y="1925" width="0.4" height="15.0" fill="rgb(239,63,1)" rx="2" ry="2" />
<text  x="162.13" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="594.9" y="1877" width="0.3" height="15.0" fill="rgb(251,113,40)" rx="2" ry="2" />
<text  x="597.89" y="1887.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (7 samples, 0.04%)</title><rect x="1123.6" y="2037" width="0.4" height="15.0" fill="rgb(226,72,17)" rx="2" ry="2" />
<text  x="1126.62" y="2047.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="725.9" y="1781" width="0.2" height="15.0" fill="rgb(214,161,41)" rx="2" ry="2" />
<text  x="728.87" y="1791.5" ></text>
</g>
<g >
<title>operator delete[] (2 samples, 0.01%)</title><rect x="1111.5" y="2053" width="0.1" height="15.0" fill="rgb(234,3,1)" rx="2" ry="2" />
<text  x="1114.50" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.1" y="1589" width="0.2" height="15.0" fill="rgb(244,195,29)" rx="2" ry="2" />
<text  x="219.11" y="1599.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4 samples, 0.02%)</title><rect x="621.7" y="1845" width="0.2" height="15.0" fill="rgb(236,51,10)" rx="2" ry="2" />
<text  x="624.66" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="517" width="0.2" height="15.0" fill="rgb(239,158,39)" rx="2" ry="2" />
<text  x="1190.64" y="527.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.1" height="15.0" fill="rgb(208,185,19)" rx="2" ry="2" />
<text  x="1192.17" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (17 samples, 0.09%)</title><rect x="868.0" y="1973" width="1.0" height="15.0" fill="rgb(205,181,52)" rx="2" ry="2" />
<text  x="871.03" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1413" width="0.4" height="15.0" fill="rgb(225,115,51)" rx="2" ry="2" />
<text  x="1190.81" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1573" width="0.4" height="15.0" fill="rgb(235,169,29)" rx="2" ry="2" />
<text  x="1190.81" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (349 samples, 1.75%)</title><rect x="190.3" y="1813" width="20.6" height="15.0" fill="rgb(223,1,28)" rx="2" ry="2" />
<text  x="193.28" y="1823.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="1021.1" y="1989" width="0.3" height="15.0" fill="rgb(212,14,12)" rx="2" ry="2" />
<text  x="1024.12" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="762.7" y="1989" width="0.2" height="15.0" fill="rgb(226,96,39)" rx="2" ry="2" />
<text  x="765.70" y="1999.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="91.6" y="2005" width="0.1" height="15.0" fill="rgb(230,187,13)" rx="2" ry="2" />
<text  x="94.57" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="197" width="0.6" height="15.0" fill="rgb(225,76,47)" rx="2" ry="2" />
<text  x="1189.75" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="650.9" y="1829" width="0.6" height="15.0" fill="rgb(233,158,36)" rx="2" ry="2" />
<text  x="653.86" y="1839.5" ></text>
</g>
<g >
<title>page_fault (27 samples, 0.14%)</title><rect x="499.4" y="1925" width="1.6" height="15.0" fill="rgb(239,147,45)" rx="2" ry="2" />
<text  x="502.43" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="216.1" y="1893" width="0.4" height="15.0" fill="rgb(210,177,22)" rx="2" ry="2" />
<text  x="219.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1525" width="0.1" height="15.0" fill="rgb(218,12,16)" rx="2" ry="2" />
<text  x="219.35" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1093" width="0.1" height="15.0" fill="rgb(222,103,17)" rx="2" ry="2" />
<text  x="191.57" y="1103.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.7" y="1541" width="0.1" height="15.0" fill="rgb(250,137,21)" rx="2" ry="2" />
<text  x="86.65" y="1551.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.05%)</title><rect x="500.2" y="1829" width="0.5" height="15.0" fill="rgb(254,171,25)" rx="2" ry="2" />
<text  x="503.19" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (578 samples, 2.90%)</title><rect x="55.7" y="1909" width="34.2" height="15.0" fill="rgb(211,66,21)" rx="2" ry="2" />
<text  x="58.69" y="1919.5" >[u..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="86.5" y="1669" width="0.3" height="15.0" fill="rgb(205,217,43)" rx="2" ry="2" />
<text  x="89.49" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="79.9" y="1285" width="0.1" height="15.0" fill="rgb(248,27,0)" rx="2" ry="2" />
<text  x="82.93" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1749" width="0.3" height="15.0" fill="rgb(233,158,29)" rx="2" ry="2" />
<text  x="162.19" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (13 samples, 0.07%)</title><rect x="763.2" y="2005" width="0.8" height="15.0" fill="rgb(229,106,39)" rx="2" ry="2" />
<text  x="766.23" y="2015.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (28 samples, 0.14%)</title><rect x="939.8" y="1893" width="1.7" height="15.0" fill="rgb(215,36,10)" rx="2" ry="2" />
<text  x="942.85" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (42 samples, 0.21%)</title><rect x="676.4" y="1861" width="2.5" height="15.0" fill="rgb(248,71,26)" rx="2" ry="2" />
<text  x="679.40" y="1871.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.01%)</title><rect x="762.6" y="1893" width="0.1" height="15.0" fill="rgb(227,11,44)" rx="2" ry="2" />
<text  x="765.58" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="79.9" y="1269" width="0.1" height="15.0" fill="rgb(245,140,33)" rx="2" ry="2" />
<text  x="82.93" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1861" width="0.7" height="15.0" fill="rgb(229,86,22)" rx="2" ry="2" />
<text  x="1189.63" y="1871.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.03%)</title><rect x="1021.1" y="1973" width="0.3" height="15.0" fill="rgb(225,180,8)" rx="2" ry="2" />
<text  x="1024.12" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="691.6" y="1749" width="0.2" height="15.0" fill="rgb(231,32,53)" rx="2" ry="2" />
<text  x="694.59" y="1759.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.3" y="1381" width="0.2" height="15.0" fill="rgb(236,198,9)" rx="2" ry="2" />
<text  x="85.35" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,832 samples, 19.20%)</title><rect x="526.1" y="1989" width="226.5" height="15.0" fill="rgb(211,200,25)" rx="2" ry="2" />
<text  x="529.14" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Anno..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="90.7" y="1957" width="0.2" height="15.0" fill="rgb(244,225,16)" rx="2" ry="2" />
<text  x="93.68" y="1967.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.02%)</title><rect x="762.0" y="1845" width="0.2" height="15.0" fill="rgb(227,56,19)" rx="2" ry="2" />
<text  x="764.99" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1397" width="0.1" height="15.0" fill="rgb(241,181,45)" rx="2" ry="2" />
<text  x="219.17" y="1407.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="85.4" y="1541" width="0.1" height="15.0" fill="rgb(209,143,7)" rx="2" ry="2" />
<text  x="88.36" y="1551.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="212.8" y="1669" width="0.3" height="15.0" fill="rgb(230,195,3)" rx="2" ry="2" />
<text  x="215.80" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="1146.7" y="2037" width="0.2" height="15.0" fill="rgb(235,103,48)" rx="2" ry="2" />
<text  x="1149.67" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="185.3" y="1653" width="0.4" height="15.0" fill="rgb(250,167,46)" rx="2" ry="2" />
<text  x="188.32" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_default_append (2 samples, 0.01%)</title><rect x="216.5" y="1941" width="0.1" height="15.0" fill="rgb(205,42,36)" rx="2" ry="2" />
<text  x="219.53" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.08%)</title><rect x="677.9" y="1797" width="1.0" height="15.0" fill="rgb(214,145,48)" rx="2" ry="2" />
<text  x="680.94" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="885" width="0.6" height="15.0" fill="rgb(247,29,40)" rx="2" ry="2" />
<text  x="1189.75" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1317" width="0.1" height="15.0" fill="rgb(242,156,28)" rx="2" ry="2" />
<text  x="1190.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1669" width="0.1" height="15.0" fill="rgb(217,215,4)" rx="2" ry="2" />
<text  x="1190.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.42%)</title><rect x="200.2" y="1733" width="4.9" height="15.0" fill="rgb(228,94,18)" rx="2" ry="2" />
<text  x="203.15" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (13 samples, 0.07%)</title><rect x="763.2" y="2037" width="0.8" height="15.0" fill="rgb(227,214,22)" rx="2" ry="2" />
<text  x="766.23" y="2047.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (4 samples, 0.02%)</title><rect x="798.5" y="2037" width="0.2" height="15.0" fill="rgb(240,164,9)" rx="2" ry="2" />
<text  x="801.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="181" width="0.1" height="15.0" fill="rgb(225,70,44)" rx="2" ry="2" />
<text  x="1190.52" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1541" width="0.2" height="15.0" fill="rgb(254,130,46)" rx="2" ry="2" />
<text  x="191.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.3" y="1701" width="0.2" height="15.0" fill="rgb(234,163,7)" rx="2" ry="2" />
<text  x="219.29" y="1711.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (7 samples, 0.04%)</title><rect x="1103.7" y="2053" width="0.4" height="15.0" fill="rgb(216,4,22)" rx="2" ry="2" />
<text  x="1106.70" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="122.8" y="1925" width="0.1" height="15.0" fill="rgb(221,145,48)" rx="2" ry="2" />
<text  x="125.78" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="187.6" y="1797" width="0.3" height="15.0" fill="rgb(251,107,19)" rx="2" ry="2" />
<text  x="190.62" y="1807.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="145.6" y="1605" width="0.1" height="15.0" fill="rgb(251,214,33)" rx="2" ry="2" />
<text  x="148.60" y="1615.5" ></text>
</g>
<g >
<title>unmap_single_vma (8 samples, 0.04%)</title><rect x="1103.1" y="1925" width="0.5" height="15.0" fill="rgb(245,221,29)" rx="2" ry="2" />
<text  x="1106.11" y="1935.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="173.0" y="1589" width="0.1" height="15.0" fill="rgb(240,146,9)" rx="2" ry="2" />
<text  x="176.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1429" width="0.4" height="15.0" fill="rgb(240,115,16)" rx="2" ry="2" />
<text  x="1190.81" y="1439.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (181 samples, 0.91%)</title><rect x="312.6" y="1973" width="10.7" height="15.0" fill="rgb(212,132,22)" rx="2" ry="2" />
<text  x="315.64" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (133 samples, 0.67%)</title><rect x="933.9" y="2005" width="7.8" height="15.0" fill="rgb(212,137,50)" rx="2" ry="2" />
<text  x="936.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.42%)</title><rect x="152.8" y="1765" width="4.9" height="15.0" fill="rgb(242,188,13)" rx="2" ry="2" />
<text  x="155.81" y="1775.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="1120.8" y="2037" width="0.2" height="15.0" fill="rgb(220,112,12)" rx="2" ry="2" />
<text  x="1123.84" y="2047.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (3 samples, 0.02%)</title><rect x="520.8" y="2037" width="0.1" height="15.0" fill="rgb(254,68,18)" rx="2" ry="2" />
<text  x="523.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1509" width="0.2" height="15.0" fill="rgb(252,87,42)" rx="2" ry="2" />
<text  x="1190.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1461" width="0.2" height="15.0" fill="rgb(230,11,45)" rx="2" ry="2" />
<text  x="1190.64" y="1471.5" ></text>
</g>
<g >
<title>GetHost (492 samples, 2.46%)</title><rect x="159.7" y="1957" width="29.0" height="15.0" fill="rgb(232,158,53)" rx="2" ry="2" />
<text  x="162.66" y="1967.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1109" width="0.1" height="15.0" fill="rgb(206,224,29)" rx="2" ry="2" />
<text  x="191.57" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="709" width="0.1" height="15.0" fill="rgb(230,172,10)" rx="2" ry="2" />
<text  x="1190.52" y="719.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="146.9" y="1605" width="0.2" height="15.0" fill="rgb(224,178,36)" rx="2" ry="2" />
<text  x="149.90" y="1615.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="758.7" y="1909" width="0.2" height="15.0" fill="rgb(250,39,48)" rx="2" ry="2" />
<text  x="761.74" y="1919.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="1103.8" y="1973" width="0.3" height="15.0" fill="rgb(211,200,2)" rx="2" ry="2" />
<text  x="1106.82" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (63 samples, 0.32%)</title><rect x="726.1" y="1877" width="3.7" height="15.0" fill="rgb(252,128,16)" rx="2" ry="2" />
<text  x="729.11" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="681.2" y="1829" width="0.1" height="15.0" fill="rgb(228,56,50)" rx="2" ry="2" />
<text  x="684.19" y="1839.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="55.5" y="1941" width="0.1" height="15.0" fill="rgb(252,96,54)" rx="2" ry="2" />
<text  x="58.46" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="208.5" y="1637" width="0.3" height="15.0" fill="rgb(215,220,10)" rx="2" ry="2" />
<text  x="211.55" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="574.0" y="1925" width="0.1" height="15.0" fill="rgb(229,221,28)" rx="2" ry="2" />
<text  x="576.96" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (4 samples, 0.02%)</title><rect x="749.0" y="1893" width="0.2" height="15.0" fill="rgb(206,202,43)" rx="2" ry="2" />
<text  x="751.99" y="1903.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (16 samples, 0.08%)</title><rect x="816.4" y="2005" width="0.9" height="15.0" fill="rgb(207,142,26)" rx="2" ry="2" />
<text  x="819.37" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (79 samples, 0.40%)</title><rect x="147.9" y="1701" width="4.7" height="15.0" fill="rgb(218,9,51)" rx="2" ry="2" />
<text  x="150.90" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.3" y="853" width="0.1" height="15.0" fill="rgb(210,164,12)" rx="2" ry="2" />
<text  x="79.26" y="863.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.13%)</title><rect x="870.6" y="2021" width="1.6" height="15.0" fill="rgb(211,105,12)" rx="2" ry="2" />
<text  x="873.63" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.3" y="1445" width="0.1" height="15.0" fill="rgb(226,130,49)" rx="2" ry="2" />
<text  x="162.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.5" y="1653" width="0.1" height="15.0" fill="rgb(214,143,24)" rx="2" ry="2" />
<text  x="1190.46" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="325" width="0.2" height="15.0" fill="rgb(223,161,48)" rx="2" ry="2" />
<text  x="1190.64" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="1103.1" y="2053" width="0.5" height="15.0" fill="rgb(222,140,3)" rx="2" ry="2" />
<text  x="1106.11" y="2063.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (337 samples, 1.69%)</title><rect x="379.4" y="1957" width="20.0" height="15.0" fill="rgb(229,64,13)" rx="2" ry="2" />
<text  x="382.43" y="1967.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="870.5" y="2021" width="0.1" height="15.0" fill="rgb(227,88,14)" rx="2" ry="2" />
<text  x="873.45" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="773" width="0.1" height="15.0" fill="rgb(226,148,53)" rx="2" ry="2" />
<text  x="1190.52" y="783.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.07%)</title><rect x="622.3" y="1845" width="0.8" height="15.0" fill="rgb(224,4,16)" rx="2" ry="2" />
<text  x="625.31" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1877" width="0.1" height="15.0" fill="rgb(253,37,4)" rx="2" ry="2" />
<text  x="58.57" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1061" width="0.6" height="15.0" fill="rgb(222,145,27)" rx="2" ry="2" />
<text  x="1189.75" y="1071.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="82.0" y="1141" width="0.1" height="15.0" fill="rgb(243,201,18)" rx="2" ry="2" />
<text  x="85.00" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1877" width="0.7" height="15.0" fill="rgb(213,55,8)" rx="2" ry="2" />
<text  x="1189.63" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1637" width="0.1" height="15.0" fill="rgb(234,228,29)" rx="2" ry="2" />
<text  x="219.35" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="453" width="0.4" height="15.0" fill="rgb(244,68,26)" rx="2" ry="2" />
<text  x="1190.81" y="463.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::~Dictionary (2 samples, 0.01%)</title><rect x="518.9" y="1989" width="0.1" height="15.0" fill="rgb(217,79,46)" rx="2" ry="2" />
<text  x="521.93" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="741" width="0.4" height="15.0" fill="rgb(223,211,7)" rx="2" ry="2" />
<text  x="1190.81" y="751.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="202.1" y="1605" width="0.2" height="15.0" fill="rgb(217,189,12)" rx="2" ry="2" />
<text  x="205.11" y="1615.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (5 samples, 0.03%)</title><rect x="197.0" y="1589" width="0.3" height="15.0" fill="rgb(221,44,18)" rx="2" ry="2" />
<text  x="199.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1333" width="0.4" height="15.0" fill="rgb(218,140,29)" rx="2" ry="2" />
<text  x="1190.81" y="1343.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="146.5" y="1605" width="0.2" height="15.0" fill="rgb(244,35,40)" rx="2" ry="2" />
<text  x="149.54" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (6 samples, 0.03%)</title><rect x="518.0" y="1989" width="0.4" height="15.0" fill="rgb(212,7,11)" rx="2" ry="2" />
<text  x="521.04" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="133" width="0.6" height="15.0" fill="rgb(224,133,34)" rx="2" ry="2" />
<text  x="1189.75" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1701" width="0.1" height="15.0" fill="rgb(230,126,7)" rx="2" ry="2" />
<text  x="162.43" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1157" width="0.2" height="15.0" fill="rgb(205,101,32)" rx="2" ry="2" />
<text  x="1190.64" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="565" width="20.4" height="15.0" fill="rgb(239,103,16)" rx="2" ry="2" />
<text  x="58.81" y="575.5" ></text>
</g>
<g >
<title>__libc_read (5 samples, 0.03%)</title><rect x="122.1" y="2037" width="0.3" height="15.0" fill="rgb(239,205,25)" rx="2" ry="2" />
<text  x="125.13" y="2047.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="81.8" y="1429" width="0.1" height="15.0" fill="rgb(238,10,19)" rx="2" ry="2" />
<text  x="84.82" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="181.5" y="1797" width="5.7" height="15.0" fill="rgb(214,133,51)" rx="2" ry="2" />
<text  x="184.54" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.26%)</title><rect x="140.3" y="1605" width="3.1" height="15.0" fill="rgb(251,91,35)" rx="2" ry="2" />
<text  x="143.34" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="485" width="0.1" height="15.0" fill="rgb(228,196,51)" rx="2" ry="2" />
<text  x="1190.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="131.2" y="1925" width="0.2" height="15.0" fill="rgb(244,213,1)" rx="2" ry="2" />
<text  x="134.23" y="1935.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="55.3" y="1797" width="0.1" height="15.0" fill="rgb(223,42,28)" rx="2" ry="2" />
<text  x="58.28" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (34 samples, 0.17%)</title><rect x="129.1" y="1925" width="2.0" height="15.0" fill="rgb(244,0,32)" rx="2" ry="2" />
<text  x="132.11" y="1935.5" ></text>
</g>
<g >
<title>__asan_memcpy (7 samples, 0.04%)</title><rect x="652.8" y="1877" width="0.4" height="15.0" fill="rgb(252,12,53)" rx="2" ry="2" />
<text  x="655.76" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1461" width="0.1" height="15.0" fill="rgb(205,64,3)" rx="2" ry="2" />
<text  x="86.41" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.42%)</title><rect x="195.0" y="1701" width="4.9" height="15.0" fill="rgb(232,114,42)" rx="2" ry="2" />
<text  x="198.01" y="1711.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="650.9" y="1861" width="0.6" height="15.0" fill="rgb(253,174,48)" rx="2" ry="2" />
<text  x="653.86" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="187.4" y="1797" width="0.2" height="15.0" fill="rgb(220,45,33)" rx="2" ry="2" />
<text  x="190.45" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="318.0" y="1941" width="0.8" height="15.0" fill="rgb(226,74,46)" rx="2" ry="2" />
<text  x="321.02" y="1951.5" ></text>
</g>
<g >
<title>__pthread_once_slow (3,841 samples, 19.24%)</title><rect x="525.7" y="2037" width="227.0" height="15.0" fill="rgb(220,101,53)" rx="2" ry="2" />
<text  x="528.67" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>schedule (9 samples, 0.05%)</title><rect x="132.1" y="1861" width="0.5" height="15.0" fill="rgb(230,46,4)" rx="2" ry="2" />
<text  x="135.06" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (101 samples, 0.51%)</title><rect x="170.7" y="1749" width="5.9" height="15.0" fill="rgb(249,142,11)" rx="2" ry="2" />
<text  x="173.66" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1189" width="0.1" height="15.0" fill="rgb(215,117,28)" rx="2" ry="2" />
<text  x="1190.52" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.8" y="1445" width="0.1" height="15.0" fill="rgb(237,216,26)" rx="2" ry="2" />
<text  x="85.76" y="1455.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1103.8" y="1957" width="0.3" height="15.0" fill="rgb(245,17,16)" rx="2" ry="2" />
<text  x="1106.82" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1893" width="0.7" height="15.0" fill="rgb(254,76,24)" rx="2" ry="2" />
<text  x="1189.63" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1157" width="0.1" height="15.0" fill="rgb(246,178,3)" rx="2" ry="2" />
<text  x="219.17" y="1167.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.05%)</title><rect x="30.0" y="1925" width="0.6" height="15.0" fill="rgb(216,205,18)" rx="2" ry="2" />
<text  x="33.04" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.39%)</title><rect x="210.9" y="1813" width="4.6" height="15.0" fill="rgb(208,153,41)" rx="2" ry="2" />
<text  x="213.91" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="91.6" y="1973" width="0.1" height="15.0" fill="rgb(231,20,3)" rx="2" ry="2" />
<text  x="94.57" y="1983.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.06%)</title><rect x="132.0" y="1909" width="0.7" height="15.0" fill="rgb(230,149,18)" rx="2" ry="2" />
<text  x="135.00" y="1919.5" ></text>
</g>
<g >
<title>alloc_pages_vma (13 samples, 0.07%)</title><rect x="936.8" y="1925" width="0.8" height="15.0" fill="rgb(222,158,54)" rx="2" ry="2" />
<text  x="939.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="789" width="0.1" height="15.0" fill="rgb(232,149,3)" rx="2" ry="2" />
<text  x="1190.52" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1189" width="0.6" height="15.0" fill="rgb(236,84,17)" rx="2" ry="2" />
<text  x="1189.75" y="1199.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1189.6" y="2005" width="0.2" height="15.0" fill="rgb(221,161,39)" rx="2" ry="2" />
<text  x="1192.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1573" width="0.2" height="15.0" fill="rgb(214,201,22)" rx="2" ry="2" />
<text  x="1190.64" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.22%)</title><rect x="813.1" y="2021" width="2.6" height="15.0" fill="rgb(229,159,4)" rx="2" ry="2" />
<text  x="816.12" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="597" width="0.2" height="15.0" fill="rgb(217,125,33)" rx="2" ry="2" />
<text  x="1190.64" y="607.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="729.7" y="1861" width="0.1" height="15.0" fill="rgb(230,162,16)" rx="2" ry="2" />
<text  x="732.72" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (415 samples, 2.08%)</title><rect x="55.8" y="1333" width="24.5" height="15.0" fill="rgb(207,113,49)" rx="2" ry="2" />
<text  x="58.81" y="1343.5" >[..</text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="186.6" y="1653" width="0.1" height="15.0" fill="rgb(228,80,47)" rx="2" ry="2" />
<text  x="189.62" y="1663.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (2 samples, 0.01%)</title><rect x="519.2" y="1973" width="0.1" height="15.0" fill="rgb(206,92,25)" rx="2" ry="2" />
<text  x="522.23" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="143.4" y="1605" width="0.1" height="15.0" fill="rgb(206,196,17)" rx="2" ry="2" />
<text  x="146.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1349" width="0.2" height="15.0" fill="rgb(245,22,33)" rx="2" ry="2" />
<text  x="191.51" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.39%)</title><rect x="205.7" y="1669" width="4.6" height="15.0" fill="rgb(232,202,17)" rx="2" ry="2" />
<text  x="208.71" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1333" width="0.6" height="15.0" fill="rgb(207,104,36)" rx="2" ry="2" />
<text  x="1189.75" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="157.7" y="1829" width="0.2" height="15.0" fill="rgb(226,74,6)" rx="2" ry="2" />
<text  x="160.71" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (2 samples, 0.01%)</title><rect x="1111.9" y="2053" width="0.1" height="15.0" fill="rgb(214,66,33)" rx="2" ry="2" />
<text  x="1114.86" y="2063.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (557 samples, 2.79%)</title><rect x="765.5" y="2037" width="33.0" height="15.0" fill="rgb(208,197,38)" rx="2" ry="2" />
<text  x="768.54" y="2047.5" >fa..</text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="162.3" y="1541" width="0.3" height="15.0" fill="rgb(223,214,8)" rx="2" ry="2" />
<text  x="165.27" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="79.9" y="1301" width="0.1" height="15.0" fill="rgb(211,55,31)" rx="2" ry="2" />
<text  x="82.93" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="691.3" y="1717" width="0.1" height="15.0" fill="rgb(240,166,25)" rx="2" ry="2" />
<text  x="694.29" y="1727.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.02%)</title><rect x="122.2" y="1925" width="0.2" height="15.0" fill="rgb(218,203,34)" rx="2" ry="2" />
<text  x="125.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (426 samples, 2.13%)</title><rect x="190.3" y="1829" width="25.2" height="15.0" fill="rgb(249,162,5)" rx="2" ry="2" />
<text  x="193.28" y="1839.5" >s..</text>
</g>
<g >
<title>__asan::asan_memalign (8 samples, 0.04%)</title><rect x="1166.0" y="2037" width="0.5" height="15.0" fill="rgb(234,186,37)" rx="2" ry="2" />
<text  x="1169.00" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (6 samples, 0.03%)</title><rect x="167.9" y="1573" width="0.3" height="15.0" fill="rgb(229,201,29)" rx="2" ry="2" />
<text  x="170.88" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (3 samples, 0.02%)</title><rect x="199.9" y="1733" width="0.2" height="15.0" fill="rgb(220,89,43)" rx="2" ry="2" />
<text  x="202.92" y="1743.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (2 samples, 0.01%)</title><rect x="1103.6" y="2053" width="0.1" height="15.0" fill="rgb(229,149,41)" rx="2" ry="2" />
<text  x="1106.58" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (9 samples, 0.05%)</title><rect x="516.6" y="2005" width="0.5" height="15.0" fill="rgb(237,112,23)" rx="2" ry="2" />
<text  x="519.57" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1509" width="0.1" height="15.0" fill="rgb(209,27,26)" rx="2" ry="2" />
<text  x="219.35" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="373" width="20.1" height="15.0" fill="rgb(254,31,12)" rx="2" ry="2" />
<text  x="58.81" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="198.9" y="1589" width="0.1" height="15.0" fill="rgb(238,29,3)" rx="2" ry="2" />
<text  x="201.91" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="601.3" y="1861" width="0.2" height="15.0" fill="rgb(239,14,38)" rx="2" ry="2" />
<text  x="604.33" y="1871.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="208.3" y="1637" width="0.2" height="15.0" fill="rgb(233,99,33)" rx="2" ry="2" />
<text  x="211.25" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="1122.3" y="2037" width="0.4" height="15.0" fill="rgb(241,166,45)" rx="2" ry="2" />
<text  x="1125.32" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="517.6" y="1925" width="0.3" height="15.0" fill="rgb(221,7,17)" rx="2" ry="2" />
<text  x="520.63" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="171.1" y="1621" width="0.3" height="15.0" fill="rgb(241,102,31)" rx="2" ry="2" />
<text  x="174.13" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (94 samples, 0.47%)</title><rect x="160.3" y="1669" width="5.5" height="15.0" fill="rgb(234,37,30)" rx="2" ry="2" />
<text  x="163.26" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="133.0" y="1653" width="0.1" height="15.0" fill="rgb(206,178,9)" rx="2" ry="2" />
<text  x="136.01" y="1663.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="122.9" y="1941" width="0.1" height="15.0" fill="rgb(231,174,9)" rx="2" ry="2" />
<text  x="125.90" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.09%)</title><rect x="761.6" y="2005" width="1.1" height="15.0" fill="rgb(208,139,2)" rx="2" ry="2" />
<text  x="764.63" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1445" width="0.1" height="15.0" fill="rgb(216,223,3)" rx="2" ry="2" />
<text  x="1190.52" y="1455.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="138.7" y="1573" width="0.2" height="15.0" fill="rgb(230,107,48)" rx="2" ry="2" />
<text  x="141.68" y="1583.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="150.4" y="1637" width="0.2" height="15.0" fill="rgb(250,194,49)" rx="2" ry="2" />
<text  x="153.44" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="163.6" y="1541" width="0.1" height="15.0" fill="rgb(245,51,32)" rx="2" ry="2" />
<text  x="166.63" y="1551.5" ></text>
</g>
<g >
<title>wp_page_copy (16 samples, 0.08%)</title><rect x="54.5" y="1925" width="1.0" height="15.0" fill="rgb(241,19,44)" rx="2" ry="2" />
<text  x="57.51" y="1935.5" ></text>
</g>
<g >
<title>Annotate (173 samples, 0.87%)</title><rect x="122.4" y="2005" width="10.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="125.43" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="379.8" y="1925" width="0.1" height="15.0" fill="rgb(231,1,38)" rx="2" ry="2" />
<text  x="382.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="357" width="0.1" height="15.0" fill="rgb(246,25,21)" rx="2" ry="2" />
<text  x="1190.52" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1365" width="0.1" height="15.0" fill="rgb(229,89,2)" rx="2" ry="2" />
<text  x="85.00" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (84 samples, 0.42%)</title><rect x="133.9" y="1589" width="5.0" height="15.0" fill="rgb(234,71,47)" rx="2" ry="2" />
<text  x="136.89" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (5 samples, 0.03%)</title><rect x="809.2" y="2037" width="0.3" height="15.0" fill="rgb(219,190,28)" rx="2" ry="2" />
<text  x="812.22" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (17 samples, 0.09%)</title><rect x="761.7" y="1989" width="1.0" height="15.0" fill="rgb(238,15,1)" rx="2" ry="2" />
<text  x="764.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="965" width="0.1" height="15.0" fill="rgb(253,57,9)" rx="2" ry="2" />
<text  x="1190.52" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="132.0" y="1941" width="0.7" height="15.0" fill="rgb(207,133,48)" rx="2" ry="2" />
<text  x="135.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="469" width="0.2" height="15.0" fill="rgb(248,36,14)" rx="2" ry="2" />
<text  x="1190.64" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.1" y="1493" width="0.2" height="15.0" fill="rgb(216,70,47)" rx="2" ry="2" />
<text  x="219.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1541" width="0.2" height="15.0" fill="rgb(231,66,25)" rx="2" ry="2" />
<text  x="1190.64" y="1551.5" ></text>
</g>
<g >
<title>__asan_memset (3 samples, 0.02%)</title><rect x="484.6" y="1925" width="0.2" height="15.0" fill="rgb(247,130,41)" rx="2" ry="2" />
<text  x="487.65" y="1935.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (31 samples, 0.16%)</title><rect x="867.7" y="2037" width="1.8" height="15.0" fill="rgb(243,151,34)" rx="2" ry="2" />
<text  x="870.68" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.04%)</title><rect x="690.6" y="1733" width="0.4" height="15.0" fill="rgb(236,157,2)" rx="2" ry="2" />
<text  x="693.59" y="1743.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (27 samples, 0.14%)</title><rect x="939.8" y="1877" width="1.6" height="15.0" fill="rgb(245,204,46)" rx="2" ry="2" />
<text  x="942.85" y="1887.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (232 samples, 1.16%)</title><rect x="30.7" y="2037" width="13.7" height="15.0" fill="rgb(234,102,39)" rx="2" ry="2" />
<text  x="33.69" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (94 samples, 0.47%)</title><rect x="205.1" y="1781" width="5.6" height="15.0" fill="rgb(247,163,19)" rx="2" ry="2" />
<text  x="208.12" y="1791.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="184.9" y="1653" width="0.2" height="15.0" fill="rgb(252,108,52)" rx="2" ry="2" />
<text  x="187.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="261" width="0.2" height="15.0" fill="rgb(206,198,31)" rx="2" ry="2" />
<text  x="1190.64" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1205" width="0.1" height="15.0" fill="rgb(229,126,11)" rx="2" ry="2" />
<text  x="162.43" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1221" width="0.1" height="15.0" fill="rgb(240,129,47)" rx="2" ry="2" />
<text  x="1190.52" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 0.34%)</title><rect x="190.9" y="1669" width="4.0" height="15.0" fill="rgb(236,4,9)" rx="2" ry="2" />
<text  x="193.87" y="1679.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="214.3" y="1669" width="0.5" height="15.0" fill="rgb(213,214,49)" rx="2" ry="2" />
<text  x="217.34" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1589" width="0.2" height="15.0" fill="rgb(227,1,11)" rx="2" ry="2" />
<text  x="1190.64" y="1599.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (3 samples, 0.02%)</title><rect x="572.8" y="1893" width="0.2" height="15.0" fill="rgb(245,101,11)" rx="2" ry="2" />
<text  x="575.78" y="1903.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char@plt (2 samples, 0.01%)</title><rect x="577.3" y="1893" width="0.1" height="15.0" fill="rgb(244,20,43)" rx="2" ry="2" />
<text  x="580.27" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="655.1" y="1781" width="0.1" height="15.0" fill="rgb(246,82,41)" rx="2" ry="2" />
<text  x="658.12" y="1791.5" ></text>
</g>
<g >
<title>__handle_mm_fault (52 samples, 0.26%)</title><rect x="25.1" y="1973" width="3.1" height="15.0" fill="rgb(236,62,6)" rx="2" ry="2" />
<text  x="28.13" y="1983.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="323.0" y="1957" width="0.3" height="15.0" fill="rgb(216,34,13)" rx="2" ry="2" />
<text  x="325.98" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (13 samples, 0.07%)</title><rect x="27.4" y="1941" width="0.7" height="15.0" fill="rgb(223,96,25)" rx="2" ry="2" />
<text  x="30.38" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (15 samples, 0.08%)</title><rect x="598.7" y="1877" width="0.9" height="15.0" fill="rgb(237,122,16)" rx="2" ry="2" />
<text  x="601.67" y="1887.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.02%)</title><rect x="122.2" y="1973" width="0.2" height="15.0" fill="rgb(205,61,28)" rx="2" ry="2" />
<text  x="125.19" y="1983.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="654.8" y="1765" width="0.3" height="15.0" fill="rgb(221,105,31)" rx="2" ry="2" />
<text  x="657.82" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="469" width="0.6" height="15.0" fill="rgb(235,97,38)" rx="2" ry="2" />
<text  x="1189.75" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="245" width="0.6" height="15.0" fill="rgb(206,135,14)" rx="2" ry="2" />
<text  x="1189.75" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.8" y="1813" width="0.1" height="15.0" fill="rgb(226,162,5)" rx="2" ry="2" />
<text  x="218.76" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="89.0" y="1861" width="0.1" height="15.0" fill="rgb(253,74,40)" rx="2" ry="2" />
<text  x="91.97" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="1925" width="0.1" height="15.0" fill="rgb(206,115,26)" rx="2" ry="2" />
<text  x="1190.28" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (46 samples, 0.23%)</title><rect x="995.1" y="2053" width="2.7" height="15.0" fill="rgb(251,112,7)" rx="2" ry="2" />
<text  x="998.06" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (92 samples, 0.46%)</title><rect x="170.9" y="1637" width="5.4" height="15.0" fill="rgb(229,229,39)" rx="2" ry="2" />
<text  x="173.90" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (4 samples, 0.02%)</title><rect x="1123.0" y="2037" width="0.2" height="15.0" fill="rgb(244,12,48)" rx="2" ry="2" />
<text  x="1125.97" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.3" y="1333" width="0.2" height="15.0" fill="rgb(230,58,31)" rx="2" ry="2" />
<text  x="85.35" y="1343.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.03%)</title><rect x="937.3" y="1893" width="0.3" height="15.0" fill="rgb(229,155,5)" rx="2" ry="2" />
<text  x="940.31" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (5 samples, 0.03%)</title><rect x="517.6" y="2005" width="0.3" height="15.0" fill="rgb(214,49,37)" rx="2" ry="2" />
<text  x="520.63" y="2015.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16 samples, 0.08%)</title><rect x="509.6" y="1861" width="0.9" height="15.0" fill="rgb(220,125,7)" rx="2" ry="2" />
<text  x="512.59" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (26 samples, 0.13%)</title><rect x="1125.2" y="2053" width="1.5" height="15.0" fill="rgb(220,7,30)" rx="2" ry="2" />
<text  x="1128.16" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1077" width="0.4" height="15.0" fill="rgb(229,8,34)" rx="2" ry="2" />
<text  x="1190.81" y="1087.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (126 samples, 0.63%)</title><rect x="1129.4" y="2037" width="7.5" height="15.0" fill="rgb(244,28,39)" rx="2" ry="2" />
<text  x="1132.41" y="2047.5" ></text>
</g>
<g >
<title>mmap_region (18 samples, 0.09%)</title><rect x="1101.6" y="1941" width="1.1" height="15.0" fill="rgb(241,132,12)" rx="2" ry="2" />
<text  x="1104.63" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="510.7" y="1861" width="0.1" height="15.0" fill="rgb(247,206,1)" rx="2" ry="2" />
<text  x="513.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1445" width="0.4" height="15.0" fill="rgb(249,213,39)" rx="2" ry="2" />
<text  x="1190.81" y="1455.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="519.1" y="2005" width="0.4" height="15.0" fill="rgb(248,213,29)" rx="2" ry="2" />
<text  x="522.11" y="2015.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (229 samples, 1.15%)</title><rect x="526.6" y="1941" width="13.5" height="15.0" fill="rgb(216,66,19)" rx="2" ry="2" />
<text  x="529.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (477 samples, 2.39%)</title><rect x="160.0" y="1909" width="28.2" height="15.0" fill="rgb(242,56,30)" rx="2" ry="2" />
<text  x="162.96" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1557" width="0.4" height="15.0" fill="rgb(244,175,14)" rx="2" ry="2" />
<text  x="1190.81" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1845" width="0.1" height="15.0" fill="rgb(218,157,41)" rx="2" ry="2" />
<text  x="521.75" y="1855.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1123.5" y="2037" width="0.1" height="15.0" fill="rgb(222,120,6)" rx="2" ry="2" />
<text  x="1126.50" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="759.0" y="1925" width="0.1" height="15.0" fill="rgb(227,66,49)" rx="2" ry="2" />
<text  x="761.97" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (20 samples, 0.10%)</title><rect x="499.8" y="1861" width="1.2" height="15.0" fill="rgb(240,51,44)" rx="2" ry="2" />
<text  x="502.84" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="213" width="0.4" height="15.0" fill="rgb(217,133,36)" rx="2" ry="2" />
<text  x="1190.81" y="223.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="194.8" y="1589" width="0.1" height="15.0" fill="rgb(206,18,46)" rx="2" ry="2" />
<text  x="197.78" y="1599.5" ></text>
</g>
<g >
<title>unmap_page_range (8 samples, 0.04%)</title><rect x="1103.1" y="1909" width="0.5" height="15.0" fill="rgb(208,27,25)" rx="2" ry="2" />
<text  x="1106.11" y="1919.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (4 samples, 0.02%)</title><rect x="222.3" y="1957" width="0.3" height="15.0" fill="rgb(227,77,12)" rx="2" ry="2" />
<text  x="225.32" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="81.8" y="1413" width="0.1" height="15.0" fill="rgb(228,221,13)" rx="2" ry="2" />
<text  x="84.82" y="1423.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="146.2" y="1605" width="0.1" height="15.0" fill="rgb(224,116,17)" rx="2" ry="2" />
<text  x="149.19" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.02%)</title><rect x="762.7" y="2037" width="0.2" height="15.0" fill="rgb(225,129,9)" rx="2" ry="2" />
<text  x="765.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.08%)</title><rect x="1186.4" y="2037" width="0.9" height="15.0" fill="rgb(245,124,20)" rx="2" ry="2" />
<text  x="1189.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="188.4" y="1829" width="0.3" height="15.0" fill="rgb(230,25,35)" rx="2" ry="2" />
<text  x="191.39" y="1839.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1189.7" y="1973" width="0.1" height="15.0" fill="rgb(222,48,2)" rx="2" ry="2" />
<text  x="1192.70" y="1983.5" ></text>
</g>
<g >
<title>handle_mm_fault (101 samples, 0.51%)</title><rect x="935.7" y="1989" width="5.9" height="15.0" fill="rgb(231,20,19)" rx="2" ry="2" />
<text  x="938.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1813" width="0.4" height="15.0" fill="rgb(252,159,30)" rx="2" ry="2" />
<text  x="219.11" y="1823.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (319 samples, 1.60%)</title><rect x="380.4" y="1925" width="18.9" height="15.0" fill="rgb(245,96,29)" rx="2" ry="2" />
<text  x="383.44" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="437" width="0.4" height="15.0" fill="rgb(218,199,24)" rx="2" ry="2" />
<text  x="1190.81" y="447.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.06%)</title><rect x="815.7" y="2005" width="0.7" height="15.0" fill="rgb(215,54,20)" rx="2" ry="2" />
<text  x="818.66" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="45.8" y="2021" width="0.1" height="15.0" fill="rgb(238,136,7)" rx="2" ry="2" />
<text  x="48.82" y="2031.5" ></text>
</g>
<g >
<title>__schedule (9 samples, 0.05%)</title><rect x="132.1" y="1845" width="0.5" height="15.0" fill="rgb(231,83,30)" rx="2" ry="2" />
<text  x="135.06" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="197" width="0.1" height="15.0" fill="rgb(242,1,24)" rx="2" ry="2" />
<text  x="1190.52" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="691.0" y="1733" width="0.2" height="15.0" fill="rgb(242,179,33)" rx="2" ry="2" />
<text  x="694.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="149" width="0.1" height="15.0" fill="rgb(243,217,13)" rx="2" ry="2" />
<text  x="1190.52" y="159.5" ></text>
</g>
<g >
<title>[unknown] (13,994 samples, 70.10%)</title><rect x="45.3" y="2053" width="827.2" height="15.0" fill="rgb(229,214,13)" rx="2" ry="2" />
<text  x="48.29" y="2063.5" >[unknown]</text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1103.8" y="1989" width="0.3" height="15.0" fill="rgb(233,111,45)" rx="2" ry="2" />
<text  x="1106.76" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.72%)</title><rect x="55.8" y="469" width="20.3" height="15.0" fill="rgb(234,155,6)" rx="2" ry="2" />
<text  x="58.81" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="83.4" y="1493" width="0.1" height="15.0" fill="rgb(244,75,7)" rx="2" ry="2" />
<text  x="86.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1765" width="0.7" height="15.0" fill="rgb(245,86,39)" rx="2" ry="2" />
<text  x="1189.63" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="533" width="0.6" height="15.0" fill="rgb(221,107,35)" rx="2" ry="2" />
<text  x="1189.75" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="69" width="0.4" height="15.0" fill="rgb(252,43,30)" rx="2" ry="2" />
<text  x="1190.81" y="79.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (4 samples, 0.02%)</title><rect x="869.5" y="2037" width="0.2" height="15.0" fill="rgb(220,5,34)" rx="2" ry="2" />
<text  x="872.51" y="2047.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.02%)</title><rect x="691.2" y="1749" width="0.2" height="15.0" fill="rgb(247,30,52)" rx="2" ry="2" />
<text  x="694.24" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (498 samples, 2.49%)</title><rect x="55.8" y="1605" width="29.4" height="15.0" fill="rgb(205,128,8)" rx="2" ry="2" />
<text  x="58.75" y="1615.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.42%)</title><rect x="200.2" y="1765" width="4.9" height="15.0" fill="rgb(244,26,46)" rx="2" ry="2" />
<text  x="203.15" y="1775.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (3 samples, 0.02%)</title><rect x="55.3" y="1877" width="0.2" height="15.0" fill="rgb(234,33,12)" rx="2" ry="2" />
<text  x="58.28" y="1887.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (12 samples, 0.06%)</title><rect x="573.7" y="1941" width="0.7" height="15.0" fill="rgb(209,109,8)" rx="2" ry="2" />
<text  x="576.73" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (32 samples, 0.16%)</title><rect x="689.9" y="1813" width="1.9" height="15.0" fill="rgb(233,227,3)" rx="2" ry="2" />
<text  x="692.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="2005" width="0.1" height="15.0" fill="rgb(254,171,44)" rx="2" ry="2" />
<text  x="58.57" y="2015.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.02%)</title><rect x="1103.3" y="1861" width="0.3" height="15.0" fill="rgb(228,49,48)" rx="2" ry="2" />
<text  x="1106.35" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.41%)</title><rect x="139.0" y="1701" width="4.8" height="15.0" fill="rgb(237,25,3)" rx="2" ry="2" />
<text  x="142.04" y="1711.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="212.2" y="1669" width="0.2" height="15.0" fill="rgb(215,28,1)" rx="2" ry="2" />
<text  x="215.21" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="89.7" y="1893" width="0.2" height="15.0" fill="rgb(227,15,9)" rx="2" ry="2" />
<text  x="92.68" y="1903.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="174.9" y="1589" width="0.4" height="15.0" fill="rgb(220,47,35)" rx="2" ry="2" />
<text  x="177.86" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (96 samples, 0.48%)</title><rect x="170.8" y="1685" width="5.7" height="15.0" fill="rgb(207,177,43)" rx="2" ry="2" />
<text  x="173.78" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="104.6" y="2005" width="0.1" height="15.0" fill="rgb(227,0,29)" rx="2" ry="2" />
<text  x="107.57" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (56 samples, 0.28%)</title><rect x="161.9" y="1557" width="3.3" height="15.0" fill="rgb(242,143,11)" rx="2" ry="2" />
<text  x="164.91" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="164.2" y="1541" width="0.1" height="15.0" fill="rgb(220,57,42)" rx="2" ry="2" />
<text  x="167.22" y="1551.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="77.3" y="1141" width="0.2" height="15.0" fill="rgb(246,94,3)" rx="2" ry="2" />
<text  x="80.33" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="581" width="0.2" height="15.0" fill="rgb(239,102,23)" rx="2" ry="2" />
<text  x="1190.64" y="591.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (10 samples, 0.05%)</title><rect x="517.9" y="2005" width="0.6" height="15.0" fill="rgb(253,86,52)" rx="2" ry="2" />
<text  x="520.93" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (7 samples, 0.04%)</title><rect x="539.0" y="1893" width="0.4" height="15.0" fill="rgb(244,194,12)" rx="2" ry="2" />
<text  x="542.03" y="1903.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,880 samples, 9.42%)</title><rect x="216.8" y="1989" width="111.1" height="15.0" fill="rgb(214,189,21)" rx="2" ry="2" />
<text  x="219.82" y="1999.5" >TFastTextEmbe..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.40%)</title><rect x="176.6" y="1765" width="4.7" height="15.0" fill="rgb(244,116,44)" rx="2" ry="2" />
<text  x="179.63" y="1775.5" ></text>
</g>
<g >
<title>Summarize (2,456 samples, 12.30%)</title><rect x="189.5" y="2005" width="145.1" height="15.0" fill="rgb(245,91,10)" rx="2" ry="2" />
<text  x="192.46" y="2015.5" >Summarize</text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1861" width="0.1" height="15.0" fill="rgb(252,120,19)" rx="2" ry="2" />
<text  x="58.57" y="1871.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (14 samples, 0.07%)</title><rect x="319.0" y="1941" width="0.9" height="15.0" fill="rgb(208,24,27)" rx="2" ry="2" />
<text  x="322.02" y="1951.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.02%)</title><rect x="762.7" y="1893" width="0.2" height="15.0" fill="rgb(229,145,31)" rx="2" ry="2" />
<text  x="765.70" y="1903.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="79.9" y="1237" width="0.1" height="15.0" fill="rgb(217,193,14)" rx="2" ry="2" />
<text  x="82.93" y="1247.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="85.5" y="1621" width="0.2" height="15.0" fill="rgb(231,110,16)" rx="2" ry="2" />
<text  x="88.54" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.09%)</title><rect x="761.6" y="2021" width="1.1" height="15.0" fill="rgb(248,38,34)" rx="2" ry="2" />
<text  x="764.63" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.03%)</title><rect x="54.6" y="1909" width="0.3" height="15.0" fill="rgb(205,187,53)" rx="2" ry="2" />
<text  x="57.57" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.6" y="1877" width="0.2" height="15.0" fill="rgb(248,47,52)" rx="2" ry="2" />
<text  x="218.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="389" width="0.6" height="15.0" fill="rgb(239,23,11)" rx="2" ry="2" />
<text  x="1189.75" y="399.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.02%)</title><rect x="762.7" y="1957" width="0.2" height="15.0" fill="rgb(248,222,2)" rx="2" ry="2" />
<text  x="765.70" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (89 samples, 0.45%)</title><rect x="205.2" y="1685" width="5.3" height="15.0" fill="rgb(213,98,1)" rx="2" ry="2" />
<text  x="208.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1669" width="0.7" height="15.0" fill="rgb(248,123,37)" rx="2" ry="2" />
<text  x="1189.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="309" width="0.4" height="15.0" fill="rgb(222,144,33)" rx="2" ry="2" />
<text  x="1190.81" y="319.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="86.1" y="1653" width="0.3" height="15.0" fill="rgb(250,220,20)" rx="2" ry="2" />
<text  x="89.07" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (26 samples, 0.13%)</title><rect x="321.3" y="1941" width="1.5" height="15.0" fill="rgb(246,222,27)" rx="2" ry="2" />
<text  x="324.27" y="1951.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (2 samples, 0.01%)</title><rect x="510.8" y="1893" width="0.2" height="15.0" fill="rgb(250,40,15)" rx="2" ry="2" />
<text  x="513.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (365 samples, 1.83%)</title><rect x="160.0" y="1797" width="21.5" height="15.0" fill="rgb(254,174,20)" rx="2" ry="2" />
<text  x="162.96" y="1807.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.9" y="1749" width="0.1" height="15.0" fill="rgb(225,206,29)" rx="2" ry="2" />
<text  x="190.86" y="1759.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="122.2" y="1877" width="0.1" height="15.0" fill="rgb(209,98,17)" rx="2" ry="2" />
<text  x="125.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1141" width="0.2" height="15.0" fill="rgb(226,143,42)" rx="2" ry="2" />
<text  x="1190.64" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1429" width="0.1" height="15.0" fill="rgb(218,172,26)" rx="2" ry="2" />
<text  x="162.43" y="1439.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="162.7" y="1541" width="0.2" height="15.0" fill="rgb(234,74,21)" rx="2" ry="2" />
<text  x="165.68" y="1551.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="480.3" y="1941" width="0.2" height="15.0" fill="rgb(205,2,9)" rx="2" ry="2" />
<text  x="483.33" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (22 samples, 0.11%)</title><rect x="761.4" y="2037" width="1.3" height="15.0" fill="rgb(243,166,29)" rx="2" ry="2" />
<text  x="764.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="187.6" y="1765" width="0.3" height="15.0" fill="rgb(228,44,13)" rx="2" ry="2" />
<text  x="190.62" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="53" width="0.1" height="15.0" fill="rgb(244,118,3)" rx="2" ry="2" />
<text  x="1190.52" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1733" width="0.2" height="15.0" fill="rgb(231,191,29)" rx="2" ry="2" />
<text  x="1190.40" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="86.4" y="1605" width="0.1" height="15.0" fill="rgb(233,134,6)" rx="2" ry="2" />
<text  x="89.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1621" width="0.6" height="15.0" fill="rgb(215,111,24)" rx="2" ry="2" />
<text  x="1189.69" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (79 samples, 0.40%)</title><rect x="176.6" y="1749" width="4.7" height="15.0" fill="rgb(247,227,18)" rx="2" ry="2" />
<text  x="179.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (91 samples, 0.46%)</title><rect x="205.1" y="1701" width="5.4" height="15.0" fill="rgb(246,148,48)" rx="2" ry="2" />
<text  x="208.12" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (464 samples, 2.32%)</title><rect x="160.0" y="1845" width="27.4" height="15.0" fill="rgb(239,50,43)" rx="2" ry="2" />
<text  x="162.96" y="1855.5" >s..</text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.0" y="1333" width="0.1" height="15.0" fill="rgb(222,175,5)" rx="2" ry="2" />
<text  x="85.00" y="1343.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="144.2" y="1637" width="0.2" height="15.0" fill="rgb(243,110,40)" rx="2" ry="2" />
<text  x="147.18" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.05%)</title><rect x="1116.2" y="2037" width="0.6" height="15.0" fill="rgb(219,74,29)" rx="2" ry="2" />
<text  x="1119.23" y="2047.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="186.0" y="1653" width="0.2" height="15.0" fill="rgb(225,106,8)" rx="2" ry="2" />
<text  x="188.97" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="200.4" y="1637" width="0.2" height="15.0" fill="rgb(219,170,19)" rx="2" ry="2" />
<text  x="203.39" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="180.6" y="1621" width="0.2" height="15.0" fill="rgb(231,145,12)" rx="2" ry="2" />
<text  x="183.59" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="84.7" y="1589" width="0.4" height="15.0" fill="rgb(246,106,48)" rx="2" ry="2" />
<text  x="87.71" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (73 samples, 0.37%)</title><rect x="93.6" y="2021" width="4.4" height="15.0" fill="rgb(230,214,13)" rx="2" ry="2" />
<text  x="96.64" y="2031.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.02%)</title><rect x="1112.0" y="1957" width="0.2" height="15.0" fill="rgb(239,132,34)" rx="2" ry="2" />
<text  x="1114.98" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.1" y="1637" width="0.2" height="15.0" fill="rgb(223,23,24)" rx="2" ry="2" />
<text  x="219.11" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="85" width="0.1" height="15.0" fill="rgb(244,161,54)" rx="2" ry="2" />
<text  x="1190.52" y="95.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="500.9" y="1813" width="0.1" height="15.0" fill="rgb(245,161,54)" rx="2" ry="2" />
<text  x="503.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="325" width="0.1" height="15.0" fill="rgb(212,135,35)" rx="2" ry="2" />
<text  x="1190.52" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (22 samples, 0.11%)</title><rect x="940.0" y="1813" width="1.3" height="15.0" fill="rgb(221,172,4)" rx="2" ry="2" />
<text  x="942.97" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="194.0" y="1557" width="0.2" height="15.0" fill="rgb(250,171,14)" rx="2" ry="2" />
<text  x="197.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1717" width="0.2" height="15.0" fill="rgb(211,44,19)" rx="2" ry="2" />
<text  x="162.19" y="1727.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="654.8" y="1829" width="0.4" height="15.0" fill="rgb(241,190,28)" rx="2" ry="2" />
<text  x="657.76" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1269" width="0.1" height="15.0" fill="rgb(214,15,21)" rx="2" ry="2" />
<text  x="219.17" y="1279.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.02%)</title><rect x="145.2" y="1605" width="0.2" height="15.0" fill="rgb(206,129,14)" rx="2" ry="2" />
<text  x="148.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="597" width="0.4" height="15.0" fill="rgb(250,163,16)" rx="2" ry="2" />
<text  x="1190.81" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1029" width="0.1" height="15.0" fill="rgb(235,98,4)" rx="2" ry="2" />
<text  x="1190.52" y="1039.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (2 samples, 0.01%)</title><rect x="572.5" y="1925" width="0.1" height="15.0" fill="rgb(225,17,48)" rx="2" ry="2" />
<text  x="575.48" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (31 samples, 0.16%)</title><rect x="1101.0" y="2053" width="1.9" height="15.0" fill="rgb(212,136,33)" rx="2" ry="2" />
<text  x="1104.04" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1237" width="0.1" height="15.0" fill="rgb(206,12,40)" rx="2" ry="2" />
<text  x="219.35" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (93 samples, 0.47%)</title><rect x="133.4" y="1605" width="5.5" height="15.0" fill="rgb(235,88,45)" rx="2" ry="2" />
<text  x="136.42" y="1615.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.03%)</title><rect x="27.9" y="1925" width="0.2" height="15.0" fill="rgb(226,105,6)" rx="2" ry="2" />
<text  x="30.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1187.8" y="1669" width="0.4" height="15.0" fill="rgb(229,120,31)" rx="2" ry="2" />
<text  x="1190.75" y="1679.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="580.3" y="1861" width="0.2" height="15.0" fill="rgb(205,98,11)" rx="2" ry="2" />
<text  x="583.35" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="469" width="0.1" height="15.0" fill="rgb(220,38,42)" rx="2" ry="2" />
<text  x="1190.52" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="654.8" y="1845" width="0.4" height="15.0" fill="rgb(211,123,27)" rx="2" ry="2" />
<text  x="657.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.4" y="1109" width="0.1" height="15.0" fill="rgb(214,9,40)" rx="2" ry="2" />
<text  x="219.41" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 2.43%)</title><rect x="55.8" y="1573" width="28.6" height="15.0" fill="rgb(241,143,21)" rx="2" ry="2" />
<text  x="58.75" y="1583.5" >[u..</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="82.0" y="1173" width="0.1" height="15.0" fill="rgb(212,65,21)" rx="2" ry="2" />
<text  x="85.00" y="1183.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.02%)</title><rect x="123.9" y="1941" width="0.2" height="15.0" fill="rgb(207,223,34)" rx="2" ry="2" />
<text  x="126.90" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (95 samples, 0.48%)</title><rect x="181.5" y="1781" width="5.7" height="15.0" fill="rgb(238,93,42)" rx="2" ry="2" />
<text  x="184.54" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.3" y="1397" width="0.2" height="15.0" fill="rgb(251,104,41)" rx="2" ry="2" />
<text  x="85.35" y="1407.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="1020.9" y="2005" width="0.5" height="15.0" fill="rgb(237,77,20)" rx="2" ry="2" />
<text  x="1023.95" y="2015.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5 samples, 0.03%)</title><rect x="522.4" y="1909" width="0.3" height="15.0" fill="rgb(229,66,46)" rx="2" ry="2" />
<text  x="525.36" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1637" width="0.2" height="15.0" fill="rgb(243,203,45)" rx="2" ry="2" />
<text  x="1190.64" y="1647.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (17 samples, 0.09%)</title><rect x="761.7" y="1973" width="1.0" height="15.0" fill="rgb(219,136,13)" rx="2" ry="2" />
<text  x="764.69" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (33 samples, 0.17%)</title><rect x="1168.5" y="2021" width="2.0" height="15.0" fill="rgb(236,177,50)" rx="2" ry="2" />
<text  x="1171.54" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (5 samples, 0.03%)</title><rect x="135.3" y="1557" width="0.3" height="15.0" fill="rgb(236,228,46)" rx="2" ry="2" />
<text  x="138.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1541" width="0.1" height="15.0" fill="rgb(254,24,49)" rx="2" ry="2" />
<text  x="1190.46" y="1551.5" ></text>
</g>
<g >
<title>__do_page_fault (85 samples, 0.43%)</title><rect x="23.5" y="2005" width="5.0" height="15.0" fill="rgb(222,89,5)" rx="2" ry="2" />
<text  x="26.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1253" width="0.1" height="15.0" fill="rgb(244,219,8)" rx="2" ry="2" />
<text  x="219.17" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (81 samples, 0.41%)</title><rect x="139.0" y="1653" width="4.8" height="15.0" fill="rgb(246,181,26)" rx="2" ry="2" />
<text  x="142.04" y="1663.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="522.5" y="1877" width="0.2" height="15.0" fill="rgb(226,227,28)" rx="2" ry="2" />
<text  x="525.54" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.05%)</title><rect x="132.1" y="1829" width="0.5" height="15.0" fill="rgb(225,58,19)" rx="2" ry="2" />
<text  x="135.06" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (20 samples, 0.10%)</title><rect x="54.4" y="1957" width="1.2" height="15.0" fill="rgb(235,162,13)" rx="2" ry="2" />
<text  x="57.39" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1813" width="0.3" height="15.0" fill="rgb(239,98,18)" rx="2" ry="2" />
<text  x="162.19" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="175.9" y="1605" width="0.1" height="15.0" fill="rgb(222,9,13)" rx="2" ry="2" />
<text  x="178.86" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.76%)</title><rect x="55.8" y="933" width="20.8" height="15.0" fill="rgb(215,96,28)" rx="2" ry="2" />
<text  x="58.81" y="943.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="55.1" y="1893" width="0.1" height="15.0" fill="rgb(250,217,48)" rx="2" ry="2" />
<text  x="58.10" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (19 samples, 0.10%)</title><rect x="25.7" y="1941" width="1.1" height="15.0" fill="rgb(244,199,24)" rx="2" ry="2" />
<text  x="28.72" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1477" width="0.2" height="15.0" fill="rgb(235,18,25)" rx="2" ry="2" />
<text  x="1190.64" y="1487.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (8 samples, 0.04%)</title><rect x="1146.0" y="2037" width="0.4" height="15.0" fill="rgb(225,153,51)" rx="2" ry="2" />
<text  x="1148.96" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1429" width="0.2" height="15.0" fill="rgb(253,192,17)" rx="2" ry="2" />
<text  x="1190.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.4" y="1141" width="0.1" height="15.0" fill="rgb(241,74,16)" rx="2" ry="2" />
<text  x="219.41" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1349" width="0.4" height="15.0" fill="rgb(251,126,39)" rx="2" ry="2" />
<text  x="1190.81" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="245" width="0.1" height="15.0" fill="rgb(226,13,25)" rx="2" ry="2" />
<text  x="1190.52" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="725" width="0.4" height="15.0" fill="rgb(211,87,41)" rx="2" ry="2" />
<text  x="1190.81" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (74 samples, 0.37%)</title><rect x="166.2" y="1621" width="4.3" height="15.0" fill="rgb(246,136,21)" rx="2" ry="2" />
<text  x="169.17" y="1631.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (51 samples, 0.26%)</title><rect x="1104.9" y="2053" width="3.0" height="15.0" fill="rgb(221,71,54)" rx="2" ry="2" />
<text  x="1107.88" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen (4 samples, 0.02%)</title><rect x="1001.0" y="2053" width="0.2" height="15.0" fill="rgb(234,49,27)" rx="2" ry="2" />
<text  x="1003.97" y="2063.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="82.0" y="1253" width="0.1" height="15.0" fill="rgb(240,107,19)" rx="2" ry="2" />
<text  x="85.00" y="1263.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (17 samples, 0.09%)</title><rect x="1128.4" y="2037" width="1.0" height="15.0" fill="rgb(242,215,39)" rx="2" ry="2" />
<text  x="1131.41" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,836 samples, 19.22%)</title><rect x="526.0" y="2005" width="226.7" height="15.0" fill="rgb(242,219,27)" rx="2" ry="2" />
<text  x="528.97" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>ptep_clear_flush (44 samples, 0.22%)</title><rect x="938.9" y="1925" width="2.6" height="15.0" fill="rgb(206,70,15)" rx="2" ry="2" />
<text  x="941.90" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (12 samples, 0.06%)</title><rect x="164.3" y="1541" width="0.7" height="15.0" fill="rgb(252,118,39)" rx="2" ry="2" />
<text  x="167.33" y="1551.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="515.5" y="1973" width="0.1" height="15.0" fill="rgb(244,59,25)" rx="2" ry="2" />
<text  x="518.50" y="1983.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="208.8" y="1637" width="0.2" height="15.0" fill="rgb(218,52,53)" rx="2" ry="2" />
<text  x="211.84" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="146.4" y="1605" width="0.1" height="15.0" fill="rgb(254,60,20)" rx="2" ry="2" />
<text  x="149.37" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="500.8" y="1829" width="0.2" height="15.0" fill="rgb(243,55,34)" rx="2" ry="2" />
<text  x="503.78" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="161.7" y="1557" width="0.2" height="15.0" fill="rgb(248,146,34)" rx="2" ry="2" />
<text  x="164.73" y="1567.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="380.0" y="1925" width="0.1" height="15.0" fill="rgb(241,145,4)" rx="2" ry="2" />
<text  x="382.97" y="1935.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (27 samples, 0.14%)</title><rect x="1101.2" y="1973" width="1.6" height="15.0" fill="rgb(249,73,1)" rx="2" ry="2" />
<text  x="1104.22" y="1983.5" ></text>
</g>
<g >
<title>__interceptor_strlen (22 samples, 0.11%)</title><rect x="582.2" y="1893" width="1.3" height="15.0" fill="rgb(246,202,28)" rx="2" ry="2" />
<text  x="585.18" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1205" width="0.6" height="15.0" fill="rgb(213,207,43)" rx="2" ry="2" />
<text  x="1189.75" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1077" width="0.1" height="15.0" fill="rgb(245,77,16)" rx="2" ry="2" />
<text  x="219.17" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="229" width="0.1" height="15.0" fill="rgb(249,229,39)" rx="2" ry="2" />
<text  x="1190.52" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="681.2" y="1813" width="0.1" height="15.0" fill="rgb(243,116,4)" rx="2" ry="2" />
<text  x="684.19" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1381" width="0.4" height="15.0" fill="rgb(220,216,30)" rx="2" ry="2" />
<text  x="1190.81" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1733" width="0.2" height="15.0" fill="rgb(249,30,8)" rx="2" ry="2" />
<text  x="162.19" y="1743.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="523.0" y="1941" width="0.1" height="15.0" fill="rgb(238,3,42)" rx="2" ry="2" />
<text  x="525.95" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="215.8" y="1845" width="0.1" height="15.0" fill="rgb(211,183,52)" rx="2" ry="2" />
<text  x="218.76" y="1855.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,836 samples, 19.22%)</title><rect x="526.0" y="2021" width="226.7" height="15.0" fill="rgb(231,209,33)" rx="2" ry="2" />
<text  x="528.97" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="613" width="0.4" height="15.0" fill="rgb(219,216,21)" rx="2" ry="2" />
<text  x="1190.81" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="159.2" y="1765" width="0.3" height="15.0" fill="rgb(252,4,51)" rx="2" ry="2" />
<text  x="162.19" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.68%)</title><rect x="55.8" y="85" width="19.9" height="15.0" fill="rgb(231,163,1)" rx="2" ry="2" />
<text  x="58.81" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="917" width="0.6" height="15.0" fill="rgb(212,47,51)" rx="2" ry="2" />
<text  x="1189.75" y="927.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="678.3" y="1749" width="0.2" height="15.0" fill="rgb(205,223,29)" rx="2" ry="2" />
<text  x="681.35" y="1759.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="210.7" y="1717" width="0.2" height="15.0" fill="rgb(208,167,46)" rx="2" ry="2" />
<text  x="213.74" y="1727.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="758.6" y="1989" width="0.5" height="15.0" fill="rgb(221,224,11)" rx="2" ry="2" />
<text  x="761.62" y="1999.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="522.5" y="1845" width="0.2" height="15.0" fill="rgb(222,178,5)" rx="2" ry="2" />
<text  x="525.54" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.42%)</title><rect x="200.2" y="1701" width="4.9" height="15.0" fill="rgb(230,146,51)" rx="2" ry="2" />
<text  x="203.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1461" width="0.1" height="15.0" fill="rgb(240,126,51)" rx="2" ry="2" />
<text  x="162.25" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (3 samples, 0.02%)</title><rect x="190.6" y="1637" width="0.2" height="15.0" fill="rgb(224,134,38)" rx="2" ry="2" />
<text  x="193.64" y="1647.5" ></text>
</g>
<g >
<title>all (19,963 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,201,33)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (11 samples, 0.06%)</title><rect x="938.0" y="1925" width="0.7" height="15.0" fill="rgb(212,159,21)" rx="2" ry="2" />
<text  x="941.02" y="1935.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.01%)</title><rect x="188.7" y="1957" width="0.2" height="15.0" fill="rgb(233,69,1)" rx="2" ry="2" />
<text  x="191.75" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="210.7" y="1749" width="0.2" height="15.0" fill="rgb(232,100,15)" rx="2" ry="2" />
<text  x="213.68" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1525" width="0.2" height="15.0" fill="rgb(239,110,9)" rx="2" ry="2" />
<text  x="1190.64" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1317" width="0.6" height="15.0" fill="rgb(219,145,24)" rx="2" ry="2" />
<text  x="1189.75" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.42%)</title><rect x="152.8" y="1781" width="4.9" height="15.0" fill="rgb(209,117,45)" rx="2" ry="2" />
<text  x="155.81" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (23 samples, 0.12%)</title><rect x="319.9" y="1941" width="1.4" height="15.0" fill="rgb(236,148,33)" rx="2" ry="2" />
<text  x="322.91" y="1951.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="318.8" y="1941" width="0.1" height="15.0" fill="rgb(237,181,20)" rx="2" ry="2" />
<text  x="321.79" y="1951.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="123.1" y="1973" width="0.2" height="15.0" fill="rgb(249,180,49)" rx="2" ry="2" />
<text  x="126.14" y="1983.5" ></text>
</g>
<g >
<title>__split_vma (3 samples, 0.02%)</title><rect x="761.8" y="1893" width="0.2" height="15.0" fill="rgb(220,172,30)" rx="2" ry="2" />
<text  x="764.81" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1541" width="0.1" height="15.0" fill="rgb(248,0,28)" rx="2" ry="2" />
<text  x="162.43" y="1551.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (2 samples, 0.01%)</title><rect x="730.8" y="1893" width="0.2" height="15.0" fill="rgb(244,30,26)" rx="2" ry="2" />
<text  x="733.84" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="565" width="0.6" height="15.0" fill="rgb(241,185,30)" rx="2" ry="2" />
<text  x="1189.75" y="575.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (8 samples, 0.04%)</title><rect x="168.2" y="1573" width="0.5" height="15.0" fill="rgb(215,3,30)" rx="2" ry="2" />
<text  x="171.24" y="1583.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (52 samples, 0.26%)</title><rect x="577.4" y="1893" width="3.1" height="15.0" fill="rgb(239,98,9)" rx="2" ry="2" />
<text  x="580.39" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.68%)</title><rect x="55.8" y="69" width="19.9" height="15.0" fill="rgb(207,211,43)" rx="2" ry="2" />
<text  x="58.81" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.4" y="1893" width="0.1" height="15.0" fill="rgb(252,172,34)" rx="2" ry="2" />
<text  x="1189.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1253" width="0.4" height="15.0" fill="rgb(236,154,37)" rx="2" ry="2" />
<text  x="1190.81" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="917" width="0.4" height="15.0" fill="rgb(243,10,44)" rx="2" ry="2" />
<text  x="1190.81" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1813" width="0.7" height="15.0" fill="rgb(222,61,48)" rx="2" ry="2" />
<text  x="1189.63" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1365" width="0.2" height="15.0" fill="rgb(210,130,28)" rx="2" ry="2" />
<text  x="191.51" y="1375.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="79.9" y="1221" width="0.1" height="15.0" fill="rgb(240,26,1)" rx="2" ry="2" />
<text  x="82.93" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1186.7" y="1541" width="0.6" height="15.0" fill="rgb(230,108,43)" rx="2" ry="2" />
<text  x="1189.69" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="10.0" y="2037" width="0.1" height="15.0" fill="rgb(224,203,6)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="155.9" y="1669" width="0.5" height="15.0" fill="rgb(215,50,19)" rx="2" ry="2" />
<text  x="158.94" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.01%)</title><rect x="518.9" y="2005" width="0.1" height="15.0" fill="rgb(247,88,43)" rx="2" ry="2" />
<text  x="521.93" y="2015.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (495 samples, 2.48%)</title><rect x="159.7" y="1973" width="29.2" height="15.0" fill="rgb(219,137,19)" rx="2" ry="2" />
<text  x="162.66" y="1983.5" >TA..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="853" width="0.6" height="15.0" fill="rgb(248,162,54)" rx="2" ry="2" />
<text  x="1189.75" y="863.5" ></text>
</g>
<g >
<title>__interceptor_strlen (31 samples, 0.16%)</title><rect x="1172.0" y="2037" width="1.8" height="15.0" fill="rgb(220,79,35)" rx="2" ry="2" />
<text  x="1174.97" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1186.7" y="1605" width="0.6" height="15.0" fill="rgb(252,196,27)" rx="2" ry="2" />
<text  x="1189.69" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="453" width="0.1" height="15.0" fill="rgb(232,112,22)" rx="2" ry="2" />
<text  x="1190.52" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1189" width="0.1" height="15.0" fill="rgb(210,229,2)" rx="2" ry="2" />
<text  x="219.35" y="1199.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="198.6" y="1589" width="0.3" height="15.0" fill="rgb(224,164,25)" rx="2" ry="2" />
<text  x="201.62" y="1599.5" ></text>
</g>
<g >
<title>clear_page_erms (11 samples, 0.06%)</title><rect x="25.7" y="1925" width="0.7" height="15.0" fill="rgb(235,159,21)" rx="2" ry="2" />
<text  x="28.72" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1989" width="0.2" height="15.0" fill="rgb(231,56,48)" rx="2" ry="2" />
<text  x="1189.39" y="1999.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="168.9" y="1573" width="0.1" height="15.0" fill="rgb(224,56,19)" rx="2" ry="2" />
<text  x="171.89" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1317" width="0.2" height="15.0" fill="rgb(242,215,46)" rx="2" ry="2" />
<text  x="1190.64" y="1327.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (32 samples, 0.16%)</title><rect x="71.5" y="37" width="1.9" height="15.0" fill="rgb(212,212,15)" rx="2" ry="2" />
<text  x="74.53" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (71 samples, 0.36%)</title><rect x="211.1" y="1717" width="4.2" height="15.0" fill="rgb(254,127,12)" rx="2" ry="2" />
<text  x="214.09" y="1727.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_insert (2 samples, 0.01%)</title><rect x="1102.5" y="1893" width="0.1" height="15.0" fill="rgb(207,211,46)" rx="2" ry="2" />
<text  x="1105.46" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1413" width="0.2" height="15.0" fill="rgb(230,96,9)" rx="2" ry="2" />
<text  x="1190.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (11 samples, 0.06%)</title><rect x="216.1" y="1957" width="0.6" height="15.0" fill="rgb(210,216,53)" rx="2" ry="2" />
<text  x="219.06" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="181.3" y="1765" width="0.1" height="15.0" fill="rgb(240,85,23)" rx="2" ry="2" />
<text  x="184.30" y="1775.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.02%)</title><rect x="1112.0" y="2037" width="0.2" height="15.0" fill="rgb(229,65,43)" rx="2" ry="2" />
<text  x="1114.98" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="147.1" y="1605" width="0.3" height="15.0" fill="rgb(217,229,18)" rx="2" ry="2" />
<text  x="150.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="245" width="0.2" height="15.0" fill="rgb(231,96,4)" rx="2" ry="2" />
<text  x="1190.64" y="255.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.02%)</title><rect x="123.4" y="1989" width="0.3" height="15.0" fill="rgb(229,58,26)" rx="2" ry="2" />
<text  x="126.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1461" width="0.1" height="15.0" fill="rgb(209,193,1)" rx="2" ry="2" />
<text  x="162.43" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.15%)</title><rect x="1101.2" y="2021" width="1.7" height="15.0" fill="rgb(245,70,35)" rx="2" ry="2" />
<text  x="1104.16" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1973" width="0.6" height="15.0" fill="rgb(238,216,5)" rx="2" ry="2" />
<text  x="1190.64" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="181.8" y="1685" width="0.2" height="15.0" fill="rgb(224,27,19)" rx="2" ry="2" />
<text  x="184.83" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="30.0" y="1989" width="0.7" height="15.0" fill="rgb(239,68,54)" rx="2" ry="2" />
<text  x="33.04" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="581" width="0.1" height="15.0" fill="rgb(212,77,41)" rx="2" ry="2" />
<text  x="1190.52" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (10 samples, 0.05%)</title><rect x="759.1" y="2037" width="0.6" height="15.0" fill="rgb(223,68,0)" rx="2" ry="2" />
<text  x="762.09" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4 samples, 0.02%)</title><rect x="600.3" y="1877" width="0.2" height="15.0" fill="rgb(215,161,49)" rx="2" ry="2" />
<text  x="603.27" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="93.3" y="2021" width="0.2" height="15.0" fill="rgb(233,219,25)" rx="2" ry="2" />
<text  x="96.29" y="2031.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.02%)</title><rect x="1112.0" y="1973" width="0.2" height="15.0" fill="rgb(237,200,16)" rx="2" ry="2" />
<text  x="1114.98" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (3 samples, 0.02%)</title><rect x="937.7" y="1925" width="0.1" height="15.0" fill="rgb(206,200,21)" rx="2" ry="2" />
<text  x="940.66" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="677" width="20.4" height="15.0" fill="rgb(237,94,36)" rx="2" ry="2" />
<text  x="58.81" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="610.1" y="1861" width="0.1" height="15.0" fill="rgb(238,95,12)" rx="2" ry="2" />
<text  x="613.08" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="1021.3" y="1941" width="0.1" height="15.0" fill="rgb(249,20,53)" rx="2" ry="2" />
<text  x="1024.30" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="517.5" y="1989" width="0.1" height="15.0" fill="rgb(245,61,31)" rx="2" ry="2" />
<text  x="520.51" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="373" width="0.1" height="15.0" fill="rgb(221,71,13)" rx="2" ry="2" />
<text  x="1190.52" y="383.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="678.7" y="1733" width="0.2" height="15.0" fill="rgb(240,39,45)" rx="2" ry="2" />
<text  x="681.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="949" width="0.2" height="15.0" fill="rgb(235,207,15)" rx="2" ry="2" />
<text  x="1190.64" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="517" width="0.6" height="15.0" fill="rgb(206,71,47)" rx="2" ry="2" />
<text  x="1189.75" y="527.5" ></text>
</g>
<g >
<title>__asan_memcpy (14 samples, 0.07%)</title><rect x="619.4" y="1845" width="0.8" height="15.0" fill="rgb(214,213,31)" rx="2" ry="2" />
<text  x="622.36" y="1855.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="751.9" y="1957" width="0.2" height="15.0" fill="rgb(241,119,12)" rx="2" ry="2" />
<text  x="754.88" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="141.5" y="1589" width="0.3" height="15.0" fill="rgb(233,87,13)" rx="2" ry="2" />
<text  x="144.52" y="1599.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="209.5" y="1637" width="0.3" height="15.0" fill="rgb(227,5,36)" rx="2" ry="2" />
<text  x="212.49" y="1647.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1099.1" y="2005" width="0.2" height="15.0" fill="rgb(251,150,51)" rx="2" ry="2" />
<text  x="1102.09" y="2015.5" ></text>
</g>
<g >
<title>find_get_entry (2 samples, 0.01%)</title><rect x="122.3" y="1861" width="0.1" height="15.0" fill="rgb(239,96,48)" rx="2" ry="2" />
<text  x="125.31" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.39%)</title><rect x="165.9" y="1685" width="4.6" height="15.0" fill="rgb(228,173,28)" rx="2" ry="2" />
<text  x="168.93" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="88.8" y="1861" width="0.2" height="15.0" fill="rgb(231,217,7)" rx="2" ry="2" />
<text  x="91.79" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1381" width="0.1" height="15.0" fill="rgb(243,94,43)" rx="2" ry="2" />
<text  x="85.00" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="309" width="0.2" height="15.0" fill="rgb(225,23,39)" rx="2" ry="2" />
<text  x="1190.64" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (82 samples, 0.41%)</title><rect x="200.2" y="1653" width="4.9" height="15.0" fill="rgb(219,139,25)" rx="2" ry="2" />
<text  x="203.21" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1413" width="0.1" height="15.0" fill="rgb(239,150,25)" rx="2" ry="2" />
<text  x="219.35" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="885" width="0.4" height="15.0" fill="rgb(231,144,31)" rx="2" ry="2" />
<text  x="1190.81" y="895.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="193.7" y="1557" width="0.3" height="15.0" fill="rgb(215,69,40)" rx="2" ry="2" />
<text  x="196.65" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1333" width="0.1" height="15.0" fill="rgb(254,25,4)" rx="2" ry="2" />
<text  x="162.43" y="1343.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="174.1" y="1589" width="0.1" height="15.0" fill="rgb(229,93,20)" rx="2" ry="2" />
<text  x="177.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="2021" width="0.3" height="15.0" fill="rgb(234,7,17)" rx="2" ry="2" />
<text  x="1190.28" y="2031.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (2 samples, 0.01%)</title><rect x="581.4" y="1893" width="0.1" height="15.0" fill="rgb(213,167,7)" rx="2" ry="2" />
<text  x="584.41" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="1103.7" y="2037" width="0.4" height="15.0" fill="rgb(221,66,29)" rx="2" ry="2" />
<text  x="1106.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (464 samples, 2.32%)</title><rect x="160.0" y="1829" width="27.4" height="15.0" fill="rgb(205,41,54)" rx="2" ry="2" />
<text  x="162.96" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="613" width="0.6" height="15.0" fill="rgb(233,16,33)" rx="2" ry="2" />
<text  x="1189.75" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.34%)</title><rect x="195.5" y="1621" width="4.0" height="15.0" fill="rgb(214,222,31)" rx="2" ry="2" />
<text  x="198.54" y="1631.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="54.9" y="1893" width="0.1" height="15.0" fill="rgb(233,54,53)" rx="2" ry="2" />
<text  x="57.86" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="334.7" y="1989" width="0.3" height="15.0" fill="rgb(231,38,31)" rx="2" ry="2" />
<text  x="337.69" y="1999.5" ></text>
</g>
<g >
<title>tgnews (19,963 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(245,165,19)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>ComputeClusterWeight (953 samples, 4.77%)</title><rect x="132.7" y="1989" width="56.3" height="15.0" fill="rgb(217,47,46)" rx="2" ry="2" />
<text  x="135.71" y="1999.5" >Compu..</text>
</g>
<g >
<title>fasttext::Vector::zero (10 samples, 0.05%)</title><rect x="327.2" y="1973" width="0.6" height="15.0" fill="rgb(251,24,38)" rx="2" ry="2" />
<text  x="330.18" y="1983.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,593 samples, 7.98%)</title><rect x="635.8" y="1893" width="94.2" height="15.0" fill="rgb(232,30,32)" rx="2" ry="2" />
<text  x="638.79" y="1903.5" >onmt::Token..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="176.5" y="1685" width="0.1" height="15.0" fill="rgb(238,164,28)" rx="2" ry="2" />
<text  x="179.45" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (6 samples, 0.03%)</title><rect x="517.1" y="2005" width="0.4" height="15.0" fill="rgb(215,168,30)" rx="2" ry="2" />
<text  x="520.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.5" y="1765" width="0.1" height="15.0" fill="rgb(205,143,40)" rx="2" ry="2" />
<text  x="218.46" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1445" width="0.1" height="15.0" fill="rgb(243,37,11)" rx="2" ry="2" />
<text  x="162.43" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1317" width="0.4" height="15.0" fill="rgb(207,75,5)" rx="2" ry="2" />
<text  x="1190.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1301" width="0.1" height="15.0" fill="rgb(228,127,12)" rx="2" ry="2" />
<text  x="162.43" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="645" width="0.6" height="15.0" fill="rgb(221,160,23)" rx="2" ry="2" />
<text  x="1189.75" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (68 samples, 0.34%)</title><rect x="190.9" y="1637" width="4.0" height="15.0" fill="rgb(240,26,15)" rx="2" ry="2" />
<text  x="193.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="949" width="0.6" height="15.0" fill="rgb(226,199,23)" rx="2" ry="2" />
<text  x="1189.75" y="959.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (3,068 samples, 15.37%)</title><rect x="335.2" y="2005" width="181.4" height="15.0" fill="rgb(224,122,42)" rx="2" ry="2" />
<text  x="338.22" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1237" width="0.1" height="15.0" fill="rgb(220,228,12)" rx="2" ry="2" />
<text  x="162.43" y="1247.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (126 samples, 0.63%)</title><rect x="104.7" y="2037" width="7.4" height="15.0" fill="rgb(251,47,5)" rx="2" ry="2" />
<text  x="107.69" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1221" width="0.4" height="15.0" fill="rgb(206,118,9)" rx="2" ry="2" />
<text  x="1190.81" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="853" width="20.5" height="15.0" fill="rgb(206,145,18)" rx="2" ry="2" />
<text  x="58.81" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.3" y="1845" width="0.4" height="15.0" fill="rgb(239,174,7)" rx="2" ry="2" />
<text  x="191.33" y="1855.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (9 samples, 0.05%)</title><rect x="516.6" y="1989" width="0.5" height="15.0" fill="rgb(224,23,29)" rx="2" ry="2" />
<text  x="519.57" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (4 samples, 0.02%)</title><rect x="1147.4" y="2053" width="0.3" height="15.0" fill="rgb(207,151,18)" rx="2" ry="2" />
<text  x="1150.44" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.5" y="1781" width="0.1" height="15.0" fill="rgb(228,124,45)" rx="2" ry="2" />
<text  x="218.46" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="159.2" y="1637" width="0.2" height="15.0" fill="rgb(206,173,33)" rx="2" ry="2" />
<text  x="162.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="1621" width="0.4" height="15.0" fill="rgb(210,13,45)" rx="2" ry="2" />
<text  x="1190.81" y="1631.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="869.9" y="2021" width="0.1" height="15.0" fill="rgb(214,147,40)" rx="2" ry="2" />
<text  x="872.86" y="2031.5" ></text>
</g>
<g >
<title>memcpy (6 samples, 0.03%)</title><rect x="1124.4" y="2037" width="0.3" height="15.0" fill="rgb(234,163,38)" rx="2" ry="2" />
<text  x="1127.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="421" width="0.1" height="15.0" fill="rgb(216,9,16)" rx="2" ry="2" />
<text  x="1190.52" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="187.2" y="1813" width="0.1" height="15.0" fill="rgb(230,55,21)" rx="2" ry="2" />
<text  x="190.15" y="1823.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="651.0" y="1813" width="0.4" height="15.0" fill="rgb(213,224,26)" rx="2" ry="2" />
<text  x="653.98" y="1823.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (8 samples, 0.04%)</title><rect x="45.3" y="2037" width="0.5" height="15.0" fill="rgb(216,12,42)" rx="2" ry="2" />
<text  x="48.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1365" width="0.1" height="15.0" fill="rgb(238,87,17)" rx="2" ry="2" />
<text  x="219.35" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="773" width="0.4" height="15.0" fill="rgb(224,56,35)" rx="2" ry="2" />
<text  x="1190.81" y="783.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="172.2" y="1605" width="0.3" height="15.0" fill="rgb(209,207,27)" rx="2" ry="2" />
<text  x="175.20" y="1615.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="180.2" y="1621" width="0.1" height="15.0" fill="rgb(233,94,29)" rx="2" ry="2" />
<text  x="183.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1205" width="0.4" height="15.0" fill="rgb(215,1,32)" rx="2" ry="2" />
<text  x="1190.81" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1925" width="0.6" height="15.0" fill="rgb(207,177,16)" rx="2" ry="2" />
<text  x="1190.64" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (16 samples, 0.08%)</title><rect x="798.9" y="2037" width="0.9" height="15.0" fill="rgb(244,43,46)" rx="2" ry="2" />
<text  x="801.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="1253" width="0.6" height="15.0" fill="rgb(241,143,13)" rx="2" ry="2" />
<text  x="1189.75" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (26 samples, 0.13%)</title><rect x="870.6" y="2037" width="1.6" height="15.0" fill="rgb(218,49,4)" rx="2" ry="2" />
<text  x="873.63" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="322.8" y="1941" width="0.1" height="15.0" fill="rgb(248,102,27)" rx="2" ry="2" />
<text  x="325.81" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="580.3" y="1845" width="0.2" height="15.0" fill="rgb(227,217,9)" rx="2" ry="2" />
<text  x="583.35" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="78.2" y="1221" width="0.2" height="15.0" fill="rgb(236,75,28)" rx="2" ry="2" />
<text  x="81.15" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="165" width="0.1" height="15.0" fill="rgb(237,45,32)" rx="2" ry="2" />
<text  x="1190.52" y="175.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="357" width="20.1" height="15.0" fill="rgb(212,109,8)" rx="2" ry="2" />
<text  x="58.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (429 samples, 2.15%)</title><rect x="190.3" y="1877" width="25.3" height="15.0" fill="rgb(207,197,8)" rx="2" ry="2" />
<text  x="193.28" y="1887.5" >s..</text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (50 samples, 0.25%)</title><rect x="126.1" y="1925" width="3.0" height="15.0" fill="rgb(243,127,36)" rx="2" ry="2" />
<text  x="129.15" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (4 samples, 0.02%)</title><rect x="29.5" y="2021" width="0.2" height="15.0" fill="rgb(226,14,10)" rx="2" ry="2" />
<text  x="32.51" y="2031.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.19%)</title><rect x="610.4" y="1861" width="2.2" height="15.0" fill="rgb(210,120,52)" rx="2" ry="2" />
<text  x="613.43" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (426 samples, 2.13%)</title><rect x="55.8" y="1381" width="25.2" height="15.0" fill="rgb(236,166,43)" rx="2" ry="2" />
<text  x="58.81" y="1391.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1653" width="0.2" height="15.0" fill="rgb(234,68,37)" rx="2" ry="2" />
<text  x="162.19" y="1663.5" ></text>
</g>
<g >
<title>TDocument::TDocument (11 samples, 0.06%)</title><rect x="751.8" y="1973" width="0.6" height="15.0" fill="rgb(233,157,54)" rx="2" ry="2" />
<text  x="754.76" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.1" y="1685" width="0.2" height="15.0" fill="rgb(226,211,45)" rx="2" ry="2" />
<text  x="219.11" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (8 samples, 0.04%)</title><rect x="730.4" y="1893" width="0.4" height="15.0" fill="rgb(214,61,22)" rx="2" ry="2" />
<text  x="733.37" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1493" width="0.1" height="15.0" fill="rgb(208,24,54)" rx="2" ry="2" />
<text  x="219.35" y="1503.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (3 samples, 0.02%)</title><rect x="997.8" y="2053" width="0.2" height="15.0" fill="rgb(213,4,36)" rx="2" ry="2" />
<text  x="1000.78" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="76.7" y="1029" width="0.1" height="15.0" fill="rgb(246,202,46)" rx="2" ry="2" />
<text  x="79.68" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.38%)</title><rect x="148.0" y="1685" width="4.5" height="15.0" fill="rgb(206,69,46)" rx="2" ry="2" />
<text  x="150.96" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1093" width="0.1" height="15.0" fill="rgb(233,109,6)" rx="2" ry="2" />
<text  x="219.17" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="373" width="0.4" height="15.0" fill="rgb(226,85,23)" rx="2" ry="2" />
<text  x="1190.81" y="383.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="752.1" y="1957" width="0.2" height="15.0" fill="rgb(213,123,39)" rx="2" ry="2" />
<text  x="755.12" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (5 samples, 0.03%)</title><rect x="753.7" y="2037" width="0.3" height="15.0" fill="rgb(252,75,9)" rx="2" ry="2" />
<text  x="756.65" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strlen (84 samples, 0.42%)</title><rect x="743.7" y="1877" width="5.0" height="15.0" fill="rgb(212,118,25)" rx="2" ry="2" />
<text  x="746.72" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.03%)</title><rect x="764.1" y="2021" width="0.3" height="15.0" fill="rgb(244,225,32)" rx="2" ry="2" />
<text  x="767.06" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="80.0" y="1317" width="0.2" height="15.0" fill="rgb(239,228,43)" rx="2" ry="2" />
<text  x="83.04" y="1327.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="690.6" y="1749" width="0.6" height="15.0" fill="rgb(239,51,42)" rx="2" ry="2" />
<text  x="693.59" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (65 samples, 0.33%)</title><rect x="143.9" y="1717" width="3.9" height="15.0" fill="rgb(207,134,1)" rx="2" ry="2" />
<text  x="146.94" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (76 samples, 0.38%)</title><rect x="171.5" y="1621" width="4.5" height="15.0" fill="rgb(213,148,20)" rx="2" ry="2" />
<text  x="174.55" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (123 samples, 0.62%)</title><rect x="1001.7" y="2053" width="7.2" height="15.0" fill="rgb(236,68,3)" rx="2" ry="2" />
<text  x="1004.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 0.83%)</title><rect x="190.4" y="1765" width="9.8" height="15.0" fill="rgb(212,196,8)" rx="2" ry="2" />
<text  x="193.40" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1221" width="0.2" height="15.0" fill="rgb(235,102,44)" rx="2" ry="2" />
<text  x="1190.64" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (560 samples, 2.81%)</title><rect x="55.7" y="1861" width="33.1" height="15.0" fill="rgb(245,149,27)" rx="2" ry="2" />
<text  x="58.69" y="1871.5" >[u..</text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="1122.9" y="2037" width="0.1" height="15.0" fill="rgb(207,128,31)" rx="2" ry="2" />
<text  x="1125.85" y="2047.5" ></text>
</g>
<g >
<title>ptep_clear_flush (4 samples, 0.02%)</title><rect x="55.2" y="1909" width="0.3" height="15.0" fill="rgb(252,205,1)" rx="2" ry="2" />
<text  x="58.22" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="565" width="0.2" height="15.0" fill="rgb(231,58,27)" rx="2" ry="2" />
<text  x="1190.64" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1605" width="0.2" height="15.0" fill="rgb(250,57,18)" rx="2" ry="2" />
<text  x="219.11" y="1615.5" ></text>
</g>
<g >
<title>operator delete[] (65 samples, 0.33%)</title><rect x="1179.7" y="2037" width="3.8" height="15.0" fill="rgb(228,109,34)" rx="2" ry="2" />
<text  x="1182.66" y="2047.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="26.9" y="1925" width="0.1" height="15.0" fill="rgb(207,115,17)" rx="2" ry="2" />
<text  x="29.91" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Refill (2 samples, 0.01%)</title><rect x="1021.4" y="2053" width="0.1" height="15.0" fill="rgb(223,163,20)" rx="2" ry="2" />
<text  x="1024.42" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1957" width="0.7" height="15.0" fill="rgb(232,0,26)" rx="2" ry="2" />
<text  x="1189.63" y="1967.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (10 samples, 0.05%)</title><rect x="515.7" y="1973" width="0.6" height="15.0" fill="rgb(250,190,23)" rx="2" ry="2" />
<text  x="518.74" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::contains&lt;char const  (2 samples, 0.01%)</title><rect x="122.9" y="1957" width="0.1" height="15.0" fill="rgb(244,4,6)" rx="2" ry="2" />
<text  x="125.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1077" width="0.6" height="15.0" fill="rgb(232,20,43)" rx="2" ry="2" />
<text  x="1189.75" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="1013" width="0.1" height="15.0" fill="rgb(223,35,15)" rx="2" ry="2" />
<text  x="1190.52" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.5" y="1589" width="0.1" height="15.0" fill="rgb(250,160,31)" rx="2" ry="2" />
<text  x="1190.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="2005" width="0.3" height="15.0" fill="rgb(254,193,39)" rx="2" ry="2" />
<text  x="1190.28" y="2015.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (9 samples, 0.05%)</title><rect x="522.4" y="1957" width="0.5" height="15.0" fill="rgb(214,27,51)" rx="2" ry="2" />
<text  x="525.36" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1509" width="0.1" height="15.0" fill="rgb(226,171,39)" rx="2" ry="2" />
<text  x="162.43" y="1519.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (34 samples, 0.17%)</title><rect x="331.2" y="1989" width="2.0" height="15.0" fill="rgb(223,29,46)" rx="2" ry="2" />
<text  x="334.20" y="1999.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (3 samples, 0.02%)</title><rect x="576.9" y="1893" width="0.2" height="15.0" fill="rgb(246,126,7)" rx="2" ry="2" />
<text  x="579.92" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="215.8" y="1829" width="0.1" height="15.0" fill="rgb(236,5,11)" rx="2" ry="2" />
<text  x="218.76" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="197.9" y="1589" width="0.2" height="15.0" fill="rgb(253,2,54)" rx="2" ry="2" />
<text  x="200.91" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="809.2" y="2021" width="0.3" height="15.0" fill="rgb(254,18,38)" rx="2" ry="2" />
<text  x="812.22" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (355 samples, 1.78%)</title><rect x="55.8" y="1045" width="21.0" height="15.0" fill="rgb(221,3,20)" rx="2" ry="2" />
<text  x="58.81" y="1055.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (846 samples, 4.24%)</title><rect x="817.3" y="2005" width="50.0" height="15.0" fill="rgb(210,215,44)" rx="2" ry="2" />
<text  x="820.32" y="2015.5" >__san..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.27%)</title><rect x="183.6" y="1669" width="3.1" height="15.0" fill="rgb(219,138,17)" rx="2" ry="2" />
<text  x="186.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (460 samples, 2.30%)</title><rect x="160.0" y="1813" width="27.2" height="15.0" fill="rgb(246,168,4)" rx="2" ry="2" />
<text  x="162.96" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="981" width="0.2" height="15.0" fill="rgb(220,216,53)" rx="2" ry="2" />
<text  x="1190.64" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="153.0" y="1701" width="0.2" height="15.0" fill="rgb(239,148,12)" rx="2" ry="2" />
<text  x="156.04" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="2053" width="0.6" height="15.0" fill="rgb(247,136,43)" rx="2" ry="2" />
<text  x="1190.64" y="2063.5" ></text>
</g>
<g >
<title>exit_mmap (8 samples, 0.04%)</title><rect x="1103.1" y="1957" width="0.5" height="15.0" fill="rgb(221,215,47)" rx="2" ry="2" />
<text  x="1106.11" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="872.2" y="2021" width="0.2" height="15.0" fill="rgb(249,73,23)" rx="2" ry="2" />
<text  x="875.23" y="2031.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="762.8" y="1877" width="0.1" height="15.0" fill="rgb(214,191,17)" rx="2" ry="2" />
<text  x="765.76" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="511.1" y="1957" width="0.1" height="15.0" fill="rgb(208,6,1)" rx="2" ry="2" />
<text  x="514.07" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="179.4" y="1621" width="0.1" height="15.0" fill="rgb(222,128,4)" rx="2" ry="2" />
<text  x="182.41" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (8 samples, 0.04%)</title><rect x="1178.6" y="2037" width="0.5" height="15.0" fill="rgb(215,146,39)" rx="2" ry="2" />
<text  x="1181.59" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (72 samples, 0.36%)</title><rect x="739.5" y="1877" width="4.2" height="15.0" fill="rgb(240,166,17)" rx="2" ry="2" />
<text  x="742.47" y="1887.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="758.7" y="1925" width="0.2" height="15.0" fill="rgb(247,166,9)" rx="2" ry="2" />
<text  x="761.68" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (80 samples, 0.40%)</title><rect x="147.8" y="1765" width="4.8" height="15.0" fill="rgb(220,20,11)" rx="2" ry="2" />
<text  x="150.84" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.71%)</title><rect x="55.8" y="405" width="20.2" height="15.0" fill="rgb(246,163,21)" rx="2" ry="2" />
<text  x="58.81" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="148.2" y="1669" width="0.4" height="15.0" fill="rgb(249,78,13)" rx="2" ry="2" />
<text  x="151.20" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="151.7" y="1637" width="0.4" height="15.0" fill="rgb(227,107,46)" rx="2" ry="2" />
<text  x="154.69" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="309" width="20.1" height="15.0" fill="rgb(245,67,29)" rx="2" ry="2" />
<text  x="58.81" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (361 samples, 1.81%)</title><rect x="160.0" y="1781" width="21.3" height="15.0" fill="rgb(222,157,9)" rx="2" ry="2" />
<text  x="162.96" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="159.2" y="1605" width="0.2" height="15.0" fill="rgb(220,112,25)" rx="2" ry="2" />
<text  x="162.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1669" width="0.2" height="15.0" fill="rgb(214,69,22)" rx="2" ry="2" />
<text  x="191.51" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="133" width="0.4" height="15.0" fill="rgb(241,77,2)" rx="2" ry="2" />
<text  x="1190.81" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="437" width="0.6" height="15.0" fill="rgb(243,153,27)" rx="2" ry="2" />
<text  x="1189.75" y="447.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.73%)</title><rect x="55.8" y="805" width="20.5" height="15.0" fill="rgb(214,156,46)" rx="2" ry="2" />
<text  x="58.81" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="981" width="0.4" height="15.0" fill="rgb(233,57,27)" rx="2" ry="2" />
<text  x="1190.81" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1301" width="0.2" height="15.0" fill="rgb(243,189,4)" rx="2" ry="2" />
<text  x="191.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.6" y="1125" width="0.2" height="15.0" fill="rgb(247,55,44)" rx="2" ry="2" />
<text  x="1190.64" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1187.6" y="1765" width="0.6" height="15.0" fill="rgb(209,78,25)" rx="2" ry="2" />
<text  x="1190.64" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1125" width="0.6" height="15.0" fill="rgb(229,27,49)" rx="2" ry="2" />
<text  x="1189.75" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="389" width="0.2" height="15.0" fill="rgb(210,78,51)" rx="2" ry="2" />
<text  x="1190.64" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.1" y="1557" width="0.2" height="15.0" fill="rgb(207,117,49)" rx="2" ry="2" />
<text  x="219.11" y="1567.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.08%)</title><rect x="633.7" y="1877" width="0.9" height="15.0" fill="rgb(252,61,5)" rx="2" ry="2" />
<text  x="636.66" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1112.0" y="2005" width="0.2" height="15.0" fill="rgb(243,189,13)" rx="2" ry="2" />
<text  x="1114.98" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (2 samples, 0.01%)</title><rect x="513.6" y="1973" width="0.1" height="15.0" fill="rgb(214,184,20)" rx="2" ry="2" />
<text  x="516.55" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (83 samples, 0.42%)</title><rect x="152.8" y="1749" width="4.9" height="15.0" fill="rgb(238,79,49)" rx="2" ry="2" />
<text  x="155.81" y="1759.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.06%)</title><rect x="132.0" y="1893" width="0.7" height="15.0" fill="rgb(210,94,49)" rx="2" ry="2" />
<text  x="135.00" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="229" width="0.4" height="15.0" fill="rgb(249,137,39)" rx="2" ry="2" />
<text  x="1190.81" y="239.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (4 samples, 0.02%)</title><rect x="1016.9" y="2053" width="0.2" height="15.0" fill="rgb(227,90,21)" rx="2" ry="2" />
<text  x="1019.87" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (2 samples, 0.01%)</title><rect x="1008.9" y="2053" width="0.2" height="15.0" fill="rgb(231,19,53)" rx="2" ry="2" />
<text  x="1011.95" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.46%)</title><rect x="205.1" y="1733" width="5.4" height="15.0" fill="rgb(246,165,11)" rx="2" ry="2" />
<text  x="208.12" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="181.3" y="1733" width="0.1" height="15.0" fill="rgb(234,64,3)" rx="2" ry="2" />
<text  x="184.30" y="1743.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="149.9" y="1637" width="0.2" height="15.0" fill="rgb(216,126,6)" rx="2" ry="2" />
<text  x="152.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="341" width="0.4" height="15.0" fill="rgb(229,213,38)" rx="2" ry="2" />
<text  x="1190.81" y="351.5" ></text>
</g>
<g >
<title>__do_munmap (8 samples, 0.04%)</title><rect x="1101.6" y="1925" width="0.5" height="15.0" fill="rgb(238,211,25)" rx="2" ry="2" />
<text  x="1104.63" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="1123.3" y="2037" width="0.1" height="15.0" fill="rgb(231,204,2)" rx="2" ry="2" />
<text  x="1126.27" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.4" y="1397" width="0.1" height="15.0" fill="rgb(236,64,41)" rx="2" ry="2" />
<text  x="219.35" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="312.5" y="1909" width="0.1" height="15.0" fill="rgb(241,42,53)" rx="2" ry="2" />
<text  x="315.52" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.68%)</title><rect x="55.8" y="53" width="19.9" height="15.0" fill="rgb(245,181,20)" rx="2" ry="2" />
<text  x="58.81" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="91.6" y="1989" width="0.1" height="15.0" fill="rgb(253,201,45)" rx="2" ry="2" />
<text  x="94.57" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="277" width="0.1" height="15.0" fill="rgb(239,65,10)" rx="2" ry="2" />
<text  x="1190.52" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="82.0" y="1189" width="0.1" height="15.0" fill="rgb(244,70,53)" rx="2" ry="2" />
<text  x="85.00" y="1199.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (63 samples, 0.32%)</title><rect x="799.8" y="2037" width="3.7" height="15.0" fill="rgb(216,121,9)" rx="2" ry="2" />
<text  x="802.82" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (21 samples, 0.11%)</title><rect x="538.3" y="1909" width="1.3" height="15.0" fill="rgb(244,46,30)" rx="2" ry="2" />
<text  x="541.32" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="187.4" y="1813" width="0.5" height="15.0" fill="rgb(245,171,45)" rx="2" ry="2" />
<text  x="190.45" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1445" width="0.1" height="15.0" fill="rgb(232,149,22)" rx="2" ry="2" />
<text  x="219.17" y="1455.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (3 samples, 0.02%)</title><rect x="731.0" y="1893" width="0.2" height="15.0" fill="rgb(245,193,47)" rx="2" ry="2" />
<text  x="734.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.4" y="1221" width="0.1" height="15.0" fill="rgb(229,166,39)" rx="2" ry="2" />
<text  x="219.35" y="1231.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (11 samples, 0.06%)</title><rect x="623.1" y="1877" width="0.7" height="15.0" fill="rgb(231,216,9)" rx="2" ry="2" />
<text  x="626.14" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="153.9" y="1685" width="0.2" height="15.0" fill="rgb(230,149,19)" rx="2" ry="2" />
<text  x="156.93" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="189.1" y="1989" width="0.1" height="15.0" fill="rgb(220,166,7)" rx="2" ry="2" />
<text  x="192.10" y="1999.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.01%)</title><rect x="936.2" y="1957" width="0.2" height="15.0" fill="rgb(224,214,49)" rx="2" ry="2" />
<text  x="939.24" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="312.5" y="1957" width="0.1" height="15.0" fill="rgb(252,99,5)" rx="2" ry="2" />
<text  x="315.52" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (550 samples, 2.76%)</title><rect x="55.7" y="1813" width="32.5" height="15.0" fill="rgb(225,34,2)" rx="2" ry="2" />
<text  x="58.69" y="1823.5" >[u..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="85.4" y="1573" width="0.1" height="15.0" fill="rgb(226,92,16)" rx="2" ry="2" />
<text  x="88.36" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="809.6" y="2005" width="0.1" height="15.0" fill="rgb(229,171,28)" rx="2" ry="2" />
<text  x="812.63" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="216.1" y="1749" width="0.4" height="15.0" fill="rgb(254,166,32)" rx="2" ry="2" />
<text  x="219.11" y="1759.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="154.8" y="1669" width="0.1" height="15.0" fill="rgb(237,11,13)" rx="2" ry="2" />
<text  x="157.76" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1701" width="0.6" height="15.0" fill="rgb(229,16,9)" rx="2" ry="2" />
<text  x="1190.64" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (132 samples, 0.66%)</title><rect x="1009.1" y="2053" width="7.8" height="15.0" fill="rgb(249,161,1)" rx="2" ry="2" />
<text  x="1012.07" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="277" width="0.6" height="15.0" fill="rgb(226,158,39)" rx="2" ry="2" />
<text  x="1189.75" y="287.5" ></text>
</g>
<g >
<title>__strxfrm_l (3 samples, 0.02%)</title><rect x="1179.5" y="2037" width="0.2" height="15.0" fill="rgb(225,216,18)" rx="2" ry="2" />
<text  x="1182.48" y="2047.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="1103.3" y="1845" width="0.2" height="15.0" fill="rgb(225,216,11)" rx="2" ry="2" />
<text  x="1106.35" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1365" width="0.1" height="15.0" fill="rgb(208,144,2)" rx="2" ry="2" />
<text  x="162.43" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.69%)</title><rect x="55.8" y="117" width="20.0" height="15.0" fill="rgb(234,130,22)" rx="2" ry="2" />
<text  x="58.81" y="127.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (9 samples, 0.05%)</title><rect x="1153.7" y="2037" width="0.5" height="15.0" fill="rgb(252,103,9)" rx="2" ry="2" />
<text  x="1156.71" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.02%)</title><rect x="215.8" y="1877" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="218.76" y="1887.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="518.8" y="1925" width="0.1" height="15.0" fill="rgb(209,50,37)" rx="2" ry="2" />
<text  x="521.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="761.2" y="2021" width="0.2" height="15.0" fill="rgb(226,186,36)" rx="2" ry="2" />
<text  x="764.16" y="2031.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (2 samples, 0.01%)</title><rect x="521.4" y="2037" width="0.1" height="15.0" fill="rgb(252,138,12)" rx="2" ry="2" />
<text  x="524.41" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strlen (5 samples, 0.03%)</title><rect x="574.1" y="1925" width="0.3" height="15.0" fill="rgb(212,117,48)" rx="2" ry="2" />
<text  x="577.14" y="1935.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="82.0" y="1205" width="0.1" height="15.0" fill="rgb(224,152,51)" rx="2" ry="2" />
<text  x="85.00" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="517" width="0.4" height="15.0" fill="rgb(239,143,34)" rx="2" ry="2" />
<text  x="1190.81" y="527.5" ></text>
</g>
<g >
<title>zap_page_range (12 samples, 0.06%)</title><rect x="522.4" y="1973" width="0.7" height="15.0" fill="rgb(237,186,34)" rx="2" ry="2" />
<text  x="525.36" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="167.1" y="1589" width="0.1" height="15.0" fill="rgb(236,124,28)" rx="2" ry="2" />
<text  x="170.05" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1125" width="0.1" height="15.0" fill="rgb(242,182,37)" rx="2" ry="2" />
<text  x="1190.52" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_of (2 samples, 0.01%)</title><rect x="1147.3" y="2053" width="0.1" height="15.0" fill="rgb(237,170,14)" rx="2" ry="2" />
<text  x="1150.32" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="148.9" y="1653" width="0.2" height="15.0" fill="rgb(245,187,17)" rx="2" ry="2" />
<text  x="151.91" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (12 samples, 0.06%)</title><rect x="187.4" y="1861" width="0.8" height="15.0" fill="rgb(231,168,42)" rx="2" ry="2" />
<text  x="190.45" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="677" width="0.1" height="15.0" fill="rgb(231,34,34)" rx="2" ry="2" />
<text  x="1190.52" y="687.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="176.1" y="1621" width="0.2" height="15.0" fill="rgb(227,195,30)" rx="2" ry="2" />
<text  x="179.10" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1797" width="0.2" height="15.0" fill="rgb(237,17,30)" rx="2" ry="2" />
<text  x="1190.40" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="210.7" y="1701" width="0.2" height="15.0" fill="rgb(241,134,54)" rx="2" ry="2" />
<text  x="213.74" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="81.2" y="1397" width="0.2" height="15.0" fill="rgb(232,34,50)" rx="2" ry="2" />
<text  x="84.17" y="1407.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="86.4" y="1589" width="0.1" height="15.0" fill="rgb(232,86,35)" rx="2" ry="2" />
<text  x="89.37" y="1599.5" ></text>
</g>
<g >
<title>perf_event_mmap (4 samples, 0.02%)</title><rect x="1102.2" y="1925" width="0.2" height="15.0" fill="rgb(219,130,7)" rx="2" ry="2" />
<text  x="1105.16" y="1935.5" ></text>
</g>
<g >
<title>operator new[] (49 samples, 0.25%)</title><rect x="1183.5" y="2037" width="2.9" height="15.0" fill="rgb(219,164,21)" rx="2" ry="2" />
<text  x="1186.50" y="2047.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (6 samples, 0.03%)</title><rect x="27.5" y="1925" width="0.4" height="15.0" fill="rgb(214,92,38)" rx="2" ry="2" />
<text  x="30.50" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="55.6" y="1941" width="0.1" height="15.0" fill="rgb(249,109,5)" rx="2" ry="2" />
<text  x="58.57" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="168.7" y="1573" width="0.2" height="15.0" fill="rgb(221,47,43)" rx="2" ry="2" />
<text  x="171.71" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (46 samples, 0.23%)</title><rect x="620.4" y="1861" width="2.7" height="15.0" fill="rgb(230,22,25)" rx="2" ry="2" />
<text  x="623.42" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (177 samples, 0.89%)</title><rect x="681.4" y="1861" width="10.4" height="15.0" fill="rgb(251,80,36)" rx="2" ry="2" />
<text  x="684.36" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="196.8" y="1589" width="0.2" height="15.0" fill="rgb(250,16,13)" rx="2" ry="2" />
<text  x="199.79" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="160.3" y="1685" width="5.6" height="15.0" fill="rgb(218,217,40)" rx="2" ry="2" />
<text  x="163.26" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="389" width="0.1" height="15.0" fill="rgb(222,169,13)" rx="2" ry="2" />
<text  x="1190.52" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.3" y="1413" width="0.1" height="15.0" fill="rgb(217,73,41)" rx="2" ry="2" />
<text  x="162.25" y="1423.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="539.4" y="1893" width="0.2" height="15.0" fill="rgb(222,88,1)" rx="2" ry="2" />
<text  x="542.44" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="517.6" y="1957" width="0.3" height="15.0" fill="rgb(221,163,40)" rx="2" ry="2" />
<text  x="520.63" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="190.5" y="1701" width="0.4" height="15.0" fill="rgb(205,64,18)" rx="2" ry="2" />
<text  x="193.46" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="687.7" y="1845" width="0.4" height="15.0" fill="rgb(248,154,51)" rx="2" ry="2" />
<text  x="690.69" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (78 samples, 0.39%)</title><rect x="165.9" y="1701" width="4.6" height="15.0" fill="rgb(228,212,41)" rx="2" ry="2" />
<text  x="168.93" y="1711.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="1126.6" y="2037" width="0.1" height="15.0" fill="rgb(206,157,36)" rx="2" ry="2" />
<text  x="1129.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1333" width="0.2" height="15.0" fill="rgb(238,222,38)" rx="2" ry="2" />
<text  x="1190.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="157.7" y="1765" width="0.1" height="15.0" fill="rgb(249,40,19)" rx="2" ry="2" />
<text  x="160.71" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="79.2" y="1285" width="0.2" height="15.0" fill="rgb(213,166,48)" rx="2" ry="2" />
<text  x="82.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1541" width="0.4" height="15.0" fill="rgb(239,41,32)" rx="2" ry="2" />
<text  x="1190.81" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="181" width="0.6" height="15.0" fill="rgb(220,21,4)" rx="2" ry="2" />
<text  x="1189.75" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="133.8" y="1589" width="0.1" height="15.0" fill="rgb(230,142,34)" rx="2" ry="2" />
<text  x="136.77" y="1599.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (80 samples, 0.40%)</title><rect x="576.0" y="1909" width="4.7" height="15.0" fill="rgb(239,182,7)" rx="2" ry="2" />
<text  x="578.97" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="821" width="0.4" height="15.0" fill="rgb(216,25,5)" rx="2" ry="2" />
<text  x="1190.81" y="831.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (6 samples, 0.03%)</title><rect x="1101.7" y="1877" width="0.4" height="15.0" fill="rgb(212,65,30)" rx="2" ry="2" />
<text  x="1104.75" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (3 samples, 0.02%)</title><rect x="575.4" y="1909" width="0.2" height="15.0" fill="rgb(214,46,54)" rx="2" ry="2" />
<text  x="578.38" y="1919.5" ></text>
</g>
<g >
<title>__strxfrm_l (25 samples, 0.13%)</title><rect x="1170.5" y="2021" width="1.5" height="15.0" fill="rgb(247,87,39)" rx="2" ry="2" />
<text  x="1173.49" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (2 samples, 0.01%)</title><rect x="729.8" y="1877" width="0.2" height="15.0" fill="rgb(209,83,32)" rx="2" ry="2" />
<text  x="732.83" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (161 samples, 0.81%)</title><rect x="46.1" y="2037" width="9.5" height="15.0" fill="rgb(217,86,52)" rx="2" ry="2" />
<text  x="49.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="187.9" y="1797" width="0.1" height="15.0" fill="rgb(219,104,16)" rx="2" ry="2" />
<text  x="190.86" y="1807.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (6 samples, 0.03%)</title><rect x="1101.7" y="1845" width="0.4" height="15.0" fill="rgb(230,21,48)" rx="2" ry="2" />
<text  x="1104.75" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="1269" width="0.1" height="15.0" fill="rgb(229,182,14)" rx="2" ry="2" />
<text  x="1190.52" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1477" width="0.1" height="15.0" fill="rgb(233,34,47)" rx="2" ry="2" />
<text  x="162.43" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.5" y="1557" width="0.1" height="15.0" fill="rgb(236,116,1)" rx="2" ry="2" />
<text  x="1190.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1317" width="0.1" height="15.0" fill="rgb(225,73,19)" rx="2" ry="2" />
<text  x="219.17" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="79.6" y="1253" width="0.1" height="15.0" fill="rgb(231,5,31)" rx="2" ry="2" />
<text  x="82.63" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.4" y="1909" width="0.2" height="15.0" fill="rgb(216,13,20)" rx="2" ry="2" />
<text  x="1190.40" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="2037" width="0.6" height="15.0" fill="rgb(222,24,34)" rx="2" ry="2" />
<text  x="1190.64" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (5 samples, 0.03%)</title><rect x="1121.4" y="2053" width="0.3" height="15.0" fill="rgb(221,97,2)" rx="2" ry="2" />
<text  x="1124.43" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (7 samples, 0.04%)</title><rect x="518.5" y="2005" width="0.4" height="15.0" fill="rgb(229,96,6)" rx="2" ry="2" />
<text  x="521.52" y="2015.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="82.0" y="1237" width="0.1" height="15.0" fill="rgb(239,131,7)" rx="2" ry="2" />
<text  x="85.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="1186.6" y="1941" width="0.7" height="15.0" fill="rgb(250,23,52)" rx="2" ry="2" />
<text  x="1189.63" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.71%)</title><rect x="55.8" y="421" width="20.2" height="15.0" fill="rgb(252,186,45)" rx="2" ry="2" />
<text  x="58.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="485" width="0.4" height="15.0" fill="rgb(231,146,39)" rx="2" ry="2" />
<text  x="1190.81" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="511.1" y="1973" width="0.1" height="15.0" fill="rgb(233,103,33)" rx="2" ry="2" />
<text  x="514.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="821" width="0.2" height="15.0" fill="rgb(226,204,37)" rx="2" ry="2" />
<text  x="1190.64" y="831.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (537 samples, 2.69%)</title><rect x="540.7" y="1925" width="31.8" height="15.0" fill="rgb(230,94,46)" rx="2" ry="2" />
<text  x="543.74" y="1935.5" >fa..</text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="170.4" y="1605" width="0.1" height="15.0" fill="rgb(228,156,28)" rx="2" ry="2" />
<text  x="173.36" y="1615.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="175.6" y="1605" width="0.1" height="15.0" fill="rgb(209,162,11)" rx="2" ry="2" />
<text  x="178.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1141" width="0.1" height="15.0" fill="rgb(235,164,36)" rx="2" ry="2" />
<text  x="219.17" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.39%)</title><rect x="190.4" y="1733" width="4.6" height="15.0" fill="rgb(246,228,11)" rx="2" ry="2" />
<text  x="193.40" y="1743.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (553 samples, 2.77%)</title><rect x="540.4" y="1973" width="32.7" height="15.0" fill="rgb(218,43,25)" rx="2" ry="2" />
<text  x="543.39" y="1983.5" >De..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (116 samples, 0.58%)</title><rect x="978.3" y="2053" width="6.9" height="15.0" fill="rgb(251,133,34)" rx="2" ry="2" />
<text  x="981.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (77 samples, 0.39%)</title><rect x="176.6" y="1701" width="4.6" height="15.0" fill="rgb(232,203,34)" rx="2" ry="2" />
<text  x="179.63" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="517.6" y="1989" width="0.3" height="15.0" fill="rgb(205,228,20)" rx="2" ry="2" />
<text  x="520.63" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1557" width="0.1" height="15.0" fill="rgb(253,218,54)" rx="2" ry="2" />
<text  x="162.43" y="1567.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="86.4" y="1653" width="0.1" height="15.0" fill="rgb(223,15,23)" rx="2" ry="2" />
<text  x="89.37" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (3 samples, 0.02%)</title><rect x="152.6" y="1765" width="0.1" height="15.0" fill="rgb(243,151,7)" rx="2" ry="2" />
<text  x="155.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.3" y="1877" width="0.4" height="15.0" fill="rgb(217,42,12)" rx="2" ry="2" />
<text  x="191.33" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="806.7" y="2021" width="0.2" height="15.0" fill="rgb(233,220,33)" rx="2" ry="2" />
<text  x="809.73" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="758.6" y="2005" width="0.5" height="15.0" fill="rgb(226,229,28)" rx="2" ry="2" />
<text  x="761.62" y="2015.5" ></text>
</g>
<g >
<title>std::locale::~locale (3 samples, 0.02%)</title><rect x="334.2" y="1989" width="0.2" height="15.0" fill="rgb(241,176,22)" rx="2" ry="2" />
<text  x="337.21" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.4" y="1413" width="0.1" height="15.0" fill="rgb(212,105,43)" rx="2" ry="2" />
<text  x="162.43" y="1423.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="181.1" y="1653" width="0.1" height="15.0" fill="rgb(248,114,15)" rx="2" ry="2" />
<text  x="184.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.4" y="1989" width="0.2" height="15.0" fill="rgb(235,52,1)" rx="2" ry="2" />
<text  x="1190.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.4" y="1125" width="0.1" height="15.0" fill="rgb(226,29,28)" rx="2" ry="2" />
<text  x="219.41" y="1135.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (5 samples, 0.03%)</title><rect x="495.8" y="1957" width="0.3" height="15.0" fill="rgb(221,165,33)" rx="2" ry="2" />
<text  x="498.76" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (65 samples, 0.33%)</title><rect x="166.5" y="1605" width="3.9" height="15.0" fill="rgb(228,38,14)" rx="2" ry="2" />
<text  x="169.52" y="1615.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="650.9" y="1845" width="0.6" height="15.0" fill="rgb(254,201,49)" rx="2" ry="2" />
<text  x="653.86" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1365" width="0.4" height="15.0" fill="rgb(237,101,51)" rx="2" ry="2" />
<text  x="1190.81" y="1375.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="334.5" y="1989" width="0.1" height="15.0" fill="rgb(231,152,34)" rx="2" ry="2" />
<text  x="337.51" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (481 samples, 2.41%)</title><rect x="159.8" y="1941" width="28.5" height="15.0" fill="rgb(234,105,39)" rx="2" ry="2" />
<text  x="162.84" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.5" y="1797" width="0.1" height="15.0" fill="rgb(254,198,6)" rx="2" ry="2" />
<text  x="218.46" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.5" y="405" width="0.1" height="15.0" fill="rgb(229,216,33)" rx="2" ry="2" />
<text  x="1190.52" y="415.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.70%)</title><rect x="55.8" y="293" width="20.1" height="15.0" fill="rgb(231,210,10)" rx="2" ry="2" />
<text  x="58.81" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="55.3" y="1813" width="0.1" height="15.0" fill="rgb(230,97,50)" rx="2" ry="2" />
<text  x="58.28" y="1823.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="691.3" y="1733" width="0.1" height="15.0" fill="rgb(230,27,35)" rx="2" ry="2" />
<text  x="694.29" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="193.4" y="1557" width="0.1" height="15.0" fill="rgb(250,195,53)" rx="2" ry="2" />
<text  x="196.36" y="1567.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (6 samples, 0.03%)</title><rect x="1101.7" y="1893" width="0.4" height="15.0" fill="rgb(214,143,7)" rx="2" ry="2" />
<text  x="1104.75" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.04%)</title><rect x="678.5" y="1765" width="0.4" height="15.0" fill="rgb(245,175,21)" rx="2" ry="2" />
<text  x="681.47" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1333" width="0.1" height="15.0" fill="rgb(251,55,24)" rx="2" ry="2" />
<text  x="219.17" y="1343.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.02%)</title><rect x="1112.0" y="1925" width="0.2" height="15.0" fill="rgb(238,36,11)" rx="2" ry="2" />
<text  x="1114.98" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.5" y="1429" width="0.2" height="15.0" fill="rgb(251,32,16)" rx="2" ry="2" />
<text  x="191.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1187.6" y="1797" width="0.6" height="15.0" fill="rgb(231,178,8)" rx="2" ry="2" />
<text  x="1190.64" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.4" y="1653" width="0.1" height="15.0" fill="rgb(253,2,42)" rx="2" ry="2" />
<text  x="162.43" y="1663.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="154.5" y="1669" width="0.1" height="15.0" fill="rgb(215,70,48)" rx="2" ry="2" />
<text  x="157.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="1109" width="0.4" height="15.0" fill="rgb(242,179,45)" rx="2" ry="2" />
<text  x="1190.81" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="117" width="0.6" height="15.0" fill="rgb(236,27,7)" rx="2" ry="2" />
<text  x="1189.75" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="981" width="0.6" height="15.0" fill="rgb(243,169,26)" rx="2" ry="2" />
<text  x="1189.75" y="991.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.02%)</title><rect x="522.7" y="1877" width="0.2" height="15.0" fill="rgb(223,194,11)" rx="2" ry="2" />
<text  x="525.66" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.42%)</title><rect x="195.0" y="1733" width="4.9" height="15.0" fill="rgb(238,171,32)" rx="2" ry="2" />
<text  x="198.01" y="1743.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="725.8" y="1845" width="0.3" height="15.0" fill="rgb(206,208,15)" rx="2" ry="2" />
<text  x="728.81" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1253" width="0.2" height="15.0" fill="rgb(208,75,45)" rx="2" ry="2" />
<text  x="1190.64" y="1263.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (839 samples, 4.20%)</title><rect x="586.2" y="1893" width="49.6" height="15.0" fill="rgb(227,158,2)" rx="2" ry="2" />
<text  x="589.20" y="1903.5" >onmt:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="159.3" y="1493" width="0.1" height="15.0" fill="rgb(224,14,7)" rx="2" ry="2" />
<text  x="162.25" y="1503.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.0" y="1797" width="0.1" height="15.0" fill="rgb(248,210,50)" rx="2" ry="2" />
<text  x="90.97" y="1807.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (334 samples, 1.67%)</title><rect x="222.1" y="1973" width="19.7" height="15.0" fill="rgb(226,135,22)" rx="2" ry="2" />
<text  x="225.08" y="1983.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (93 samples, 0.47%)</title><rect x="1166.5" y="2037" width="5.5" height="15.0" fill="rgb(237,163,23)" rx="2" ry="2" />
<text  x="1169.47" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="597" width="20.4" height="15.0" fill="rgb(246,194,1)" rx="2" ry="2" />
<text  x="58.81" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1189" width="0.1" height="15.0" fill="rgb(244,105,41)" rx="2" ry="2" />
<text  x="219.17" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.5" y="1205" width="0.2" height="15.0" fill="rgb(212,3,34)" rx="2" ry="2" />
<text  x="191.51" y="1215.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="140.8" y="1589" width="0.1" height="15.0" fill="rgb(245,9,32)" rx="2" ry="2" />
<text  x="143.81" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (7 samples, 0.04%)</title><rect x="1019.1" y="2053" width="0.4" height="15.0" fill="rgb(250,165,3)" rx="2" ry="2" />
<text  x="1022.11" y="2063.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="208.1" y="1637" width="0.2" height="15.0" fill="rgb(226,120,19)" rx="2" ry="2" />
<text  x="211.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.8" y="565" width="0.4" height="15.0" fill="rgb(214,7,9)" rx="2" ry="2" />
<text  x="1190.81" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (37 samples, 0.19%)</title><rect x="73.4" y="37" width="2.2" height="15.0" fill="rgb(246,119,9)" rx="2" ry="2" />
<text  x="76.42" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="1301" width="0.2" height="15.0" fill="rgb(241,166,33)" rx="2" ry="2" />
<text  x="1190.64" y="1311.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (32 samples, 0.16%)</title><rect x="325.3" y="1973" width="1.9" height="15.0" fill="rgb(213,12,49)" rx="2" ry="2" />
<text  x="328.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.8" y="629" width="0.4" height="15.0" fill="rgb(228,88,40)" rx="2" ry="2" />
<text  x="1190.81" y="639.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (13 samples, 0.07%)</title><rect x="130.3" y="1909" width="0.8" height="15.0" fill="rgb(209,104,38)" rx="2" ry="2" />
<text  x="133.35" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (846 samples, 4.24%)</title><rect x="817.3" y="2037" width="50.0" height="15.0" fill="rgb(239,185,23)" rx="2" ry="2" />
<text  x="820.32" y="2047.5" >std::..</text>
</g>
<g >
<title>__interceptor_memcpy (22 samples, 0.11%)</title><rect x="999.7" y="2053" width="1.3" height="15.0" fill="rgb(246,195,29)" rx="2" ry="2" />
<text  x="1002.67" y="2063.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24 samples, 0.12%)</title><rect x="509.4" y="1893" width="1.4" height="15.0" fill="rgb(214,22,15)" rx="2" ry="2" />
<text  x="512.41" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="101" width="0.6" height="15.0" fill="rgb(238,177,21)" rx="2" ry="2" />
<text  x="1189.75" y="111.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (4 samples, 0.02%)</title><rect x="1101.3" y="1909" width="0.3" height="15.0" fill="rgb(229,176,38)" rx="2" ry="2" />
<text  x="1104.34" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="1733" width="0.7" height="15.0" fill="rgb(240,121,20)" rx="2" ry="2" />
<text  x="1189.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.7" y="1429" width="0.6" height="15.0" fill="rgb(229,102,4)" rx="2" ry="2" />
<text  x="1189.75" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.73%)</title><rect x="55.8" y="613" width="20.4" height="15.0" fill="rgb(249,73,30)" rx="2" ry="2" />
<text  x="58.81" y="623.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1317" width="0.1" height="15.0" fill="rgb(251,229,23)" rx="2" ry="2" />
<text  x="85.00" y="1327.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="517.0" y="1941" width="0.1" height="15.0" fill="rgb(254,85,29)" rx="2" ry="2" />
<text  x="519.98" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (5 samples, 0.03%)</title><rect x="748.7" y="1893" width="0.3" height="15.0" fill="rgb(232,138,52)" rx="2" ry="2" />
<text  x="751.69" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.5" y="341" width="0.1" height="15.0" fill="rgb(248,121,29)" rx="2" ry="2" />
<text  x="1190.52" y="351.5" ></text>
</g>
<g >
<title>[unknown] (554 samples, 2.78%)</title><rect x="55.7" y="1829" width="32.7" height="15.0" fill="rgb(217,141,48)" rx="2" ry="2" />
<text  x="58.69" y="1839.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.05%)</title><rect x="1186.7" y="869" width="0.6" height="15.0" fill="rgb(226,70,0)" rx="2" ry="2" />
<text  x="1189.75" y="879.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="518.5" y="1989" width="0.2" height="15.0" fill="rgb(233,52,45)" rx="2" ry="2" />
<text  x="521.52" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="762.7" y="2021" width="0.2" height="15.0" fill="rgb(236,137,13)" rx="2" ry="2" />
<text  x="765.70" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (461 samples, 2.31%)</title><rect x="55.8" y="1493" width="27.2" height="15.0" fill="rgb(241,20,11)" rx="2" ry="2" />
<text  x="58.75" y="1503.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (94 samples, 0.47%)</title><rect x="160.3" y="1653" width="5.5" height="15.0" fill="rgb(242,212,12)" rx="2" ry="2" />
<text  x="163.26" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.06%)</title><rect x="1186.6" y="2021" width="0.7" height="15.0" fill="rgb(246,113,2)" rx="2" ry="2" />
<text  x="1189.63" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="725.9" y="1813" width="0.2" height="15.0" fill="rgb(244,225,19)" rx="2" ry="2" />
<text  x="728.87" y="1823.5" ></text>
</g>
<g >
<title>page_fault (134 samples, 0.67%)</title><rect x="933.8" y="2037" width="7.9" height="15.0" fill="rgb(234,35,41)" rx="2" ry="2" />
<text  x="936.82" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="211.3" y="1701" width="0.1" height="15.0" fill="rgb(240,109,46)" rx="2" ry="2" />
<text  x="214.27" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (253 samples, 1.27%)</title><rect x="132.9" y="1781" width="14.9" height="15.0" fill="rgb(248,12,18)" rx="2" ry="2" />
<text  x="135.89" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="140.9" y="1589" width="0.4" height="15.0" fill="rgb(234,55,29)" rx="2" ry="2" />
<text  x="143.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (83 samples, 0.42%)</title><rect x="200.2" y="1669" width="4.9" height="15.0" fill="rgb(239,109,21)" rx="2" ry="2" />
<text  x="203.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (464 samples, 2.32%)</title><rect x="160.0" y="1861" width="27.4" height="15.0" fill="rgb(227,120,7)" rx="2" ry="2" />
<text  x="162.96" y="1871.5" >s..</text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 0.05%)</title><rect x="132.1" y="1877" width="0.5" height="15.0" fill="rgb(220,103,24)" rx="2" ry="2" />
<text  x="135.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="187.5" y="1765" width="0.1" height="15.0" fill="rgb(244,222,42)" rx="2" ry="2" />
<text  x="190.51" y="1775.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="762.8" y="1861" width="0.1" height="15.0" fill="rgb(225,198,30)" rx="2" ry="2" />
<text  x="765.76" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (71 samples, 0.36%)</title><rect x="139.4" y="1621" width="4.2" height="15.0" fill="rgb(231,20,48)" rx="2" ry="2" />
<text  x="142.39" y="1631.5" ></text>
</g>
</g>
</svg>
